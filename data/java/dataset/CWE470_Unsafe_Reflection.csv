input,label
"public void ASD04ZM ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void 2H69RX0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void SUBGXNIG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void MLFFTBZ ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void KKYUT0EG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PMWV46GG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void IHXZ7KC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3ZU76K5 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void KEIQT3DG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void KEGYG0AG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void SRYZ7WO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GUISHXW ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8OSM1LEG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void JF1BV81G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void B0HRR98 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QM6TSOV ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8TLUONNG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void LNNJ5H0G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void H2AO7XH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void D2SJJ0T ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void MQ1QZJTG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void J5AXO4JG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 3Y42L77 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HTB7KKH ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void BGIOGXWG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void JQAZ9W5G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void O5YYK9L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AT8W0FT ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void AD8QU0DG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void JVBCCQFG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void N4DDWG7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BK9D4GD ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 74ROBTGG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void Y75H1RUG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 3BKE3Y6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XGJMSNE ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void VOBHX3GG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 46Z673SG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void HYAVC3E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YYEBTAU ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void Y7Q0V2DG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void POVDWMXG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void F9INPV7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZJHT3LB ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void DR5TYC9G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void VKSH2G9 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 662RCI9 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void XQ7URT4G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PUFE0MDG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 16JR726 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FC45CWL ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 0TH0W0PG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void P80DD0EG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 79OILDG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8LHLU8R ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 16PNP8WG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void WS7MZW9G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void DNYVL86 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void W3CHT43 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void L4SP1IIG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 71TD6CY ( ) throws Throwable { goodG2B ( ) ; },0
"public void 0GZ069W ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void A5FHMG4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void CRA23D8 ( ) throws Throwable { goodG2B ( ) ; },0
public void 3HQ36R8 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String PYMQ1BD_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void EAD37E1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void U6RY8ZLG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 4WD3405G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void 9NW9F7ZG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 3USP5M6G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void NUAJA6R ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__connect_tcp_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void GQ5FFWM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void ZIGLYADG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__connect_tcp_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void U7TEYW3G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__connect_tcp_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String UJJT3ZXSource ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__connect_tcp_22a . badPublicStatic ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String ZCAULFXG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__connect_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String ML2YM1DG2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__connect_tcp_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void 5STA6ZG ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void 9OEMTAA ( ) throws Throwable { goodG2B ( ) ; },0
"private void T1FG7XGG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void T0AKXBOSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 5XCN65V ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void DL4VOUX ( ) throws Throwable { goodG2B ( ) ; },0
private void KLR9Y2LG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 2QDETNNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String MXH6UAQSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void 4WPVVRR ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String I5H0E4ZG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void 5IHGU75G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 5F23ZG2 ( ) throws Throwable { goodG2B ( ) ; },0
private void MW2IJ15Sink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 6MRTBC2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void RWV8GV0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4XOJ4KQG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void UACJNGVG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void GFHPURP ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void LDGJBO0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void TUSJ893G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void AIXAGDESink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void V6WEF59G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 0TJFZFO ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void VFJ0NGN ( ) throws Throwable { goodG2B ( ) ; },0
"private void G29N9AKG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 2X0JA1RSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_52c ( ) ) . badSink ( data ) ; },1
public void 69771IQG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void TAW8260Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void TQC72WPG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void W782OJE ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void ZTBVEOZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void RW7MDAQG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void 8XBWNV1Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_53c ( ) ) . badSink ( data ) ; },1
public void VULRE7HG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void AHQVCXMSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_53d ( ) ) . badSink ( data ) ; },1
public void RGDANBRG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void RILWJJ4Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WMCDV9MG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void V0JO416 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void YEFVSRA ( ) throws Throwable { goodG2B ( ) ; },0
"private void 42LDTLNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void IOBWLJ5Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54c ( ) ) . badSink ( data ) ; },1
public void 90PIEWIG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void HYINWDJSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54d ( ) ) . badSink ( data ) ; },1
public void IA71IPPG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 248Y1PYSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54e ( ) ) . badSink ( data ) ; },1
public void 0ZDT2G7G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__connect_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 6764Y77Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void XCGLF24G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void PXATTT4 ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__connect_tcp_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void QKS5E9X ( ) throws Throwable { goodG2B ( ) ; },0
private void FRESCUQG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__connect_tcp_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 2MAO3KLSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String ANF0XX3G2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void HNWTPXK ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__connect_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4J8TNWP ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5U7UCO5G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__connect_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void 1QVME1WSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 6MLAFO0G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void ZFP3TFX ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__connect_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void XLC2UH3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5RFPK2KG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void X3PQ6DLSink ( CWE470_Unsafe_Reflection__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 0G5XC0HG2BSink ( CWE470_Unsafe_Reflection__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 9AYJHTP ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_68b ( ) ) . badSink ( ) ; }",1
public void ANXQTO6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LA28CDEG2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
public void ABY80FYSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__connect_tcp_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void F254F5GG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__connect_tcp_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 90I1G74 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__connect_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void JJFCREL ( ) throws Throwable { goodG2B ( ) ; },0
"private void LK8EFEDG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void IJM9OYQSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void L8F01EDG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void VZE4F19 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void S8XZS1X ( ) throws Throwable { goodG2B ( ) ; },0
"private void PV2ZXNNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 17FLQ5FSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 8CXIXS6G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void E7YKCIH ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 3GFVC6M ( ) throws Throwable { goodG2B ( ) ; },0
"private void SXZ5WPXG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 9T240JUSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 5BCGIYRG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void SGC5A0M ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void LHTFEZJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void DDI7WYHG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void VASTWKBSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void UNTLNYTG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void EXELKS8 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DN440AF ( ) throws Throwable { goodG2B ( ) ; },0
"private void G9PSKREG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void R34BTZUSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void TJ4PZ82G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void OSOFQZJ ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE470_Unsafe_Reflection__connect_tcp_81_base baseObject = new CWE470_Unsafe_Reflection__connect_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void W5RC1VH ( ) throws Throwable { goodG2B ( ) ; },0
"private void 49ZYD1RG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__connect_tcp_81_base baseObject = new CWE470_Unsafe_Reflection__connect_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void WVB8TUE ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void 88ANKJQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void ETMTVD2G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void PG4GA4K ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void CK8MKZQG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void KOMM16BG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void KYN2KQQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R2OS617 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void N7YLZZBG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void X6YX9YAG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 5T2JA6Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5NTJRZP ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void LZSREI4G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void CEX9TL7G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void ORJS5MI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CLLRKO2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5YE8K7AG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void REPVDBOG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void VUJYMOW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AHB2SZY ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void DOQMER7G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 3BM0KRSG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void SYU49LW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RJ34414 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void KL6Q93BG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void FN7IS9EG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 0W65IIW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MB5OE6B ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RZKQDO4G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void P16JHP6G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void O62Q966 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OJ2GQ4L ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void KEQU21GG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 7DXZ70WG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void BH642YO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MBZYOR4 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 3CJ9188G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void IFHVD4LG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void FY1BKZT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 363L3QM ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void Z2A5KDGG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 99SURNZG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void TLU56E4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 86GF97A ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void I84QSFSG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void JKFHSWW ( ) throws Throwable { goodG2B ( ) ; },0
"public void RYUSQ34 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void O2G9TACG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ECG8K3MG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 8VTFWZQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XCCLYJE ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void N39NJHEG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void GN54D82G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void WL0880R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U3XTTFB ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void Z6TL8DYG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 7FWR9TGG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void Z6EY2F5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XJJCJB1 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void S1998DHG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 56LTUK2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void I3ZELXN ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void 06LHOHJG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void 6YBWAHD ( ) throws Throwable { goodG2B ( ) ; },0
public void PAYEEZQ ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String FJ1EDEF_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void EJVLDCF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void P8UGX12G2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String K3LN4TNG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void NO5FX9GG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String XMN9FK1G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void 2EVIUIS ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__console_readLine_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void BJLMN3I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void L0W4HJ8G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__console_readLine_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void 0AL5CP7G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__console_readLine_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String VYFZDN2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__console_readLine_22a . badPublicStatic ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String J9QNDNRG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__console_readLine_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String HA6UR86G2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__console_readLine_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void 01IWXCP ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void MDRG329 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 419XPQNG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void N9JQBIQSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 48JNXMH ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void AUBLBJ5 ( ) throws Throwable { goodG2B ( ) ; },0
private void VSZW1UVG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 8HUVFCEG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String QWU5NA3Source ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void PE9QJ8T ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String AKN3USOG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void GM89BG1G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 5GIYIPR ( ) throws Throwable { goodG2B ( ) ; },0
private void H86MGK7Sink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void BOHR6TJ ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void JVYAIHQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 0GP5UXXG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void XP6IIMIG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void I10LKON ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_51b ( ) ) . badSink ( data ) ; }",1
public void ECG0C6O ( ) throws Throwable { goodG2B ( ) ; },0
"private void Q5XK131G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void 6TK1058Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WAWB0JVG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void XID6ROT ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_52b ( ) ) . badSink ( data ) ; }",1
public void AF3NX0N ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4237IGSG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void EEH3Y0RSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_52c ( ) ) . badSink ( data ) ; },1
public void E5OFHTWG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_52c ( ) ) . goodG2BSink ( data ) ; },0
public void QTZ1FFMSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 8WJDO5CG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void E95HZ3M ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_53b ( ) ) . badSink ( data ) ; }",1
public void BALIUZM ( ) throws Throwable { goodG2B ( ) ; },0
"private void CKB97TLG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void VN20JYVSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_53c ( ) ) . badSink ( data ) ; },1
public void 3BHSFQQG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_53c ( ) ) . goodG2BSink ( data ) ; },0
public void QU1B6H9Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_53d ( ) ) . badSink ( data ) ; },1
public void UVAA0IQG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_53d ( ) ) . goodG2BSink ( data ) ; },0
public void MCNAGARSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 3A4OK34G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void PG7WIB6 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_54b ( ) ) . badSink ( data ) ; }",1
public void 4M9RN6B ( ) throws Throwable { goodG2B ( ) ; },0
"private void FFEHXC4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void RQWUI23Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54c ( ) ) . badSink ( data ) ; },1
public void VGH8V66G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 6GG5RCESink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54d ( ) ) . badSink ( data ) ; },1
public void KI7JVF8G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 1Z1AXR5Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54e ( ) ) . badSink ( data ) ; },1
public void ARD76GQG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__console_readLine_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 5GSL5SVSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WPBUMLGG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void EP1N6O3 ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__console_readLine_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void YAQ9RYT ( ) throws Throwable { goodG2B ( ) ; },0
private void V6K3K3ZG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__console_readLine_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String X5JK0N2Source ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String M95RA76G2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void IQMOMKO ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__console_readLine_66b ( ) ) . badSink ( dataArray ) ; }",1
public void RE1NYQQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZXLJ7LOG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__console_readLine_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void ERTFZAFSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void HHLH3TQG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 8G2P29C ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__console_readLine_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 9GEKAHC ( ) throws Throwable { goodG2B ( ) ; },0
"private void XE4H6A2G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__console_readLine_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void OLM2CVPSink ( CWE470_Unsafe_Reflection__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void L0ZLC9WG2BSink ( CWE470_Unsafe_Reflection__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void AAMHNMQ ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_68b ( ) ) . badSink ( ) ; }",1
public void BYTT8BH ( ) throws Throwable { goodG2B ( ) ; },0
"private void OL75BR8G2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_68b ( ) ) . goodG2BSink ( ) ; }",0
public void VUEOSYCSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__console_readLine_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void FW1WMGCG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__console_readLine_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void NQ8I7UL ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__console_readLine_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 2F88UB2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void L98J10TG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__console_readLine_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void YR43Y9XSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void IHR2M6RG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void H81MNQJ ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_72b ( ) ) . badSink ( dataVector ) ; }",1
public void F3NIKQT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5A1UCK5G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void X9VN8P9Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void OAJ47GJG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void Q6MGABB ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 73DY42U ( ) throws Throwable { goodG2B ( ) ; },0
"private void P8MB7P0G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void DAJR4YPSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WMHD7SNG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 4I3X9RZ ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void UE4VPK5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 36KUM40G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__console_readLine_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void I8OBEAPSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void JCNQ1UNG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 5GOS1H7 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__console_readLine_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void HYC42B4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void O24V9YMG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__console_readLine_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GP9VSHCSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 79XKLBFG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 57TEAFT ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE470_Unsafe_Reflection__console_readLine_81_base baseObject = new CWE470_Unsafe_Reflection__console_readLine_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void QIU4YO9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FHB3ECBG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__console_readLine_81_base baseObject = new CWE470_Unsafe_Reflection__console_readLine_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void BHZZ3ZR ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void HT49IFV ( ) throws Throwable { goodG2B ( ) ; },0
"private void FEOIB5FG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void VO5W1U1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void ZIH1YX2G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void NQG1J8MG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 0Y9VYPI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2YP5G32 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void PDPAK7FG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void CWD94SWG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void B072S41 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DQ65WPZ ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void ITSE38EG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void NL939Y1G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 6TIEJ28 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PKWFFYT ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void C11TDZRG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void IEACBTZG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 4992E94 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V6GCE7L ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void UIGS4JQG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void CHQ97C2G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void J4387XL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0DFLZU4 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void FVM97XCG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void EF1DKH6G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 9CAYTSF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1JMSGIF ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void LIW77XXG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void DMH9GVFG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void O8NPZA2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BYPDM39 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 54OISBUG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 1OXDOR1G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void L4NSH3S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LWIBWK4 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 4ESGSZDG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 90OEM3SG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 0P1XDJW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9M7TY2O ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 1VNHNAFG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ZOOAJA9G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void S3GB53U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KJV1NZP ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void GKBTFZHG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void LKZJWH4 ( ) throws Throwable { goodG2B ( ) ; },0
"public void VB1TLC0 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void LVJM2ZEG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void BN2DK51G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 6EL91MD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UBSAPY4 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void C3M1B16G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 5FOV32XG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void U70SGU9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FDXWY81 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5PAXS5QG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void W9T1YROG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void HSLQIBV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 12BLORG ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void Y55NWKDG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void SRIBXDB ( ) throws Throwable { goodG2B ( ) ; },0
"public void 1QKS1Q6 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void 7K9SHH6G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void R002NQD ( ) throws Throwable { goodG2B ( ) ; },0
public void L3DSP9Y ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String YKTTYSH_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
public void RSLEOB8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void MMV1S0EG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String UCMFWGUG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void 9UKNGH5G2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String SH9CZREG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void RSTF3KS ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__database_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void TJCN78W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void NMIPFB7G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__database_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void WPA3ISIG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__database_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String SJ5GWT5Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__database_22a . badPublicStatic ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
"public String MQDAVOAG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__database_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 3GVNU15G2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__database_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void C8NXF4E ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void 95BC9UB ( ) throws Throwable { goodG2B ( ) ; },0
"private void DNCX6UWG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void 3BTQQC5Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void LAMZAQY ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void G17ET2K ( ) throws Throwable { goodG2B ( ) ; },0
private void UUU34KOG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 8OJC8M2G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String CGST4OOSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void IOI3RLB ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String S73XV8HG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void VXAUYS8G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void F8NL7WG ( ) throws Throwable { goodG2B ( ) ; },0
private void WV1IH33Sink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void R48N88M ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 2I757PZ ( ) throws Throwable { goodG2B ( ) ; },0
private void VL7HOQ3G2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void A4HOA2KG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void VYQTQPH ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_51b ( ) ) . badSink ( data ) ; }",1
public void IPNJC2H ( ) throws Throwable { goodG2B ( ) ; },0
"private void JRN423HG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void ZXWFPKYSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void G59324UG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 5CEIGVW ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_52b ( ) ) . badSink ( data ) ; }",1
public void M3XISQN ( ) throws Throwable { goodG2B ( ) ; },0
"private void O7VY7GUG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 4DLHERNSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_52c ( ) ) . badSink ( data ) ; },1
public void AQXQ3ICG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GP774MTSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 7JBP0UBG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void XLNP14F ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_53b ( ) ) . badSink ( data ) ; }",1
public void YPRP7H2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void QJSRW8AG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void RB4XHFZSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_53c ( ) ) . badSink ( data ) ; },1
public void PONPDXBG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 1J8OWIISink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_53d ( ) ) . badSink ( data ) ; },1
public void CUBW7JHG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_53d ( ) ) . goodG2BSink ( data ) ; },0
public void J9U0BA9Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void KPZBTMPG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void WI26J4R ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_54b ( ) ) . badSink ( data ) ; }",1
public void N17CZRW ( ) throws Throwable { goodG2B ( ) ; },0
"private void JQEG5SFG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void SAED267Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54c ( ) ) . badSink ( data ) ; },1
public void A3L10TBG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54c ( ) ) . goodG2BSink ( data ) ; },0
public void WC6BETCSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54d ( ) ) . badSink ( data ) ; },1
public void 92LIFZDG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 3GNE500Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54e ( ) ) . badSink ( data ) ; },1
public void 26SZ3BZG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__database_54e ( ) ) . goodG2BSink ( data ) ; },0
public void QBHC8S4Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void AJ58UZKG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void KN78HCQ ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__database_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void D248HB8 ( ) throws Throwable { goodG2B ( ) ; },0
private void S8JDDWTG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__database_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 00XFGVLSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String OSGJ1CHG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void VWKBT57 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__database_66b ( ) ) . badSink ( dataArray ) ; }",1
public void IOUH1M9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void YB7RGFNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__database_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void LB12TQRSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void SE31S2PG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 7PPAFBI ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__database_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 0SHR42O ( ) throws Throwable { goodG2B ( ) ; },0
"private void JYP9AMNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__database_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void QQW5MB2Sink ( CWE470_Unsafe_Reflection__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void LUQJCSBG2BSink ( CWE470_Unsafe_Reflection__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void KUT96EO ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_68b ( ) ) . badSink ( ) ; }",1
public void CHV5DW3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void X2NRV47G2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_68b ( ) ) . goodG2BSink ( ) ; }",0
public void U3F3PPVSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__database_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void TO2XN3SG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__database_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void ANQP5F4 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE470_Unsafe_Reflection__database_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void CUXGCS7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void JMV48UKG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__database_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void B17W746Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void HY0AN18G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void X5HTLY8 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_72b ( ) ) . badSink ( dataVector ) ; }",1
public void HXJ7FLT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6TBCNSVG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void ZBKORLUSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 7MY8W3KG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 0O7VPIF ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ZG3MDFL ( ) throws Throwable { goodG2B ( ) ; },0
"private void YBGF7W2G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void JSH1IX0Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void A6VXXYDG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void DXT48B7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void B61DUGL ( ) throws Throwable { goodG2B ( ) ; },0
"private void UU90UM1G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__database_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void ITZE3NOSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 53GBULPG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 4R8LGCD ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__database_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 87RLYZQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void HH57JS9G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__database_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void TBX64YGSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ZU88FJ3G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void CT42UH8 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE470_Unsafe_Reflection__database_81_base baseObject = new CWE470_Unsafe_Reflection__database_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RSQ2027 ( ) throws Throwable { goodG2B ( ) ; },0
"private void H053EEBG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__database_81_base baseObject = new CWE470_Unsafe_Reflection__database_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 71KGIR6 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void GIIF2R2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 90WTIW4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void FDVZZKT ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void YJ3BO0PG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 5AOYXA2G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void G9KG4R1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 813O63S ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void VSYOF9OG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void GWWS2JIG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void U6KK8ZY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3I9G038 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 2V9NOSGG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void RCD306AG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void C50LCD5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7PLGXH5 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void DTBYJCUG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void LJ0O63GG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 2NIQRF3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CYW25VY ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 6E0BY4YG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void VZ73INAG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void NUXR7K7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FEEF31H ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 3V9GVFXG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void DE3J6EDG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void UNFRASX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HOBT6F4 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RY6SA3QG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0WYBWCKG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void S14T721 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3XBEB6U ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void CM4KAM6G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0HV5VJ6G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 45GXIYL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MT89EVK ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void R99NWG2G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void SUT6MTKG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void O5TFF25 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VRWKX89 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 49MQ974G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0259GU3G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 0PYZD7Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SRCMH9C ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void QV4V35KG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void M32MREH ( ) throws Throwable { goodG2B ( ) ; },0
"public void KYIULDU ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void V8VG8SOG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void C8K9KLDG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void XS17H2Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3YRMEPA ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void EH3LRDOG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void H8MI95NG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void R6C1UWR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3B51SQI ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void MDLW2QDG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0A2Q8RQG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void QEDW7RA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AL2CBEU ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void DCURPQRG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void D37DC13 ( ) throws Throwable { goodG2B ( ) ; },0
"public void R977OXG ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void VKAL0QSG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void JAL2ZGS ( ) throws Throwable { goodG2B ( ) ; },0
public void T3EL713 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 1KSG0DS_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
public void VGHKMX2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void YHY39NRG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String PEB91FUG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void FYEWSAKG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String EXGND7SG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void TN9XHCD ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__Environment_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void Y86C7KO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void SDR0Z3DG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__Environment_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void N9GKZJWG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__Environment_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 49W9ZEHSource ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Environment_22a . badPublicStatic ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
"public String 11G42T3G2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Environment_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 2MLFV34G2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Environment_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void QZBRLF6 ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void 5SC9N8J ( ) throws Throwable { goodG2B ( ) ; },0
"private void RKQW4IYG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void 6JIKWZVSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void E4L35H2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void AFTDN35 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0JEMTQNG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void JBRTZXDG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String RRFEUBOSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
public void 9IGK37F ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 3Z0Y5RQG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void AQPSKZTG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void SF2NO3J ( ) throws Throwable { goodG2B ( ) ; },0
private void N626B0OSink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 8C79D8V ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void JIPOVG1 ( ) throws Throwable { goodG2B ( ) ; },0
private void ADP740PG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 8FBNFVRG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void OF8R9NC ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_51b ( ) ) . badSink ( data ) ; }",1
public void 5GT1FKC ( ) throws Throwable { goodG2B ( ) ; },0
"private void NRHH83QG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void 4PR5QONSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void LFEUWSTG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 74MS8A1 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_52b ( ) ) . badSink ( data ) ; }",1
public void AKWTM3M ( ) throws Throwable { goodG2B ( ) ; },0
"private void PRB6W7QG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void FDVJVX5Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_52c ( ) ) . badSink ( data ) ; },1
public void BI1Q4Y7G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_52c ( ) ) . goodG2BSink ( data ) ; },0
public void G51PB5WSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 1I7TEK5G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 3GX829Q ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_53b ( ) ) . badSink ( data ) ; }",1
public void S3JEX8X ( ) throws Throwable { goodG2B ( ) ; },0
"private void IURE70XG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void ZXGX294Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_53c ( ) ) . badSink ( data ) ; },1
public void SM5AFNEG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_53c ( ) ) . goodG2BSink ( data ) ; },0
public void I5DB6F1Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_53d ( ) ) . badSink ( data ) ; },1
public void NKL11DWG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 5HAC06RSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void VZ6DU4GG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void BQ484AL ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_54b ( ) ) . badSink ( data ) ; }",1
public void G1PMQO4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1LUDNGZG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void TI0MRS5Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54c ( ) ) . badSink ( data ) ; },1
public void KKUYWQVG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2MCL51TSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54d ( ) ) . badSink ( data ) ; },1
public void EUAQQUXG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54d ( ) ) . goodG2BSink ( data ) ; },0
public void O8KP20SSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54e ( ) ) . badSink ( data ) ; },1
public void Z7CICUXG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Environment_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 29XLJBPSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void GJKLYECG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void J93J9FR ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__Environment_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 563BFA0 ( ) throws Throwable { goodG2B ( ) ; },0
private void O6ESV96G2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__Environment_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 073QO8NSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String Q411VPIG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void 3Z7CULA ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__Environment_66b ( ) ) . badSink ( dataArray ) ; }",1
public void CXYX8NN ( ) throws Throwable { goodG2B ( ) ; },0
"private void LLEF0F4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__Environment_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void YUA6K9MSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 6OZKT1ZG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 5H8QORK ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__Environment_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 400J0OH ( ) throws Throwable { goodG2B ( ) ; },0
"private void P86D1J8G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__Environment_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void UZPJL52Sink ( CWE470_Unsafe_Reflection__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void PFAGRJVG2BSink ( CWE470_Unsafe_Reflection__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void AFFCZOT ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_68b ( ) ) . badSink ( ) ; }",1
public void 14A27DM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7DAD2NBG2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_68b ( ) ) . goodG2BSink ( ) ; }",0
public void NXV75NPSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__Environment_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 54397PHG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__Environment_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void E7OOQDY ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE470_Unsafe_Reflection__Environment_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 06NF4JP ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7MC64KQG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Environment_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void VJV3KOTSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void R20WDBJG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void YHZE76L ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_72b ( ) ) . badSink ( dataVector ) ; }",1
public void F9ECWD2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void NPXY5MGG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void VZIJ6YPSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void V7TIJLGG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void IOZMJUV ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void W8XHCCN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 33WENKCG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void T5ANO2PSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 1BPADHZG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 10BYFP7 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void RL9V6E5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void DW62DX5G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Environment_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void AAIPLDDSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void RLHBH9QG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void U17WXW0 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__Environment_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DMBLMYA ( ) throws Throwable { goodG2B ( ) ; },0
"private void RWOSRT8G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__Environment_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ASW7G6NSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void LV2BU84G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void RHD9JRI ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE470_Unsafe_Reflection__Environment_81_base baseObject = new CWE470_Unsafe_Reflection__Environment_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void Q0D94DJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6NY0P50G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__Environment_81_base baseObject = new CWE470_Unsafe_Reflection__Environment_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 366AMFD ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void IN7FKX2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void Q6KMDING2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void Z9BPV2Z ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RSK739BG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 37KXCMXG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 25LTMRO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6NGGAGG ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 2DI6Z73G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void W7NYJCMG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void SHPLG1Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UGQ8UHP ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 1P4TO3UG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void P6IPT6MG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 8F1VN2R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GWF9JDR ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void MHUR2PSG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void M1LJCGAG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 6S6SWDD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V5FMSZ3 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void DTQ7KZ9G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 6I15P1KG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void SOELBSR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YK2Y7H7 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void F50EB5RG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void W03MWWMG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 4ZSFD6M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NIE8QZL ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void R4CXBO9G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 42Y43ZWG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void M6V4VRZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KAAODWW ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 0XWDI8YG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void AAOX7C0G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void D9NDHQ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S9AJ39I ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void M8QRGK3G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void BAG9BGDG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void CYHYSX3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 41GP511 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RRKBMHMG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void IU9CQ9MG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void TCDWWM6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1JPL7EH ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 6BH5AZVG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 3REETJQ ( ) throws Throwable { goodG2B ( ) ; },0
"public void OZU8KZF ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void B2S0H1MG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ANXO8FQG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 2FLMAKC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UJF8GY0 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5RNX202G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ZY2KAP1G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void A8RMGFZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 64C9R4F ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void JZ1TFQBG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ZLM2N5OG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 91M14UL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8YMTHC2 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 119OBWWG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void URT7E0H ( ) throws Throwable { goodG2B ( ) ; },0
"public void 67VIXBM ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void KTSG27VG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void 9T8YJDR ( ) throws Throwable { goodG2B ( ) ; },0
public void AQMGC7W ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 0C42MK2_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void TAZZCP0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void YRJ706YG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String VQ5KH1CG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void PCJGE3AG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String N59K8KXG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void NT10C0M ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__File_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void T8PED9R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void CBGMO5RG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__File_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void VBAYNWNG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__File_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 8GAT8LHSource ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__File_22a . badPublicStatic ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String PDO53I7G2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__File_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String OQ99HHMG2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__File_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void 0XCA19M ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void IN3NCMJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void ANUUQYJG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void T7POVFYSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 1YFIN7P ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void M2QXKR8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4WDEN45G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void KFPY9JQG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String DGZCY6DSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void L5O575E ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 9S7NE0YG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void 7QV2CEYG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 2X84B34 ( ) throws Throwable { goodG2B ( ) ; },0
private void RTRVH7NSink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void IICTSGZ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void FBS4HKY ( ) throws Throwable { goodG2B ( ) ; },0
private void 9NI9A4WG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 8YSE03OG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void N7615B6 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_51b ( ) ) . badSink ( data ) ; }",1
public void 6XRET8T ( ) throws Throwable { goodG2B ( ) ; },0
"private void FV9MX49G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void ZTHJQVLSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 15T2PU9G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void QBAJQ9Z ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_52b ( ) ) . badSink ( data ) ; }",1
public void FDVVNWO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8H7ZCZUG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void YRMZ1ADSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_52c ( ) ) . badSink ( data ) ; },1
public void OK3PVJ3G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 6FPB294Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void P9Q5SDIG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void O4CFFAF ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_53b ( ) ) . badSink ( data ) ; }",1
public void NCX36U0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 74KVPTZG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void V7ERFWBSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_53c ( ) ) . badSink ( data ) ; },1
public void AU1KFP5G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_53c ( ) ) . goodG2BSink ( data ) ; },0
public void P6BI34MSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_53d ( ) ) . badSink ( data ) ; },1
public void YDB9HA4G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_53d ( ) ) . goodG2BSink ( data ) ; },0
public void UXVUGY3Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void L1L8CH9G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void IX348XF ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_54b ( ) ) . badSink ( data ) ; }",1
public void 9P7TCFT ( ) throws Throwable { goodG2B ( ) ; },0
"private void YUY2PXLG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void HZJOYTCSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54c ( ) ) . badSink ( data ) ; },1
public void MV1UZYDG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 0HKUQYVSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54d ( ) ) . badSink ( data ) ; },1
public void 07D2KSMG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YRUZDGFSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54e ( ) ) . badSink ( data ) ; },1
public void RYRWPVNG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__File_54e ( ) ) . goodG2BSink ( data ) ; },0
public void QH8T025Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void EYPX7GDG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void F7QAX43 ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__File_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void KLV8KKM ( ) throws Throwable { goodG2B ( ) ; },0
private void ZO5EYMCG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__File_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 45HSGEPSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String 20W9YGGG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void S5JY0FX ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__File_66b ( ) ) . badSink ( dataArray ) ; }",1
public void E5NBYYJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void I7FLFOYG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__File_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void ZWNS0IOSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void DNNMBVVG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 5PJLDGR ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__File_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void HNRYFCZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void V20C19TG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__File_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void TDIF1YMSink ( CWE470_Unsafe_Reflection__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void IJB3N11G2BSink ( CWE470_Unsafe_Reflection__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void E7MXTUP ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_68b ( ) ) . badSink ( ) ; }",1
public void EROWY9L ( ) throws Throwable { goodG2B ( ) ; },0
"private void PUO36YQG2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_68b ( ) ) . goodG2BSink ( ) ; }",0
public void HRKNQC4Sink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__File_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WSR6D68G2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__File_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void CLNB8EO ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__File_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void MK6LWYN ( ) throws Throwable { goodG2B ( ) ; },0
"private void UO89Q0LG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__File_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void ILOEDSGSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void VI08WVOG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void T0CY49I ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CYBENX8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void A3PFYNMG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void CMG8TVTSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void JJJRK5PG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void M6FOTM1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void EB411AM ( ) throws Throwable { goodG2B ( ) ; },0
"private void N67XRDTG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 8RETPU7Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void A0G4NOMG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void VUWTDCO ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void MHH8OX0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void I87DKQ4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__File_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void J882PPFSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void XGO7NETG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 7QMMONE ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__File_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void ATGU4MA ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2XYTBYUG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__File_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void NOHIH69Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void XEUEOJZG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void IFZYR89 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE470_Unsafe_Reflection__File_81_base baseObject = new CWE470_Unsafe_Reflection__File_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RAFLXKL ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4M0GBO9G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__File_81_base baseObject = new CWE470_Unsafe_Reflection__File_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void SD1CNWS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void Z61K356 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KXS8O5KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void FHFDDOU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8QVNDHBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void K7KPR08G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 3PESK8V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4EKYW10 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 0ZWFCFBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 31Y857YG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 0W3N7N0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OAZQOB0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void BMZGIXUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 4QUMX8HG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 2Y331Z6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4YS2B8C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void X5CYHJPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ID0QDE0G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void CUF0K0X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1MBGKCE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void K78KH06G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void IOLID0IG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void HVNI0J2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YS0S73D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void JWA4SF7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 6OQMAVXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 9505PJ0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 99QMKUV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void TRZIQ54G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void NQ747MDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void SXNH20M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void UYYS4LI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 1LYJVPZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 5CH7JMVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void M7ARQGQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FITXMT0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void PXXXJSFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void HGUVYNMG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void LPPECWS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RL88VE4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 52A3Q8MG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ZHRZQ72G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void IS7TXNO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TV4BI41 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void V0D5SHUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void I1UTJDH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void QTJ8QJW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void X9UCFBUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void D9F0MKRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 3VK8GXV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void P1U5FX7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RGE04ELG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void E3J8GV5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void O19V5O9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void X7VWBXR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5923J4TG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void I1SBW40G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void JAY830T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 2DQHCF6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void EVZ6HE5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void G4B62O2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void P0I7ZW4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void 50NGYPZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"public void TKWYRQC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void SWDF5H8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String 04KRWGW_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public void DXNJKHP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void FB9AX7FG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String WVHYURMG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"private void 5QOHMR9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String ZZ136HNG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void CC45YEJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getCookies_Servlet_22b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 8XWDA45 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void Q6LWGPZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__getCookies_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ATM2JGTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getCookies_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String ESLVWBFSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getCookies_Servlet_22a . badPublicStatic ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public String JQ94HC3G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getCookies_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String CGSHDB2G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getCookies_Servlet_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void WVH8YYP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"public void MD3YMS4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void LXEOZFMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"private void S622FOTSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void H9TJU8Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badSink ( data , request , response ) ; }",1
"public void LMRBSXD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void P9MJ5QMG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void W6AQ8WMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data , request , response ) ; }",0
"private String 140A0VMSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public void G193J43 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String IZA3GBVG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"private void 9DEI6B7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void KCJRII5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JY3OXAZSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 9QYCJSV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void YZCO1JY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OQO8RK5G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 3HUB1K0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void FOKTVXN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void M8EMNF9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RFSFT88G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 81TXE47Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void X53F9O1G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void Z1P7H1Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void EC4XT1I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EY7RZPQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void J4P1KOQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void T7UW2T9G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void JCPNTWNSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void RLG6KZ0G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void BOHFRC5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void M6W35E6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GLOZGTSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void V771OMHSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void FVPLZUCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GVWFK9ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 48HRGZSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7URC7HBSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 15FS19FG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void E4NB3I1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4KWXXVG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZQYBM8SG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 76L9EU8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 72VGCFWG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void E0LX8FASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 2JRVW40G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KGR3IZQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void VIXJ8JCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getCookies_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void VOGY9R5Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void I1BDF0DG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void R6X7B3G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getCookies_Servlet_61b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void IYC9449 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7LUV1CPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getCookies_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String UZJKPWESource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public String X2DWH0YG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void D5K6C2H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 7RU25QI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NAKWCZXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void ZHD3YRISink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void BTDY40IG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void J71BYX1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 0JMCVN7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 659EMGCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 2WZ1TCFSink ( CWE470_Unsafe_Reflection__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void ZHXR2RYG2BSink ( CWE470_Unsafe_Reflection__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void PR25OU0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void YPSIUKU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RZ6T3CMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void KZAFL4PSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getCookies_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void YJQ3WBRG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getCookies_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 6KVIQ8X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE470_Unsafe_Reflection__getCookies_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void OZZL9BW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7KT503EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void ECY57LOSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 81I4SDVG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void XP5WPSJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void EPA6J63 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 93IBU96G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 7W7JGG5Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void NQZ4P7FG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void WL152KB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void G6UODNZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2QT5U0QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 399KT1VSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void AU2F4NTG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void F9MRC9U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void VWT5WJ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Z1COPWJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void TAOLSJLSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 3H02MZ6G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void U0JSR7N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void GGEZDSH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void X3ZIWZ1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getCookies_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ABUA106Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void WWAYFJGG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void IZFQSNY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE470_Unsafe_Reflection__getCookies_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getCookies_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 41DFRRD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void H2NJEPIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__getCookies_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getCookies_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 7OX6UE6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void VKND3HU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TR5A7Y7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void YODB2LQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 86P8XUBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 67WA4UWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void T6K3T1K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SAYJNVT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void YGA9RULG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 6WN9QN6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void CBS9JIV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OMJEODT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 4LRNXUOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 7TDPZG9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void S2253CU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void M5GBGFO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 4BZS2QDG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void Q00LWTYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void S0RNPOD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6Q2V8PA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void E08PNG0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void RPTWF14G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void ONB4W5F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9K8OCXC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void VDA74I7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void N57OJMZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void W4UH8J9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 2P3G5ER ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 9OB6WNGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void CPVAJ61G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void VIYQSG7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ELBJMWO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void FPKZO8VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void XAL8233G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 6EJ5XFI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4P9ICLZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void YO6BXQZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 6PBHYX4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 04LUGTT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void C45D1H8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void HDM5UA3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 5B9B5IUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void C3PK9L3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PG5P4IS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void U2CJD6XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void N40COK1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void W9K6321 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void EU7I2LSG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 886S17GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 3ORJLKZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PSRUPOE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8TRYITQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 8D9XRSUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void RQOHOKK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void MCWDWIX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 3YAZXBOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void WS1CFRXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 1DAFCXY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EFJ7G2V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 98PYIKDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void WQ2AEPK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void GK301BR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void HDWVLEZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"public void 0HCZV26 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void GXM5SFE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String KFPOZGM_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public void 4NMJ909 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void SJ2LM55G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String ZWLD6J3G2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"private void 7JQPQF6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String BCV1U3KG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void WV7J95U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getParameter_Servlet_22b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void IEBIG76 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void Z3OQXWIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__getParameter_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void YQ6JD14G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getParameter_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String Y6LPVA5Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getParameter_Servlet_22a . badPublicStatic ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public String SOHEAS8G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getParameter_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 4C362KQG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getParameter_Servlet_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void JEQMG19 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"public void P6LSI2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 29NLI2RG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"private void VM1JDFLSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void OIPHVGI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badSink ( data , request , response ) ; }",1
"public void NOEBL8S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YEW9Y00G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void S8OO9CQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data , request , response ) ; }",0
"private String LIN2H3SSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public void 4PTEOLN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String YJLYITMG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"private void FTS0429G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void V82ZWF3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 21YUPR5Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void JC3EZNW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataBad = data ; badSink ( request , response ) ; }",1
"public void PPFQOC1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZTD714VG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void LRU8FQXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void ZRLZBZT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void PV6I6Q6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void N8RMQNKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XMWW0L6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 62EDKR1G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void RJ195OP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void O95WG07 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void H78GIRQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 71GDF29Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6RSTHBEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7MZ90WSSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void FXAZ4QWG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 1AET5SX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LV98GAV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9V4F3FQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PQH2FXSSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void MFCH2KMG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MWA8B6VSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void ZDZ3FUIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void RW92A00Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void NRK7W49G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 5LF229Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void E13MAV8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JHWNL89G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0H6M3UISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void B7ACBPGG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GZSZVTRSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9A0AK4CG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HXEW9BYSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void NFUKKCDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getParameter_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9WPD1WLSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void R5HHA9DG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 70QUAC4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getParameter_Servlet_61b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 35NN40K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9AQV7X7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getParameter_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String 23EGYSRSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public String 0MA60F0G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void LSZZ9UY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void PGYVW1D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void AVCZFYNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void QHFPCH6Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void LAF5TEDG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 7QXL6NU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void FCBI2F6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void B9BEZSWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void RLJOENSSink ( CWE470_Unsafe_Reflection__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void JPPW950G2BSink ( CWE470_Unsafe_Reflection__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void PUANTD2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void HJ0LSV2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GJ2JDZ8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void CKXSIZASink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getParameter_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void M2HWKLYG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getParameter_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 4BAJBC6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void XA07OP1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 32KSYGVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void EDYF8BQSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void ZAB5VPSG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void VQ4A7DB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void GB8U93D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void L560EQBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void PMJWSLNSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void UY3CLEZG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void T0Z6PJ1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void E50QN08 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4BC343EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 4SYPK3LSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void HLPCGC3G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void AU7N6TM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void AWG4D99 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QJ3MAMMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void U7TKHNDSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 5126QEBG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void P3IZH8Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 0UXRY5C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void PWH8N0JG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getParameter_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HTUI2AMSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void YIS1O4WG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void XLHJO3U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE470_Unsafe_Reflection__getParameter_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getParameter_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 9E49EKE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void O5ICDTIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__getParameter_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getParameter_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void EZEJE5R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 1D55C41 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ELIDADFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void W70MGLB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 7RKUHXOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 8SAS2GKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void FOR768X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AE8KOB1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void IUZMZ47G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void J4OUGNBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 5S1COSX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void KL9VZHF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void N7XYY8UG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 3PG7NZ2G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void PRXH7SP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void Y5L7PMC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void THC5SWVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 49O27K9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 1I1YB0F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JF0WC16 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void GE8AP39G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 9836GZOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void BU6X8CT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 92NIJOG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RITXLYXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 5DP9EQWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void SDEISZP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void US0OES2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void UP5MC12G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void KX1EO69G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void W0IW5UK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NM4Y2CR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void YX4EZ5LG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 8N5N5U1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 4HSIJ53 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7PURIP7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void RQPJIH7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 4N2I3XCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void E7NNJSI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3HDMJHG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void HNCKEZXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void M5P8H9AG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void FHHE0MO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void K6SCSFX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 1MGIJNPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void R00WM26 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void UNBGGN9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void GGMDOC4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void RIPOUZOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void SMI15KL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4X8TJZQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 7LLBO08G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void H4RUANTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void F7IUIYC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9732LWY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void ZSV4JHUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void H98GBDHG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 7IXMRTK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0Z9U923 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 65BGYCGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void IL6OSCC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void M4GZ6GO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void 75602KYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"public void NR3QFDU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void TT4MRTJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String 3O2E20Y_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public void FXH3H0O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void ZIZ5SN8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String 26TVHKOG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"private void A7CVAFJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private String LA6M2MPG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void P5HV3J4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_22b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 1PNTTKY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void KSUYTRWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void RDJJQBTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String 5YUQLN6Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getQueryString_Servlet_22a . badPublicStatic ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public String DS4LB6DG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getQueryString_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String D18CL5BG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__getQueryString_Servlet_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void DJFS40V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"public void TG2Z01Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 81D4MOLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
"private void 2CVOORGSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 6FCH6KH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badSink ( data , request , response ) ; }",1
"public void CDZI94H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void F0QISK2G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void W6OSIGKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data , request , response ) ; }",0
"private String DU86CZPSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public void Z15X80T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private String NELFYVLG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"private void ON6FPRDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 5G103KQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RPLL72MSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void R6VBFRU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void 3CGH288 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void URLZ171G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void QNFCIXBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void DM1WP8X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 0PX1BR2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KMHSXMSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void X6IM4TRSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void GP5P5G9G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 920AP5D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void TLYPSC4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void LE5Z1IJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KO6UB0ESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void I4JYI85G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TPTO22ESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void DXUYBC3G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void IN7X2ZH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LU1O6PB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void D0N7L1QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Y355ENKSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 8YKN87DG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 2EL7W8SSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void QKGSC0JG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void P1SCSSOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void LOIQJLIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 70HDEL6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 1WMZL34 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 87P2Y9WG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void U8HYXSVSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void YWZKK4PG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6Y1UT41Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void R7NOGTXG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0J5E7WUSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void RGCYGFAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void P9CCY09Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void AW9EY1OG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void KVSCSI5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_61b ( ) ) . badSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void XJB05VL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8G65PMDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public String BSAVG3VSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public String 9RWJCGUG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void SEA748P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void UU17ILU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void M6J7KGKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void HJXOGZ0Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 390WANKG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void JTEFMXO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void H3GD1TQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UW3U3CVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void VC5788JSink ( CWE470_Unsafe_Reflection__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void XFNZQ2JG2BSink ( CWE470_Unsafe_Reflection__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 6BDYRZZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void S1W4IYS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DPAD1L0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void ILD9TXNSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getQueryString_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void TF657KOG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE470_Unsafe_Reflection__getQueryString_Servlet_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void JHWIBUM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 1BBN2V4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QIVFKTGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void G5UK8V4Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void XP85LXGG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void Q66EYW2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 6QM1VUB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VR6JRI9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void M6A1EOKSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void NI5GHRSG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void NDV5FRR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void Z6Y00UX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q5VGLPRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void TQTDMMDSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void GGRL6MZG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void A9NOYXW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void VL72FZY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 632MOC7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void UM8BJJZSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void H8PYXEOG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void UR26SC0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void R19FM1E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DX6WT1NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__getQueryString_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 91SL5G3Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void YR10RP3G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void A5V22DD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE470_Unsafe_Reflection__getQueryString_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getQueryString_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void VD94GZT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SVMO473G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__getQueryString_Servlet_81_base baseObject = new CWE470_Unsafe_Reflection__getQueryString_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void K971OZI ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void CYTJXUS ( ) throws Throwable { goodG2B ( ) ; },0
"private void W2WM1A9G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 3I7FKJG ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void U7Q1IZ4G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void DYYHX6AG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void Q5AXF4U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DJVNRQ0 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void LOXD8O5G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void YDHP1QCG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void HS9240A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MPBB8P2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void WTLSN81G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0VP2LFKG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void V8DGPLG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0XCSOSE ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void SV98W6TG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void A4XRQ09G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 6RYYOXL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HK3XS3V ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void FVFN6JGG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void V4VRSXSG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 3SRDMFS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GOW8M9Y ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void HRBAADXG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void LDVLOQWG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 1CPKXE7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JOSTFIR ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void ZMO97R1G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void G3HKLQPG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void J6SYN9I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GKQXNPL ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void BGRILIGG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void M6WWCWEG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void GIR6IZU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5QCUR7Y ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void TRNP5VAG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PD8MHPXG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void IT3ERZP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VY4PQ35 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void TS9QAAXG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 9UMOV73G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void LTRQBC5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XAC23PR ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void S3M8TBYG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void FKX50LJ ( ) throws Throwable { goodG2B ( ) ; },0
"public void 6WFTXS7 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void AYW99KZG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0U0HDMNG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void OMCLR58 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ETR3B8G ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void OMHCMQXG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 2OA6P88G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 9SRQ6MC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q0PG9L0 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void XKEHAOIG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void IJKNFBEG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 4ABI2ZP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GTFNHMS ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 2AR6ZKCG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void YJ81ZES ( ) throws Throwable { goodG2B ( ) ; },0
"public void XHOCFVK ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void VSBMCBTG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void TZ3II24 ( ) throws Throwable { goodG2B ( ) ; },0
public void EBLGOAN ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 3LH70NF_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void M9EI7RC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void BYIQH2EG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 8ZGRGVPG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void U062K08G2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 66VGF87G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void 8W2S0U3 ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__listen_tcp_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void GE1ZNFX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void WO8NW2CG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__listen_tcp_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void 3QLDJZCG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__listen_tcp_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 6R0LPJISource ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__listen_tcp_22a . badPublicStatic ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String TMKT69XG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__listen_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 2ZRC64PG2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__listen_tcp_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void 7IWOE27 ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void QIUX6YE ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7KV3Y4GG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void RSSXT03Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void OEEMD7F ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 6ZLUITU ( ) throws Throwable { goodG2B ( ) ; },0
private void 0PVCA66G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 0PCKZ0NG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String G77YRPVSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void O8O9T2H ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String S2L1JP6G2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void TMJW16SG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void ZDUNQHZ ( ) throws Throwable { goodG2B ( ) ; },0
private void LGWJJ36Sink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 2Z105KQ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void MWBB6Q1 ( ) throws Throwable { goodG2B ( ) ; },0
private void AGLQFZJG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 1LIEV6VG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void 9EJ674C ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void V8SSRLH ( ) throws Throwable { goodG2B ( ) ; },0
"private void NSWQPVEG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void 4E0QJN0Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WY1DAE1G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 3VMRRHA ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void USSL56N ( ) throws Throwable { goodG2B ( ) ; },0
"private void WQ5KCNEG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void L1Z7KDGSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_52c ( ) ) . badSink ( data ) ; },1
public void Z8SUHNJG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void A2J08NMSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void T25DXRCG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void FR778S2 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void UKDVWEJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void X3MTE2NG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void VI2BEANSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_53c ( ) ) . badSink ( data ) ; },1
public void 71P2VJRG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void JNZQ7HLSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_53d ( ) ) . badSink ( data ) ; },1
public void B48GEDNG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void LLP87ZTSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void SOELY4KG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void Q7E1I2T ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void 2ODNTW2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void A605HV4G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void JKO4AKASink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54c ( ) ) . badSink ( data ) ; },1
public void DBZKR6LG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void DKT8V4YSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54d ( ) ) . badSink ( data ) ; },1
public void LRCVE3XG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VRUYDUJSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54e ( ) ) . badSink ( data ) ; },1
public void N3J8BSOG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__listen_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void DUQUF55Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void B50XP2LG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 0PDSWSA ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__listen_tcp_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void QT1KSZQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 7Y8VNBKG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__listen_tcp_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String A99Y83ASource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String RUV4LPQG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void XYYURT0 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__listen_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void OIP7WBC ( ) throws Throwable { goodG2B ( ) ; },0
"private void ORKTXBKG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__listen_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void VQDQ2I4Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void I4JXRH1G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void XETAL15 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__listen_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void RC9JVE8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void M1BE10OG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void NSO82ADSink ( CWE470_Unsafe_Reflection__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void ZISC0D8G2BSink ( CWE470_Unsafe_Reflection__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void HRDI5KR ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_68b ( ) ) . badSink ( ) ; }",1
public void KJOX5IO ( ) throws Throwable { goodG2B ( ) ; },0
"private void F3VV9H6G2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
public void RYYHAF3Sink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__listen_tcp_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 8MWI7NYG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__listen_tcp_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void Q1ME76Z ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__listen_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 6FRGKFQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void LAHN6FFG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void 5YZ9LWNSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 4DY9FN6G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void HGVDPJG ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void HDNZRPV ( ) throws Throwable { goodG2B ( ) ; },0
"private void HKF4KTBG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void ECHJ8DQSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void B2665CQG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 0MJO7J6 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void P2QWZA1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 32YM5J8G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void XK8W27ISink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 10NORKNG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void IMUP8OD ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void XJVVPND ( ) throws Throwable { goodG2B ( ) ; },0
"private void RPT4EOPG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void URIGO80Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 4WY7HQUG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 6JLCJOZ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void K6W7KGD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9685E44G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 9N00PQPSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void KXXXXIYG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VGC4CKO ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE470_Unsafe_Reflection__listen_tcp_81_base baseObject = new CWE470_Unsafe_Reflection__listen_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void EASX9OV ( ) throws Throwable { goodG2B ( ) ; },0
"private void QLNIIW9G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__listen_tcp_81_base baseObject = new CWE470_Unsafe_Reflection__listen_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 8ZQR16B ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void 7JA9OOJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9R2R05ZG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void QOZT99J ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 70LE5WGG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 643YX43G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void KW7KJUQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 234SRRN ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void CWXQW2MG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PJRZLVQG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void OUYNJN0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QD3JS9V ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void APA300RG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void B07074SG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void VVIO2TU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 99VG4PZ ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 02KQGWQG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void QB94AL8G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void JMKI2DU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KZDT09V ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void WLXRQDEG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void C2QNVWKG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 92LJ6PR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R944TBP ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void FG377HBG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void FQ31UZMG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void U4ETEG5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ACVUI6V ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void AQ7QPNSG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void N04GW61G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void YEIR5QY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZP4JW4P ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 6269WR9G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 78ZRKCTG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void BBXWFS1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OZZY8LC ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8HG1GCUG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void NB5WVS2G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void IJPR794 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U7KUZ5X ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5QH1ECJG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 9IUOSMXG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void GDF1ANY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FA06R1F ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 2AI5K5XG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void ACKRW39 ( ) throws Throwable { goodG2B ( ) ; },0
"public void C8PQR8W ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void IWVZWH7G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 7VK1V8PG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void H6LV2LB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1JU10U7 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void R8CXYUOG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void M7D5DJYG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void KSWAPI4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1LAYS5H ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 58M79AWG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PAO7AY8G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void CO20GEV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PWPZP66 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void UDHWGN6G2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void HEIJ4FY ( ) throws Throwable { goodG2B ( ) ; },0
"public void KJTUI0C ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void 41I4IY7G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void W0FWTWH ( ) throws Throwable { goodG2B ( ) ; },0
public void N4JX2LA ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String M03SDYN_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void 7596TVD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void NTKGZ60G2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 0HJCLNMG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void YU4KQVDG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String 02UP0DLG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void 6GMIE3E ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__PropertiesFile_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void O7QOXUD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 14OHQJCG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__PropertiesFile_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void K9EI3RMG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__PropertiesFile_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String NONDUDOSource ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__PropertiesFile_22a . badPublicStatic ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String 8N0T3JFG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__PropertiesFile_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 9A3C7HNG2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__PropertiesFile_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void 2SX8Q1C ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void Y0OJYQQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 25PLT9EG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void AGUBTCDSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void CU13TJK ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void PWFIOIM ( ) throws Throwable { goodG2B ( ) ; },0
private void 53ZRHA6G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 3H8945YG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String LO7AHGFSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void NPGRIT9 ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String 5GPMQUFG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void RFPR6S6G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void EYM8CFA ( ) throws Throwable { goodG2B ( ) ; },0
private void WRQKR5GSink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 1KCTI46 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void XZ83NBD ( ) throws Throwable { goodG2B ( ) ; },0
private void GUAMHZOG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 6M6CRWFG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void SKCMKEE ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_51b ( ) ) . badSink ( data ) ; }",1
public void 7JCLBMJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 42CNOQNG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void IHRH996Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void EG160S6G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void CN1ZPXE ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_52b ( ) ) . badSink ( data ) ; }",1
public void W4SVW3P ( ) throws Throwable { goodG2B ( ) ; },0
"private void OUJJ4JPG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 34OO4FOSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_52c ( ) ) . badSink ( data ) ; },1
public void NDW03EDG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_52c ( ) ) . goodG2BSink ( data ) ; },0
public void NMSW9LFSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void CA2COG0G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void GOM7Z2E ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_53b ( ) ) . badSink ( data ) ; }",1
public void 26QUEW5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void IAIWBQQG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void RSX4N0KSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_53c ( ) ) . badSink ( data ) ; },1
public void R97XDB9G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_53c ( ) ) . goodG2BSink ( data ) ; },0
public void HEKJZC8Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_53d ( ) ) . badSink ( data ) ; },1
public void L1UORBLG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_53d ( ) ) . goodG2BSink ( data ) ; },0
public void W5P27QASink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void TFA3A59G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void SD6Y4IS ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_54b ( ) ) . badSink ( data ) ; }",1
public void DUFC95X ( ) throws Throwable { goodG2B ( ) ; },0
"private void JZEHXQCG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void AGC3IZMSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54c ( ) ) . badSink ( data ) ; },1
public void F1HMB8SG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2KPTGVBSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54d ( ) ) . badSink ( data ) ; },1
public void 7H8SFGXG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54d ( ) ) . goodG2BSink ( data ) ; },0
public void URUD3Z9Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54e ( ) ) . badSink ( data ) ; },1
public void JTLSS2IG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__PropertiesFile_54e ( ) ) . goodG2BSink ( data ) ; },0
public void AP2UXS6Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void H508V7IG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void BH1J318 ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__PropertiesFile_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void PA8L4IR ( ) throws Throwable { goodG2B ( ) ; },0
private void 365MHVDG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__PropertiesFile_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String 2QI7QXSSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String J2Q6QCRG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void QRH3GOF ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__PropertiesFile_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 07308VJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void WKKME20G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void O63MEXISink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 3VGRFASG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void X4M01UD ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__PropertiesFile_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 0Z6END6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3XTMFYEG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void RENQCEISink ( CWE470_Unsafe_Reflection__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void MMOOJI7G2BSink ( CWE470_Unsafe_Reflection__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void AXP2ZZH ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_68b ( ) ) . badSink ( ) ; }",1
public void QZ5LTBW ( ) throws Throwable { goodG2B ( ) ; },0
"private void BYEELJKG2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_68b ( ) ) . goodG2BSink ( ) ; }",0
public void X9AC1HYSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__PropertiesFile_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void USWROX3G2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__PropertiesFile_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void JC8CCSW ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE470_Unsafe_Reflection__PropertiesFile_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KCU2BW2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 151T0ZSG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void J1RP8HGSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void WOU4S7LG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void Z4N88US ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_72b ( ) ) . badSink ( dataVector ) ; }",1
public void N86KZQE ( ) throws Throwable { goodG2B ( ) ; },0
"private void RLIIZPPG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void X0CG2VISink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void B2N121ZG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void CXRLTKL ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ALU1GIG ( ) throws Throwable { goodG2B ( ) ; },0
"private void U9OFDQCG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 6K6RIF7Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 5N5SPVEG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void TICQPFD ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 2I7XVWO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 170W5Z3G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void MI2ZONYSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void KEJZC6SG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void 1PBWG9I ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void CLNHWX3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5MNJT0OG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GMDF0FTSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 79A11NAG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 6J2DH55 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE470_Unsafe_Reflection__PropertiesFile_81_base baseObject = new CWE470_Unsafe_Reflection__PropertiesFile_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 9W16X9K ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9DQKTFCG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__PropertiesFile_81_base baseObject = new CWE470_Unsafe_Reflection__PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 98FZMCH ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
public void APGLWAQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void SC5EAN6G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void PWYEXQT ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void LKUE4PTG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void MHUKWJ2G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 8UKOQFW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9YZ6CRF ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void Y7Y1YQCG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 2255FPLG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void D0W7R1T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IIAZHGB ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 5BVM28YG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 9Y0505YG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void KDMFB0Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NCUQYRR ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void J0Y4LG5G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void C42FGGCG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void MJ6GT0M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DPQBU7E ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void XJE7ISLG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 95XL9GJG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void TWFS8YJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WZGWMAY ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 6EOZ3IHG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void 0FHKZCAG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void FGGCI4K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K6MO2E6 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 95ORLUKG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void PFJZNW2G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 6S9O0Y7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RMR8NYS ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void GJHEO9TG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ULSB8GVG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void M09O0M0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E5FQD83 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 8MXCV28G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void XFUMJJ6G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void D62A63Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8N3RVAZ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void OPU7C75G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void QIKX715G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void RQ08DNO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SKKNLSI ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 84ZEE6CG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""Testing.test"" ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 1GUXT4O ( ) throws Throwable { goodG2B ( ) ; },0
"public void 0DE3OOK ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void XNW8RG3G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void CP0WD7DG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void EJE7J78 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AYU2W9Y ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 9A47G0YG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""Testing.test"" ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void MFRNAAVG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""Testing.test"" ; } else { data = null ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void 2DU2FM9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4KHLW3P ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void 2EJTHJ7G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"private void ETSHRX5G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""Testing.test"" ; break ; default : data = null ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void LF2CTFN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RGP5C4O ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"private void I8N31WEG2B ( ) throws Throwable { String data ; while ( true ) { data = ""Testing.test"" ; break ; } Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
public void JI9R8DQ ( ) throws Throwable { goodG2B ( ) ; },0
"public void E14VH4D ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
"private void BROG4E1G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
public void WU7GXEJ ( ) throws Throwable { goodG2B ( ) ; },0
public void QQLU2Y7 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String FSPYGRR_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
public void ZPSPKFK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 8546014G2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String LLPRRCYG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
private void 5GW236EG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private String KP3PEI8G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
public void S59UNDY ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__Property_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 4XPOQG0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void V1F4WTRG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__Property_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void IP1IKC8G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__Property_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String TO5W0F6Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Property_22a . badPublicStatic ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
"public String I9TMW9UG2B1Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Property_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""Testing.test"" ; } return data ; }",0
"public String 1IL1FZAG2B2Source ( ) throws Throwable { String data ; if ( CWE470_Unsafe_Reflection__Property_22a . goodG2B2PublicStatic ) { data = ""Testing.test"" ; } else { data = null ; } return data ; }",0
"public void N94ZAB5 ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",1
public void R29K0KF ( ) throws Throwable { goodG2B ( ) ; },0
"private void J1VCOMIG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""Testing.test"" ; dataCopy = data ; } { String data = dataCopy ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } }",0
private void GABVYXWSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void 2RGOY1E ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void AFD6YBF ( ) throws Throwable { goodG2B ( ) ; },0
private void 81QUP9RG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void 4JNFZ4CG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; goodG2BSink ( data ) ; }",0
"private String R9TRDTUSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
public void I7EYXYX ( ) throws Throwable { String data = badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"private String CEWGCIJG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
private void 2V5USH5G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void MULJOSR ( ) throws Throwable { goodG2B ( ) ; },0
private void FOT788HSink ( ) throws Throwable { String data = dataBad ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
"public void AQQ8R4Z ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void QMXIIA2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 01QVP8OG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"private void J71HHJMG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void QI51SCR ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_51b ( ) ) . badSink ( data ) ; }",1
public void YF9QCP0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CHSRBHHG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_51b ( ) ) . goodG2BSink ( data ) ; }",0
public void XN3UUNNSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void HY2K5I3G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void DPUR887 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_52b ( ) ) . badSink ( data ) ; }",1
public void WS3FWRL ( ) throws Throwable { goodG2B ( ) ; },0
"private void P8VMTPUG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 7ZZI9T5Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_52c ( ) ) . badSink ( data ) ; },1
public void 3GX8NBIG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_52c ( ) ) . goodG2BSink ( data ) ; },0
public void JAXLI4HSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void VLCN7N4G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void PDASJT9 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_53b ( ) ) . badSink ( data ) ; }",1
public void 499F9VS ( ) throws Throwable { goodG2B ( ) ; },0
"private void TRBAT9OG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void S7O1E7USink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_53c ( ) ) . badSink ( data ) ; },1
public void EL4RQQ4G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 6KC3PTZSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_53d ( ) ) . badSink ( data ) ; },1
public void 0VWCTF3G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 1KWEWWBSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 07151WUG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void PC6ZF0K ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_54b ( ) ) . badSink ( data ) ; }",1
public void BJFF6XS ( ) throws Throwable { goodG2B ( ) ; },0
"private void 31GJQ3CG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void NRJ4DN9Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54c ( ) ) . badSink ( data ) ; },1
public void 0DM7TVPG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54c ( ) ) . goodG2BSink ( data ) ; },0
public void LG78JTWSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54d ( ) ) . badSink ( data ) ; },1
public void T42EAS0G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 02VS74ISink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54e ( ) ) . badSink ( data ) ; },1
public void B1U0IH1G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__Property_54e ( ) ) . goodG2BSink ( data ) ; },0
public void I34FQW5Sink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void HD17062G2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 69P0FGN ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__Property_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 5HSL3K5 ( ) throws Throwable { goodG2B ( ) ; },0
private void T6BXE2ZG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__Property_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public String MQ8WMEMSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String B6YY3UCG2BSource ( ) throws Throwable { String data ; data = ""Testing.test"" ; return data ; }",0
"public void 2JIAW4E ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__Property_66b ( ) ) . badSink ( dataArray ) ; }",1
public void SELNJGR ( ) throws Throwable { goodG2B ( ) ; },0
"private void PGO9SF5G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE470_Unsafe_Reflection__Property_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
public void IFW2S93Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void O7FUVA6G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void A51YGCQ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__Property_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 4C0PPJZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1LZAHHVG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE470_Unsafe_Reflection__Property_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
public void OEFDRLGSink ( CWE470_Unsafe_Reflection__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void V2RUKH6G2BSink ( CWE470_Unsafe_Reflection__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void JHB7COJ ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_68b ( ) ) . badSink ( ) ; }",1
public void 5SR3TSK ( ) throws Throwable { goodG2B ( ) ; },0
"private void AOQUI9SG2B ( ) throws Throwable { data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_68b ( ) ) . goodG2BSink ( ) ; }",0
public void 0YVX0GFSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__Property_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 1AB56D1G2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__Property_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 0D1QCKZ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE470_Unsafe_Reflection__Property_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 9NLS4CI ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8CNCSM6G2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ( new CWE470_Unsafe_Reflection__Property_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
public void K9D4QHJSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 2KPXKNXG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void OJGHQ2P ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 6AQ3Q4Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void E6EPCHFG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void YD53US7Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 9CSMQ21G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void ZSH3MMN ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 3QHWJS8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CM3Q90KG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void PJ9YMQZSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 0QZJLG0G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void RLO5AQ6 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GOPQ64C ( ) throws Throwable { goodG2B ( ) ; },0
"private void SQUZXWYG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE470_Unsafe_Reflection__Property_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 9UHONLUSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void 2PRHDXIG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void A07YIGB ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__Property_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void QUYZU95 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GBT9N2FG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE470_Unsafe_Reflection__Property_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 5ZA7SXPSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ST30S6PG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void SXRWM6S ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE470_Unsafe_Reflection__Property_81_base baseObject = new CWE470_Unsafe_Reflection__Property_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 3NRQ6H8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZEF25QDG2B ( ) throws Throwable { String data ; data = ""Testing.test"" ; CWE470_Unsafe_Reflection__Property_81_base baseObject = new CWE470_Unsafe_Reflection__Property_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
public void 7JT3OWZ ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__URLConnection_22b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 2ZMO5FB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void NNEBI6IG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE470_Unsafe_Reflection__URLConnection_22b ( ) ) . goodG2B1Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
private void 9ILGDP9G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE470_Unsafe_Reflection__URLConnection_22b ( ) ) . goodG2B2Source ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void CSPG3TGSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void BY3E1SUG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void A5KZ9XHSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_52c ( ) ) . badSink ( data ) ; },1
public void SPLRNO9G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_52c ( ) ) . goodG2BSink ( data ) ; },0
public void LIXPINHSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void O3CNEVSG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void W08AMSNSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_53c ( ) ) . badSink ( data ) ; },1
public void 26RQG8BG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_53c ( ) ) . goodG2BSink ( data ) ; },0
public void SSGBOGGSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_53d ( ) ) . badSink ( data ) ; },1
public void LLTV2QAG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_53d ( ) ) . goodG2BSink ( data ) ; },0
public void OYPJRQTSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void NVTUTBKG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 82YS6N8Sink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54c ( ) ) . badSink ( data ) ; },1
public void 6L1S0UNG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 3AO97ENSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54d ( ) ) . badSink ( data ) ; },1
public void EV3UPXFG2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54d ( ) ) . goodG2BSink ( data ) ; },0
public void JPRSF7OSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54e ( ) ) . badSink ( data ) ; },1
public void 28O27Z8G2BSink ( String data ) throws Throwable { ( new CWE470_Unsafe_Reflection__URLConnection_54e ( ) ) . goodG2BSink ( data ) ; },0
public void S9ZK5EZSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void TAZ7BUBG2BSink ( String data ) throws Throwable { Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void NKN0PDV ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__URLConnection_61b ( ) ) . badSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void MIV2JKX ( ) throws Throwable { goodG2B ( ) ; },0
private void 1G4NAUNG2B ( ) throws Throwable { String data = ( new CWE470_Unsafe_Reflection__URLConnection_61b ( ) ) . goodG2BSource ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 4B29GESSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 4HDBNJJG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void 0WTGC7LSink ( CWE470_Unsafe_Reflection__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void IEY8TBWG2BSink ( CWE470_Unsafe_Reflection__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void VLGIU40Sink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__URLConnection_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void HCMZ8EPG2BSink ( ) throws Throwable { String data = CWE470_Unsafe_Reflection__URLConnection_68a . data ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void Z6HUK5NSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void 2WVN7KBG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void TFNDUD9Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void DTK8E07G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
public void YIQ0D38Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },1
public void RMIH4N4G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; },0
"public void 19WQY7JSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",1
"public void MFWA8EWG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; }",0
"public void RK3I0PBSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 82D07E0G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Class < ? > tempClass = Class . forName ( data ) ; Object tempClassObject = tempClass . newInstance ( ) ; IO . writeLine ( tempClassObject . toString ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
