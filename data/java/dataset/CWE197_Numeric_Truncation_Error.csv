input,label
"public void EE29IB1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void JTV9LOG ( ) throws Throwable { goodG2B ( ) ; },0
private void U692X3OG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 4HAUN7E ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void G396QRMG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void VYKG9D8G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VD0YJM2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H95XJ72 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 7240EXPG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EBTQ2CPG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 3CDHJN8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SHZBZ2R ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1UWSI1OG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void D3T89C6G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PWO97UC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 83YRN9H ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WCP1UT6G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void YMN08J0G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HZAHKE8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5K1X7W6 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void OAASIYVG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void H5QYAQXG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1FT45DT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QKMQH1M ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KPGEKXHG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NK26LYSG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void S0YBALL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FV22EU6 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 3BM5JX4G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RN467YEG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2YOPAUT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q0950AY ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 7C0Y07ZG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 1WVR3VGG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4J5T0OY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DF8QNCK ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 39733V0G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BWI6NUHG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8WV7O3D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TV11R6W ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0U57DK7G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void JBMO979G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 9RYY97Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZWEICNH ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void NL1PZNNG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 89PK37L ( ) throws Throwable { goodG2B ( ) ; },0
"public void 2GXN7L8 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9L4FAQBG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void LTMWFXNG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void RUJQCW4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I1PMIKW ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void QTMCDX8G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void R7E1VE6G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2E1AUKT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M9YZW5G ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void K4BL86YG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Y5KT95SG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void H3TUOGA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H3ADESP ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 5VZYFQAG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EMZDO5J ( ) throws Throwable { goodG2B ( ) ; },0
"public void U7EU0SS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void TYKYWHXG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void JP0ATWY ( ) throws Throwable { goodG2B ( ) ; },0
public void O8ZFU4W ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int RYVW357_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void CA0I7MC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void KNL4BC2G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int KRX9ZLXG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void P4BYNDDG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int N7CZO60G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 7JH4547 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void FVL3W6R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 58NFJBKG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void VLSVIOTG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int AYSWYY0Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 2KZF7POG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int HU47R0IG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void JUBG7J4 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void RNND57K ( ) throws Throwable { goodG2B ( ) ; },0
private void OVREMGRG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void DB9XQFGSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void PIYQOXN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void E8HHHAU ( ) throws Throwable { goodG2B ( ) ; },0
private void TJ8HC7QG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void KH5ULX6G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int Q0B7UE8Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void 08L0FWT ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int 6CYULOCG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void QBHQ1N0G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 6NLPRZ4 ( ) throws Throwable { goodG2B ( ) ; },0
private void RYN392KSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void KJWEDGJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void D9RY0RY ( ) throws Throwable { goodG2B ( ) ; },0
private void IELJ278G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void ZDTMHSRG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void ITS5T1J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void O75W916 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1ODQG6SG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 96ZEHHXSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void B8IPZN7G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void P0V6X59 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void U9MW4KZ ( ) throws Throwable { goodG2B ( ) ; },0
private void VAWALCXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void KSJEEA4Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 4K0QN54G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void A1A9OQPSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 2RU8T82G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 0D1N2UF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void S9SRCZ8 ( ) throws Throwable { goodG2B ( ) ; },0
private void U3XK2ESG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void R6FE6IBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void RFO34Q2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 82X584SSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void D2OQ9ABG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void CHANEKWSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 66AXUHOG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 2J5PKUL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void 08206IB ( ) throws Throwable { goodG2B ( ) ; },0
private void R15AL17G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void GOIHW3OSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void A58C91CG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void O5IHNVPSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void 3OACGMSG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void OVBS1DRSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void 62AMG94G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void B44IKAISink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PVQIMFZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void HI6V14O ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3UZY0WE ( ) throws Throwable { goodG2B ( ) ; },0
private void Z3O7N2ZG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int U6AAJQ0Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public int FDT29JRG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void TURF9C6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void EBTN3HH ( ) throws Throwable { goodG2B ( ) ; },0
private void 379TS49G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 4C54EM6Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KV7QVAXG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void GK4KTKE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void C4YB75F ( ) throws Throwable { goodG2B ( ) ; },0
private void YGI4V9BG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 6EAD376Sink ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 5GDJD3HG2BSink ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void Z7WQY1Q ( ) throws Throwable { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void WH79B1X ( ) throws Throwable { goodG2B ( ) ; },0
private void LNZBWCOG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void 2OSBJ2OSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 9XZO7DUG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 9F6R101 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 6DI0I94 ( ) throws Throwable { goodG2B ( ) ; },0
private void VVMAEX1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void J2H86USSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void K38629IG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void IRO7SR4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void AXKGRA2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void O0VCE2YG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void NMK3DBBSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4TT9COVG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 6QIGTSJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void O9ITBBI ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7VI7Y2ZG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void CGAAZ6ZSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 0J632WHG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void MND7A95 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void T211TCY ( ) throws Throwable { goodG2B ( ) ; },0
"private void FL4T857G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void GG00UGWSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void B7XHVSXG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 46WX9S4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void JBV44PJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void DZERMWTG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void K9G7TQBSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void NPEPES0G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void HVWF79X ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void G8TTF34 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4IK43X0G2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 5NM45P4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void ACXBXHC ( ) throws Throwable { goodG2B ( ) ; },0
private void TQU0VJMG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ADOIHKG ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 9Y51T17G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 34XJ14YG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JRVZGVN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NGA1Z0Y ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void NP88J92G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void HUHABD4G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PYQ2QBQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EF5IVOA ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void WKJHTJSG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void PQ1INKJG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 9W47SXQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SO3IDM6 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void SPXSCNYG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void XOLKEUPG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void VU1BPR0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TXZV5SZ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void GCGITIOG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void CFE7MTAG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 79QNRHM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K1AG7KA ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void T9W464EG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 28UM2DOG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void NP5ZBWG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 74I0W6L ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 2969OX2G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void M28CCFDG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TZ6UY19 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1B9ALEK ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void QVSOO16G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ZF46J9PG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 63X80TN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G5N79YH ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void G8HDQ98G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void KQIXAUMG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void ZICWY99 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LNRCRJU ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void BUJ8ZLPG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void UA6MFTCG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 98C5SUZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QYCVUBG ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void B9LZN34G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void ZS7Q6PM ( ) throws Throwable { goodG2B ( ) ; },0
"public void 5EJXESZ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void KCRY8BBG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 0RU5TL2G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PXK79MN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q25T68U ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 69SKP69G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QGAHIF2G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void W1KW99P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UM1MVRZ ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void YO0QJ0NG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void KTG9D0QG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TJE2I71 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 81W9CEU ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 2GR3I0UG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 1DTA4W2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void LX2UKJ1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void AVJUQPCG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void 29HU1L2 ( ) throws Throwable { goodG2B ( ) ; },0
public void P6H91KI ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int LDVDTSQ_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void J3KZI9V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void L5H3I0HG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int OGHSQJOG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 99K3PG2G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int UZN9PVZG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 03LBQSY ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void P3Y1WJ6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 8C5U8ZZG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void L9QQN5QG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int F16PSDOSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int ONNF15HG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int JFNNFL2G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 84LXGXE ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void G53SM3G ( ) throws Throwable { goodG2B ( ) ; },0
private void 71UWN3UG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void TY7UV73Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void 8BUX8V3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void KJWFDNX ( ) throws Throwable { goodG2B ( ) ; },0
private void GZ2KKBMG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void O11XNVEG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 2PJ8Z3OSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void ZZ4HQ79 ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int OHGOI2BG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void CADKK3BG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void ZPU54T6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 3U700W3Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void ILB51P8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void WQ2DRH4 ( ) throws Throwable { goodG2B ( ) ; },0
private void IHXT4F3G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void 5N1GZYZG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void Z9DTRIW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void G81YDD6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 17S464KG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 5CU4VQJSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 7X9DSDFG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void 6J32FDS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void RKKSQO1 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4CNSKA6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 1JLEVB9Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_52c ( ) ) . badSink ( data ) ; },1
public void C23QXH2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void C3F5ZC9Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void D725RS1G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void MW7QBJR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void NDUTR4C ( ) throws Throwable { goodG2B ( ) ; },0
private void QM9ZGD2G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void VFAQVTRSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53c ( ) ) . badSink ( data ) ; },1
public void ECCW22MG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void J0VCDPVSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53d ( ) ) . badSink ( data ) ; },1
public void S1542VKG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void NO4M60KSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 4YGMNF1G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void FCDSQMK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void K3XSAHL ( ) throws Throwable { goodG2B ( ) ; },0
private void P2SXNKCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 7Y6695FSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54c ( ) ) . badSink ( data ) ; },1
public void PI45VBNG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void ZEB8CB8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54d ( ) ) . badSink ( data ) ; },1
public void D7LUH6RG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 5AITQRLSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54e ( ) ) . badSink ( data ) ; },1
public void 2NZEI4QG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void V9NSEJXSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void PM7MU4XG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 11H5MCH ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void SOKBQBK ( ) throws Throwable { goodG2B ( ) ; },0
private void 131BKYTG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int NRSMG4ZSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public int KA5XNFYG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void VU46S1N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void OAA7DJE ( ) throws Throwable { goodG2B ( ) ; },0
private void XJ148YYG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void S8BSOD9Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void UY3I92LG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ULV3NHU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 8UWNSCV ( ) throws Throwable { goodG2B ( ) ; },0
private void TRUHC93G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void ZVD8ZRSSink ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 6G7LU21G2BSink ( CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 3ICF8J2 ( ) throws Throwable { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_68b ( ) ) . badSink ( ) ; }",1
public void SPND5IE ( ) throws Throwable { goodG2B ( ) ; },0
private void EIAU2TLG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void WZFL1QJSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void 6NZLSDJG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 1W2N17U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void DAECLPP ( ) throws Throwable { goodG2B ( ) ; },0
private void HW7XK03G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 65MX4U5Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void A8BAAMGG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 3BGYS6E ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void F9677SZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void D08ZPFCG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void LUVWO2TSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 9A8JB3DG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void I9EMZKV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void YK0KIHS ( ) throws Throwable { goodG2B ( ) ; },0
"private void GVWIEQVG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void AI8Y4UCSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void F51PSTXG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 7WUJSVA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void D6IPJHZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void YGBBUAQG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 0OW5GXGSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void QCMEGAZG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void PMQ5U57 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void MCMKLJR ( ) throws Throwable { goodG2B ( ) ; },0
"private void W9MEZLQG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void UXTU8BDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void P810TDBG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void QEORPH9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 792BXT5 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2Q3O83PG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_connect_tcp_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 7VNIAC5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void I7N6MYD ( ) throws Throwable { goodG2B ( ) ; },0
private void 25MFNTAG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 2GAY5NR ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KEPB2UZG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T02MDVFG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VXGDMYB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KQ5DEFJ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void XCH65TOG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 78YPJBNG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LZWHMRU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9KGF1P4 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void XCYJ2PEG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2QSK8J1G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 3MQ3CN7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ULT2VCV ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 4FBDN8LG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BSNETZ6G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MFP55UP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8OZMP10 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void UIU5IRIG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void N10F54NG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void H9BCDP2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7T5GQSD ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BJCXZAQG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MGO0O6PG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LPGVWPO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DUAYB6I ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KP88CE0G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void F5SD9ZGG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HIM62Y1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JOSSY7D ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 28HMKTJG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 3E375FHG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N9IBIT2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C2UEQX4 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void JHFGSRHG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void C4ENKBJG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void FBRI9NG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CMSXR82 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1NJZ4JEG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CVG38WPG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 6B8G17T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RG81J3Y ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void GLXHQ0CG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void G5NG00Y ( ) throws Throwable { goodG2B ( ) ; },0
"public void 62CUUFY ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WZTXQ81G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 78ECM43G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4Y6YY1C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J1XWLME ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 49KXTW6G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2H2BL0DG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MRZZY6Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6VFAIYA ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void ZN3C46BG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SAV7UYMG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HSXFVOK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2UE18UL ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BFSX0UWG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void FF89KF3 ( ) throws Throwable { goodG2B ( ) ; },0
"public void WVIKBWC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void WRJRY9UG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void UU44MY7 ( ) throws Throwable { goodG2B ( ) ; },0
public void 3ALB84M ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int Z33NJX2_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void LXBCICN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 66NS0LRG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int PKNZ9OAG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void F1KQOGQG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 8ODGBMJG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void LSEJSLM ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void A3NM4PR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FO8JU6UG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 9H9XHXSG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 6ZPD7UASource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 4F2FNRCG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 6CMA7G9G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void RGA0JO1 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void MGOQ156 ( ) throws Throwable { goodG2B ( ) ; },0
private void USQTIOEG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void P9JAHFESink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void BG6ZX3L ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void G6TENHX ( ) throws Throwable { goodG2B ( ) ; },0
private void 3HLJP7DG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void VC8OQXVG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int AWOJPS5Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void 9W6G7SD ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int VFS3JPQG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void CQT3N6NG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void TTI8O03 ( ) throws Throwable { goodG2B ( ) ; },0
private void NEPDHV7Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void QC2RM2G ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 8SJYSCB ( ) throws Throwable { goodG2B ( ) ; },0
private void UF6T8I1G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void HRRBY9MG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void RZFNPE2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void 4ZCD75Q ( ) throws Throwable { goodG2B ( ) ; },0
private void UEZG00AG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void VMXFRK8Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void GT2V62IG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 7ZLAIR0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void EQOKSDJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 8OE8V2VG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 0UBQF28Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void PX41X8PG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void FQNQ1V3Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void WJZBVB4G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 2URG3T1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void SJB4H5E ( ) throws Throwable { goodG2B ( ) ; },0
private void 18JM39EG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void XK5ESA6Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void MH9BHQ2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void PXKVPE2Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void MVGZEZDG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 7D0ARBCSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void JZ6VZHRG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 0TI8KW1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void N1H6DKQ ( ) throws Throwable { goodG2B ( ) ; },0
private void E0Z7AAXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void BT6PD5PSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void EX9ENR5G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void IRJJP9QSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void 5K42RJVG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void G5B8LUWSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void IGLE7TDG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void UT5O0C5Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void L1B4HPZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void RS3DOXD ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void XOKDOAK ( ) throws Throwable { goodG2B ( ) ; },0
private void 3PD1KAVG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int QE6O95CSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public int 1WXY1DFG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void DD36FGM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void U56R4FJ ( ) throws Throwable { goodG2B ( ) ; },0
private void F0REKL2G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 4730FG1Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void U9TPG9GG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void SLQJ8CY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void SRE0W80 ( ) throws Throwable { goodG2B ( ) ; },0
private void QED6YHVG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void M863WF3Sink ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void GEQJ7VKG2BSink ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void MOGXPDQ ( ) throws Throwable { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void NMTSM98 ( ) throws Throwable { goodG2B ( ) ; },0
private void EM0FSKCG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void UWZT1W6Sink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void AQ1K8P1G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void B9NN3EU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 9CSYNS4 ( ) throws Throwable { goodG2B ( ) ; },0
private void O69VONLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void TF1AIZWSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void OUA2MCTG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void XAFONJB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void G6SQHG2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void O3BDPIMG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 77P4URASink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void Y277I8DG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void SU2QMOY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 347YXUW ( ) throws Throwable { goodG2B ( ) ; },0
"private void CF2OQI9G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 8QO6JC6Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void M9JZ68RG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void PZDGHLO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void ANBGVGF ( ) throws Throwable { goodG2B ( ) ; },0
"private void WOY3UJFG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void L3219VBSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void 1Q8D8PCG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void YL574E8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void KO64KHO ( ) throws Throwable { goodG2B ( ) ; },0
"private void TJKJDAQG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QDM6CIZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void NKF47SMG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void H5D4OQF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void JX1IA1N ( ) throws Throwable { goodG2B ( ) ; },0
private void 947FURKG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_console_readLine_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void ARYKBYS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void UYXBJQU ( ) throws Throwable { goodG2B ( ) ; },0
private void R61ANHPG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void T9O68U4 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void SH4KOCAG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void YGZB1VZG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void L1G7ZCG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LN0HTIX ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void YVKXXHVG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void WV8O2EXG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 69WTZAH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0IB9RLS ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 2WG42I2G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void JYNM0WBG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 8KG74N8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O82GTM1 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 5EX60J1G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void JGGFL7YG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XG4LTHS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E787RS3 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 8RZBW25G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ALAZUPGG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 1H2FBXJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 11WKIPT ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void XBA5MUWG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void U1B24OUG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void IMYF9MT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WQQH35U ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void BZMAD6HG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 376FOCKG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JKY1NEI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6MYGR2T ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void J2WTKXYG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 7SUCVXKG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void H0S2KRZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CSKZQU4 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void NG01DKVG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void TPXAHMJG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void GROL1WL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R7E4N46 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void XDLGZXSG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void GIMLN1TG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void BXWOE51 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SNXH9ZQ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 174ZIZ0G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void EYRTTU3 ( ) throws Throwable { goodG2B ( ) ; },0
"public void CNAS0H1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void DJKSIS7G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void GQHE40WG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void EFQTXTT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TOKL6HO ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void C2MZTDTG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void E6NF95QG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void W5KABR7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RCTVBAB ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void LNTUJYPG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void K01ATA0G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void NPKU183 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 70QPPJ5 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void W4UZFGOG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JJT4QUT ( ) throws Throwable { goodG2B ( ) ; },0
"public void 72OACO1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void VY51RRVG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void MDPEYDT ( ) throws Throwable { goodG2B ( ) ; },0
public void 04BV309 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int QR8H5Z6_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void UOLUKC3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 5WQ4R3ZG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int KJV2N4AG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void FY5EEJUG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int NGTH0IOG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 1USOILB ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void VPVGILG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 2KVKJELG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void 46JOTYBG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int 5RPM0XSSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int WBQO1WVG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int IV686QIG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void MHJPVH4 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void B6FN8BV ( ) throws Throwable { goodG2B ( ) ; },0
private void 1LI24NDG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void 263OM5WSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void E8A0SXM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 0T72V2U ( ) throws Throwable { goodG2B ( ) ; },0
private void 2T47NZ4G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void H6DLLNOG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int WW0UMUOSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void G729CBW ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int SNK0YQFG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void KNL6HYJG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void L7E8GPI ( ) throws Throwable { goodG2B ( ) ; },0
private void WLXDTYVSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void ZT3TMGR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 9TY1F2R ( ) throws Throwable { goodG2B ( ) ; },0
private void 1NHBB3OG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void 8AWJRSYG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 4RJR5VM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void G72AEI7 ( ) throws Throwable { goodG2B ( ) ; },0
private void WM12627G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void UL0QKNVSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void B9W5SNKG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void I6UUE0A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void W19GM6U ( ) throws Throwable { goodG2B ( ) ; },0
private void Q5YNOMLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 8F72PD0Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_52c ( ) ) . badSink ( data ) ; },1
public void G636BUAG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 2VX4V1PSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 6CJZHAIG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void SB3CD1G ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void UHZYKBX ( ) throws Throwable { goodG2B ( ) ; },0
private void C5NYO2ZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 69WP2DWSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53c ( ) ) . badSink ( data ) ; },1
public void DBCHJECG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void NPK0KNQSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53d ( ) ) . badSink ( data ) ; },1
public void L8378RQG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void QQWMV2GSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void E18CXM2G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void OE0J0SK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void BB1VS8S ( ) throws Throwable { goodG2B ( ) ; },0
private void ZRK5HS1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 4DCJD3YSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54c ( ) ) . badSink ( data ) ; },1
public void I1BJFOKG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void M271LXTSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54d ( ) ) . badSink ( data ) ; },1
public void JL0MO4BG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 0H0ZYU7Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54e ( ) ) . badSink ( data ) ; },1
public void AUS1SE1G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void VC6Y3LQSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void SMVV340G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void M1T0IS3 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void VJ8PLQB ( ) throws Throwable { goodG2B ( ) ; },0
private void SA58C8CG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int N9OHPS0Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public int JLTHISKG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void DS6ZD1E ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void AHYCHMF ( ) throws Throwable { goodG2B ( ) ; },0
private void ZD2KZVYG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void X46BPHTSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void OB8VTEVG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void RLCWZ1T ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void P7N1CQ2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5JMX5MCG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void DMNX5G1Sink ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 9JA7SCIG2BSink ( CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void PCTKYH0 ( ) throws Throwable { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_68b ( ) ) . badSink ( ) ; }",1
public void V0MKX7L ( ) throws Throwable { goodG2B ( ) ; },0
private void AT9DV0OG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void LN3M1ACSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void TX7K4UPG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void DT7KIK6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void GSKO9JL ( ) throws Throwable { goodG2B ( ) ; },0
private void KLRLQOGG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void VTH6ZC5Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void NKLLCU1G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 9PT00BI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void T8R9DI9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MW2IWBIG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void MUZO9PDSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void PM61WAQG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void GCQMK6S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void VHP1F3B ( ) throws Throwable { goodG2B ( ) ; },0
"private void TWA10HEG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void OA8ZNY8Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void TE0AKKPG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 8X6D4ZT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void JT6P7A7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void XF70OKZG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void EYV2GOHSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void EZGPYFVG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void YRH3L5H ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void M5ZLM92 ( ) throws Throwable { goodG2B ( ) ; },0
"private void QAYPGE8G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void RO6LG0ASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void CBNWCVBG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void IIBYCT3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void W4LTBHG ( ) throws Throwable { goodG2B ( ) ; },0
private void CHLIYWKG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_console_readLine_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void EESM21T ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void 9N7HXZO ( ) throws Throwable { goodG2B ( ) ; },0
private void 9ON4H8RG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void ZI9563R ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void B0OHRN9G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2GX11XOG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void OE8Y5UI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 44VDPQA ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void YO2VSL9G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 3SGXYJ0G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void AF8W835 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J89P6AH ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SZ55OHBG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 29S1ZCPG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void SQZ2OV5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 44CT9VM ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void ELB4EX8G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DJYX8VFG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4C3PWJE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4BOM3DU ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8PXSWPMG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HJWBXE7G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void Z1XLH4O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZRULN1T ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void IJN1SNKG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ECFZJZZG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void AWVMCB3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T71C66B ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FIFRV85G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Z3WSVIAG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4Z1DNHC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N8GW5BA ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void EFN3OB7G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HZ3AM3RG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void OQN0TRC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K7JH7DT ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DE0CLMVG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 8IIAJIBG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5VMJM3G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IPE1ADY ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void K7O7J94G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void C6PVSQXG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void GN67L6K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TXSBBVV ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9XBTK8SG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DTUEP3T ( ) throws Throwable { goodG2B ( ) ; },0
"public void C6CZP86 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void E3VJCD5G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CKWHFF6G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7WSZ3FG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3C0TMQV ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 410Z9PQG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OBQW7TPG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VVQRLQR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6IJM1UU ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void V43NVHZG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 8DHL3P9G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YLDLVGP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HHVN8O5 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Z62L1RDG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 997DXZC ( ) throws Throwable { goodG2B ( ) ; },0
"public void 2OR5JTG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void Y2TJ0Q0G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void CGFOQ8U ( ) throws Throwable { goodG2B ( ) ; },0
public void 0ZZM7HD ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int JOBV2AF_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void YDFHIKB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 4LQ3XACG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int IDK94A1G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 0EYQOC4G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int QQ0A8ULG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void KGC7OBZ ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3S3ECYR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void D6E1GV6G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void X08IECMG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 5SEK162Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public int UTGHN8UG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int OSY2RNLG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void XE75C0K ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void OYJNFGZ ( ) throws Throwable { goodG2B ( ) ; },0
private void RO0DH4YG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void Y1R8QHNSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void V7PQ185 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void EGR7XNB ( ) throws Throwable { goodG2B ( ) ; },0
private void C13QS8DG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 6VNYT15G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int XAB69YUSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void HL3KBDK ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int TLOL67GG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void UK9FCCUG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void ESRNLU8 ( ) throws Throwable { goodG2B ( ) ; },0
private void KVVQD8TSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void 6MON5L9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void OJ2MYFB ( ) throws Throwable { goodG2B ( ) ; },0
private void 30975SBG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void RL28112G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void EYADY5P ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void IQPR7ZW ( ) throws Throwable { goodG2B ( ) ; },0
private void 1U1T2LBG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void MAVM090Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void FTD24GAG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void WSPOU3Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void 5RSG527 ( ) throws Throwable { goodG2B ( ) ; },0
private void K7Y2Q3PG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 7VMT7PXSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 4JIT8VCG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void KUJJ4W0Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void R6J60EWG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 7X00ZAE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void HZ8DYUV ( ) throws Throwable { goodG2B ( ) ; },0
private void 7NAO8J3G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void T99EA85Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void 6WS87SBG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 4IX76Q2Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void 53UQ14CG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0RY1ESLSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 19IEGHMG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void INGZF1U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void PQBD2F5 ( ) throws Throwable { goodG2B ( ) ; },0
private void N4VOPZIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 2HQUJZ1Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void L6GT02EG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 1BCNOXJSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void KIMX9JBG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 24UTZX8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void OGBO0FKG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void KU1ISZGSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void J22XB2UG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void DLUIWOQ ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CRUW2D0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 3Y01KQYG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int XCHHVI2Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public int 7AEZEAOG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void GC5S434 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void B9NN90H ( ) throws Throwable { goodG2B ( ) ; },0
private void GJWJLTVG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void MJX1OT5Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 8K67AXUG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void VKY4OEF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void Z59STZJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 6P2XBI9G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void ILQ9TCQSink ( CWE197_Numeric_Truncation_Error__int_database_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 7UBFFHKG2BSink ( CWE197_Numeric_Truncation_Error__int_database_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 21KVPC3 ( ) throws Throwable { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void RMB4CQZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 8P12QPXG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void WG3HKEUSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_database_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void SABJ9X8G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_database_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void RHQ3FGC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 4YWUCHE ( ) throws Throwable { goodG2B ( ) ; },0
private void IZFZ1GPG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void BA64292Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void G7YEEYBG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void NANF8LY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void SUO4EDF ( ) throws Throwable { goodG2B ( ) ; },0
"private void QNSD3SCG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void XEEQ1R5Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KAV9IUDG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void KTOR3J7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void CRWTPC4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void HO7RFKQG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void ZXW60A0Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void G46CKMPG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void OUV2DKP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void NEP9PY8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void KX2UAIPG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void KOCBZIJSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void YTBX0CGG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void YX2XI8V ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 4XUOKWD ( ) throws Throwable { goodG2B ( ) ; },0
"private void EZIG44YG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void XWYRNVDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 0SCT1L9G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 09III70 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE197_Numeric_Truncation_Error__int_database_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_database_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void LBEDYSS ( ) throws Throwable { goodG2B ( ) ; },0
private void 3ONH7J1G2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_database_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_database_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void F282JW7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void TE4665I ( ) throws Throwable { goodG2B ( ) ; },0
private void MHAU23VG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void GXOQVG6 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 107QZ96G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void DLSW0QXG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void H1G1VQH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H1RZQLJ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void PCWVT9FG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 2SLVC4ZG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JFZXUR8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0IG8ELZ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void MUXXRHYG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void PVIZ9BNG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void REZR5R6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9SVHCRZ ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void Y01122XG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QE4B0TQG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void L3RA8DV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SEYPFPK ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void AXVI3ZOG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void V105UI0G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 09R8B7A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BNP0DY5 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void FHJKU5VG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 5RA2081G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void UTXUM9U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JKM7O07 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 6DYYZXHG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 4B4BM85G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void WSZIEW1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WRV52SJ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void L7DHH1AG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 4QMF74VG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 3SIOFNI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XZKI4BL ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void SNT85E3G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 590N7ZXG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TQTPZ0P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UEMDLGX ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 23CN44FG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 1P4Y0TXG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void OHUJ4HJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A0BIQG2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void I3LRB4HG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void Z18FOC4 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 8PVOA1Q ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void APZ3A1ZG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void DJWUC4KG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void E86N4AC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YEPPDGV ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void UDLLE3OG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void C9BK936G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void N1MTGDS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YUY25SC ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void LEE3ZP8G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void D4U3Z0MG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 3SJ85S2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A2PHNFK ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void FI45CTEG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void OGDMAYU ( ) throws Throwable { goodG2B ( ) ; },0
"public void 86KKNTH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void VJSG66IG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void 56YU7I3 ( ) throws Throwable { goodG2B ( ) ; },0
public void AUYX07D ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int 9SBOJKH_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void X33ASOE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void QTQC2AUG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int D4KO0NGG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void WA2JP53G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int W1Q2TNSG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 0Q4P46M ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void RAI2O2H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void LWTT4NMG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void N4UR2MMG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_database_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int U02IO1GSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public int RHEBR4SG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int PLDTXZ2G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_database_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 6WPAXIS ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void C2L04TJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 98U8BWHG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void U6SM8LWSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void OY4JY99 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void CW3DBYF ( ) throws Throwable { goodG2B ( ) ; },0
private void X0J89A2G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void FWKVKD0G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int QVMZX5WSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void II7RMDJ ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int H4B0ND6G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void Y4W9BGGG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void ZNOCHPQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 3CJDAQBSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void HY1S9RJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 5YAASBB ( ) throws Throwable { goodG2B ( ) ; },0
private void N13B7IUG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void KYL4XQWG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void W6K6CGH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void YYB3YR7 ( ) throws Throwable { goodG2B ( ) ; },0
private void JWQOZX2G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void GV7S40YSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void R8TP7VJG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void 7YFBTM0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void JS9UMXG ( ) throws Throwable { goodG2B ( ) ; },0
private void J52X02KG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void XF01JI8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_52c ( ) ) . badSink ( data ) ; },1
public void ZYXBHPFG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void XRG4OZCSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void NYQ3ZMZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void ALDSCJX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void X2SEBT6 ( ) throws Throwable { goodG2B ( ) ; },0
private void HPYUVKZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void SHLAW6CSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53c ( ) ) . badSink ( data ) ; },1
public void YG58QSWG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RCZ8YQ1Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53d ( ) ) . badSink ( data ) ; },1
public void 9PTI445G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void SYLKMZ0Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 4WKG1WAG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void P7V2JR4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void SLDKQN1 ( ) throws Throwable { goodG2B ( ) ; },0
private void OKVJVVVG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void VSIJC8ISink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54c ( ) ) . badSink ( data ) ; },1
public void ZNQYORSG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 7M08WCBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54d ( ) ) . badSink ( data ) ; },1
public void T8ONMFJG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 4AIUUUUSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54e ( ) ) . badSink ( data ) ; },1
public void AP9L2U9G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_database_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void I2CYCHSSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void GJ2CKPSG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 897X65X ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_database_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void S2018WZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 0PMIT8RG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_database_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int IVWA5KCSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public int II1Q3SNG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 2DMO8U5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void SYYOM78 ( ) throws Throwable { goodG2B ( ) ; },0
private void B53SQXEG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void OP4SE7USink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void 5MLXV6LG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void C0AHNVK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void BKK68AJ ( ) throws Throwable { goodG2B ( ) ; },0
private void ZCZWG6HG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void E0BMDWUSink ( CWE197_Numeric_Truncation_Error__int_database_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 0XF1ASMG2BSink ( CWE197_Numeric_Truncation_Error__int_database_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ZPAIJY7 ( ) throws Throwable { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_68b ( ) ) . badSink ( ) ; }",1
public void 9WS6BYP ( ) throws Throwable { goodG2B ( ) ; },0
private void I5HP8A5G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void KQ200QRSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_database_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void NIOR33AG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_database_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void UPLYTWD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_database_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void ZFIDEQV ( ) throws Throwable { goodG2B ( ) ; },0
private void X4W3SP7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 2FEAUXBSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void 2H6AHL5G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 1VGZB02 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void X82ZU29 ( ) throws Throwable { goodG2B ( ) ; },0
"private void IG76OWTG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 3JBFGX6Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 3KJIZ2BG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 66VNEHD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 93YEBIG ( ) throws Throwable { goodG2B ( ) ; },0
"private void BS32LYYG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void CAQVA6JSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void J62LKUTG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 42L9ZR1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void I649WMZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void CD60B6IG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 2TRBE8ASink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void IYT6T11G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void R4ZU9QN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void PQF8UKK ( ) throws Throwable { goodG2B ( ) ; },0
"private void N8XOP7HG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_database_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void XVGVBNESink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void MFCYQ1YG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void CWNQQTW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE197_Numeric_Truncation_Error__int_database_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_database_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void IMCSEG0 ( ) throws Throwable { goodG2B ( ) ; },0
private void D1XQS1SG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_database_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_database_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void MIG406A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void BX6GGJW ( ) throws Throwable { goodG2B ( ) ; },0
private void 11NOGUYG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void BDGDIUJ ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void XE0G6G5G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void IWUN8CKG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EIY90Q9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WVO34VN ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SSAYW6LG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ZD42QPYG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void E3E5N78 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZX5K62W ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void COQJ8B1G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void P05PPHBG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7VC1UJR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 02HHFEB ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void HZXD6ZUG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void LMRD919G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void U8IGUQ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5GIO0CK ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void RV1CLE7G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void UJIRXHSG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void A0313OH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2MBX6LQ ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TUS4BH7G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void L8R2A63G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NVBZD44 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QO8CV9G ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TU5PS8BG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 368Q3QJG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void OXGZCU1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EWZU5TE ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 329R1IEG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 1GF50SEG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N1928AE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OL1BHJP ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9H0SBGHG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EV2Q108G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void QJ8PYTE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GPQJ01F ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 6EA0ASXG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ZZXHJMCG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void TPGJCZI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HB1RALK ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KSMQ4S8G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4ERECTG ( ) throws Throwable { goodG2B ( ) ; },0
"public void WEH4DS4 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void NFD4RTDG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HGAKYONG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YPY4LUD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 33THHSW ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void OC52F2BG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void F5VH8YKG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XH2DUDX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 50LAYV4 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PI14SFTG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void A16FKTXG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J084L65 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JATO4YD ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 3YLHWBQG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 9AQMEFU ( ) throws Throwable { goodG2B ( ) ; },0
"public void C65XKTV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void L9KJ41IG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void ODVEPID ( ) throws Throwable { goodG2B ( ) ; },0
public void F5CRMJD ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int LMWKE9S_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void 8ZZJNMH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void F1E24P7G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int IIZN8IFG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 5S9Q1F9G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int TVSCUAVG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 88IVYPD ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void SG1ZRD4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void N5EVVM3G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void YH1I533G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int O1AHMTYSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public int C5OQTDDG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int LRJWNOJG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 8G0XENZ ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void 7OB5D46 ( ) throws Throwable { goodG2B ( ) ; },0
private void 238BI3HG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void 1XSJ3QLSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void EW1842I ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void JDU3AQ8 ( ) throws Throwable { goodG2B ( ) ; },0
private void LDJ5406G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void CUQYIG5G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 9EPUORXSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void JDWGKXI ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int 5MEWH19G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void TX3Z36KG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 8UHOCLH ( ) throws Throwable { goodG2B ( ) ; },0
private void X4U1L9HSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void NV18YUU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void NUM1IDY ( ) throws Throwable { goodG2B ( ) ; },0
private void Y3DD54OG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void GEHLGYSG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 9XLTO8J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void AGR8HU6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5OU4SWUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 6SNRMJRSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 7M8HIT4G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void DMLIXXK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void 834LNE8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 06NE2SMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void SBIAAGKSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 6SBMQRLG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void DPJPC15Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void GOGPQXAG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void LQ5OQAC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void XKXE08V ( ) throws Throwable { goodG2B ( ) ; },0
private void 7XIVN5VG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void GQZKEXESink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void TA6F6O4G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 659LRI2Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void NCOSIW0G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void DWICVW8Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 7ESDEJ2G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void DTBL5NC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void F6EQWFH ( ) throws Throwable { goodG2B ( ) ; },0
private void HJP15IQG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void SE8GD20Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void RKUOLX5G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 6GOLYJ3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void 9F1PH0NG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void J89CDZ3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void LQ8F2GQG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void D0ZAGJKSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void R22A1I4G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void C87UBD7 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void B5299YS ( ) throws Throwable { goodG2B ( ) ; },0
private void YVS15CSG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int X764NPYSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public int 5B67BJNG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void DPYDJO3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void XNJ5XD7 ( ) throws Throwable { goodG2B ( ) ; },0
private void 3EM81MHG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void GQMC6THSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void ZT54CEBG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void V54R2CB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void VFNZE7P ( ) throws Throwable { goodG2B ( ) ; },0
private void 000JAGRG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void HVCQADESink ( CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 1D3NDAPG2BSink ( CWE197_Numeric_Truncation_Error__int_Environment_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void QI4FL7Y ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void GVKJP3F ( ) throws Throwable { goodG2B ( ) ; },0
private void Z74O7HPG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void FUNFALFSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void B959X38G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Environment_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void J8SX6H0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void UOBI8LS ( ) throws Throwable { goodG2B ( ) ; },0
private void H3MPF6KG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void JEDWTGLSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 1MIXF8ZG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void F69YVI4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void PZZAWLH ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9GPST0NG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void BZLXBZ7Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void X5L7095G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void BZSAW0B ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void MBFE3VF ( ) throws Throwable { goodG2B ( ) ; },0
"private void BOGUQ7KG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void BO446RASink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void L8FPFBHG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void YTH68KR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void I9JNZFR ( ) throws Throwable { goodG2B ( ) ; },0
"private void BCV0QW3G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 5GA5Q51Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void 3GNSBSZG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 3KHB2WL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void I8IT04J ( ) throws Throwable { goodG2B ( ) ; },0
"private void YFDOLADG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QB2A40SSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ENJ3YMQG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void T6CIRDB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void Y9ZQVFJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 33E0E1FG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Environment_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void XY4NIJD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void ZP3A563 ( ) throws Throwable { goodG2B ( ) ; },0
private void 59APOX8G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void M729TGT ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void LMAHKC1G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void I0E8TTUG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 44YC1QE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OO5SMIZ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void SYQS5GQG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 8AW8VA8G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XJNGHW2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0OQUK28 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 373BQGQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 60MJ5V3G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void NH3X3UD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SDGAO66 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void TYKGB4FG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ABYG6OOG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 5F449NS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UZU38ZR ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void Q2WCIYAG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 72A0OW7G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 62D3HSB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8SU9K8O ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void EWPA2GHG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void YECUP0IG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PS2Y6EZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void THGYQNL ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 21WXQZ8G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void G2IWGP6G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 9LKOJ8D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U8YECBO ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void W9KNSM7G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void DRSQMTFG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void CHLD3GK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I9NU3EQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void UJV94EDG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void S3T2P2JG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 4IZRUK6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LAXGYQ8 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 2T9FFJLG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 6XPXOYFG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 5S10SBW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1U8VZQD ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ZODBKESG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void AV2ATEF ( ) throws Throwable { goodG2B ( ) ; },0
"public void 05T1RA7 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void P91WRLNG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void NWBD8YOG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void UVULHTH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 19HVRHL ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void M3521LZG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void X10V8W2G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2JZRW6U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3YBZVZR ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void EQU1392G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 74MRAM4G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void VIGXGDV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FD6HWO9 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 02TVR5NG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void OXJLKZO ( ) throws Throwable { goodG2B ( ) ; },0
"public void Z82THFY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void I996D43G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void 3O9QSLB ( ) throws Throwable { goodG2B ( ) ; },0
public void FR4CWNX ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int 0G1B4IB_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void 7O5PLVO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void SWHZ7AEG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int BCSU9VQG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void TF8T2PVG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int FU35LHKG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void WX9BO48 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void OBB07E6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 5I61S4XG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void EG11E0BG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int QR4K6X4Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public int NJLM8FZG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 95WSY7CG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Environment_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 3LOSQBF ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void 0XLNF0S ( ) throws Throwable { goodG2B ( ) ; },0
private void X465CB0G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void 6RFXWNTSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void 8PX2OL0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void AATG25N ( ) throws Throwable { goodG2B ( ) ; },0
private void ZV1BPD6G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void SGH0HZEG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int RERXMWRSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void D2E18HF ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int UE2A112G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void N1RVTKGG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void 9X9RN3W ( ) throws Throwable { goodG2B ( ) ; },0
private void M3TR4NZSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void LDKCD4P ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 1VX5TXO ( ) throws Throwable { goodG2B ( ) ; },0
private void N08J4ZHG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void 9GHQRV9G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void X9J4KHA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void S2M2I9V ( ) throws Throwable { goodG2B ( ) ; },0
private void QHN8DPJG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void BGAN9VPSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void VY8R9SSG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void 9SF7CCP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void XC4H392 ( ) throws Throwable { goodG2B ( ) ; },0
private void WIQEM2XG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void GEFE2EBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c ( ) ) . badSink ( data ) ; },1
public void FREOOAQG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void KCF573RSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 5DOCSUZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void XZUKYRP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void MQ2YAS8 ( ) throws Throwable { goodG2B ( ) ; },0
private void HL3S7BGG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 8PGPWFTSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c ( ) ) . badSink ( data ) ; },1
public void 440PDF2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 4BP80HCSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d ( ) ) . badSink ( data ) ; },1
public void M7P1Q79G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 95Y8Y1CSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 87AM8R2G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void PS823AP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void 5568D9A ( ) throws Throwable { goodG2B ( ) ; },0
private void GSOHAL7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void NP4V73WSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c ( ) ) . badSink ( data ) ; },1
public void 45SPOQWG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 7XOS424Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d ( ) ) . badSink ( data ) ; },1
public void TH7EQS3G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void BHOO6WSSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e ( ) ) . badSink ( data ) ; },1
public void 0GSGX3QG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void FVILUUJSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 1FOQ5ZGG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void R40GD3K ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 7DEPQDI ( ) throws Throwable { goodG2B ( ) ; },0
private void 1I63Z2GG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int ZFWYVFCSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public int IRHD802G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void O31RMHJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void QR5JMYX ( ) throws Throwable { goodG2B ( ) ; },0
private void FSMZKI8G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void S4ADG4XSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void S8XNCLXG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 11NR7HE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 048T0PY ( ) throws Throwable { goodG2B ( ) ; },0
private void 4RQY70YG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 2452EVNSink ( CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void R9JYX2SG2BSink ( CWE197_Numeric_Truncation_Error__int_Environment_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ACTFOCQ ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b ( ) ) . badSink ( ) ; }",1
public void 35WNFA3 ( ) throws Throwable { goodG2B ( ) ; },0
private void YGDIGJCG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void L2MAW65Sink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void M5BHT6QG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Environment_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 4FHUXM4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void IUTUD8K ( ) throws Throwable { goodG2B ( ) ; },0
private void L5WPEBIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void NGTSCX4Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void NM3KZS6G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 0H12JE2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void IVTTJ82 ( ) throws Throwable { goodG2B ( ) ; },0
"private void W40RGACG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 2EF8TI0Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 2KETP6YG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void EB37L3R ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void NO8IN2B ( ) throws Throwable { goodG2B ( ) ; },0
"private void TLVS34OG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void YU6KCUBSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void KJ6XYIBG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 9A55FR4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void F3NKSL7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void ESFBL4WG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void SZTY4ZOSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void 1P2RPC2G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void DVCUWD7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 5ZYGWL3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CK41TQ8G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Environment_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Z7S6W32Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void FXCLE7FG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void B3VAL90 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void L2P5MMZ ( ) throws Throwable { goodG2B ( ) ; },0
private void BOJJEJTG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Environment_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 7CHFEWB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void BQ5PLG0 ( ) throws Throwable { goodG2B ( ) ; },0
private void CUED3X5G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 004UUWV ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void CTSOJQ1G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ST1T8J0G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZDPEJ0I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y8GQIH3 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void JA6JY72G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0RR9BYQG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void M6VGDKR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T7YC7PI ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TLPUXC1G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void I8IPZ1LG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NWCRE7E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EUMWDOR ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void JUPEEUEG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OSXS6ZBG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void RDJDW8D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 08010CV ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void U9Z5XNFG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void A3IB669G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void WHBZ9LZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q1WVAK0 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PK44D03G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void JJEGU3XG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5HUFRZA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SV2EP0P ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Z4DLTXZG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DCT8S30G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JESPA9M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X9GCBTR ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SFUW2PQG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 943QIFIG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1DFLCNR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J9KCE2Q ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SVNPFQFG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 5OFS2S6G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2IGS8QI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5OEEAF0 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void AYVIJKAG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EISPISBG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XOQXSAM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YRFC7P8 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void GKYD1P8G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JTKJTLR ( ) throws Throwable { goodG2B ( ) ; },0
"public void 9DVJTP1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0VOVTAIG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void IZJS4X2G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 09CJ1ZI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PWV9E74 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DKIF686G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BDXRDOMG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void AHDQNMF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4P8K3R9 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 39P3JISG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 86OSVQDG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8O8A2DO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T16FF6J ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 10IOQD9G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N0GO1KS ( ) throws Throwable { goodG2B ( ) ; },0
"public void UQOP974 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 5JFW3M7G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void R90FBPO ( ) throws Throwable { goodG2B ( ) ; },0
public void F997SAW ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int FSEY3T6_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 7HUT3LX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void KNTA51YG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int P5IEQNOG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 9CIJTTNG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int HORY0KSG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 5JKKCJ1 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 8QKWKDW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 0LE0C4LG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void OV5LDEPG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 6OGORBUSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int R5LOKI2G2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int K4W97E5G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 8HT02GD ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void O4TQBGP ( ) throws Throwable { goodG2B ( ) ; },0
private void 1E8Z4BVG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void JQAI3GKSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 2SDXBHJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void SJ2219Z ( ) throws Throwable { goodG2B ( ) ; },0
private void XGJT6UTG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 3MKZPQVG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 2X8P5JCSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void RWVYSDY ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int LX781G3G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 02BBUIVG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void A8FAJB0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 8EBSQYLSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void 0OV76HU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 5ITA9AW ( ) throws Throwable { goodG2B ( ) ; },0
private void QV1U1C9G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 5PL7PDFG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 5S8OY2K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void R4LVFTG ( ) throws Throwable { goodG2B ( ) ; },0
private void BR2QLX9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void PJ8OZKGSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void Y7INHPYG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void TGHNQ0Q ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void 8PGJ51O ( ) throws Throwable { goodG2B ( ) ; },0
private void HW8OVEVG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void Y7BDLZCSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void OH8BLT0G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void JF0NONGSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void J19IYFIG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void CY2GGTW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void FNG0JBN ( ) throws Throwable { goodG2B ( ) ; },0
private void EWL6CIEG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void HU47TIDSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void KABCHLVG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void ZHIU3I3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void YNC6AEJG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void XNKIBX1Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void SROB7J2G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 5B53BSB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void HKKR367 ( ) throws Throwable { goodG2B ( ) ; },0
private void I95JPZLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 7QOLRV1Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void PYDDDVIG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void XRCH2WSSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void FOG9RP2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void AOB5UVUSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void Z1ZDTLHG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void WR70047Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PGTV9CFG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void T1Y60W6 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 2H1FRYN ( ) throws Throwable { goodG2B ( ) ; },0
private void AHQCLV8G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int MNO98DHSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int KCLVLXCG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void BEJT3BZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void KQH6F55 ( ) throws Throwable { goodG2B ( ) ; },0
private void 13ZEU0XG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void FA9UCVMSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void NXI5HAVG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void L1YZT2C ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void A9KK3Z9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5Q33YQ5G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void AJ6EJ9TSink ( CWE197_Numeric_Truncation_Error__int_File_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void NG4SVVUG2BSink ( CWE197_Numeric_Truncation_Error__int_File_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void KY0MZ1P ( ) throws Throwable { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void JZIHMKK ( ) throws Throwable { goodG2B ( ) ; },0
private void 561QUIXG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void FQENUAGSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_File_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 27ASR8NG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_File_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 1ZFW2FZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 01QFB7Y ( ) throws Throwable { goodG2B ( ) ; },0
private void 1HUTQO9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 6HYLHSTSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void LZORXXTG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void EY3Q6IA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void PNT6FF3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GCCBHX0G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void HCANIP4Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void IGJJCJQG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void S675WRL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 246WXGI ( ) throws Throwable { goodG2B ( ) ; },0
"private void L7XJVVZG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 4P3PUAZSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void A4REXLKG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void XEGY55J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void DMHS3NR ( ) throws Throwable { goodG2B ( ) ; },0
"private void OL9H9S1G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void KXKZGO7Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void TEVAXHQG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void BIW7G32 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void IYDW2IS ( ) throws Throwable { goodG2B ( ) ; },0
"private void SHPHI5JG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void WHL44TPSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void AXPF7CQG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 9VUWWRZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_File_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_File_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void HFVYV2N ( ) throws Throwable { goodG2B ( ) ; },0
private void EYDHL0QG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_File_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_File_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void JOMDLOK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void UVHWTI4 ( ) throws Throwable { goodG2B ( ) ; },0
private void YL58Z4BG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 5GRTA1G ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 0VUO023G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void NEA3Y6QG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 6DOI7WF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R1V2GG4 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void R9L0DBAG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void DKVORL0G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JBS7I73 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GF77WDW ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void CIK107DG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 2L01Y7HG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 27F8TD6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3ZO4NP5 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void GMU81RQG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void RRDXDBGG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void DZ6RDKA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GECJV3U ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 05LYAQTG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 6HQ3HCQG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 4I925YG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WU138TT ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void JGSVPIKG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void BCBWW0VG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void CZQ2ZMI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 62XN4Z3 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 55JJXCNG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void TK132J4G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void V3APPRJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5QK6VSO ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 0R37OBEG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void U8NKB3XG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PGDV1MW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1F85ZVY ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ZKATRQTG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 5UXNAMTG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PC3J21J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 08ZHQEM ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void IIFOLRKG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void I0F5C9NG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TSU7CTS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IWFDFXS ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void DM0133DG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 7G1AI8U ( ) throws Throwable { goodG2B ( ) ; },0
"public void 7DTXHEV ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 9J79RT4G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void GNW4AURG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void YFTGZS3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UKW9HZR ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void O372WTBG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 0ED6L5HG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void SV9R4I8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2X0IVDO ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void QBL399EG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void IGM1I87G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void HCP32W6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q0NNASZ ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void M3MX8ELG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2JS6EOI ( ) throws Throwable { goodG2B ( ) ; },0
"public void 0DRJSE3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void 26W6X13G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void FOPXTMX ( ) throws Throwable { goodG2B ( ) ; },0
public void ZYXF0JR ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int 9HDA4PA_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 9V4AURD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void F9XOZUQG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 0MKL59HG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 3W4UVSXG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 0GMH2LCG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void RRFYDT9 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void E4TR4BW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FIOCZ44G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void NCSL5DDG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_File_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int QQYVK0RSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int JDGHPA6G2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int LA5XYS1G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_File_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void A04ATWG ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void 9HAQ5PR ( ) throws Throwable { goodG2B ( ) ; },0
private void KYEAP21G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void RJIE168Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void GE2E0X1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void CCYVKSM ( ) throws Throwable { goodG2B ( ) ; },0
private void VL67NU1G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void F07KI8VG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int BQIL5O9Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void 0MA77ON ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int UBQ67IKG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void RANTRBIG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void ZXWPJE5 ( ) throws Throwable { goodG2B ( ) ; },0
private void FF1GJXISink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void 5UXRJ57 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void JZ1ZTQZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 14FEL16G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void Q8H4N59G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 7YSFLLG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void YZUOLJJ ( ) throws Throwable { goodG2B ( ) ; },0
private void Q1JXZA7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void GV8BNDKSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 5767IAXG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void OMFH161 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void EGL02WR ( ) throws Throwable { goodG2B ( ) ; },0
private void FXQPJ71G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 9AM9VXVSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_52c ( ) ) . badSink ( data ) ; },1
public void Q8PGKT7G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void VB6S00PSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 3DNPEJLG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void KY20AVK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void 5PT6Z35 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0VM3M7BG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void GTFTW93Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53c ( ) ) . badSink ( data ) ; },1
public void T4SY8HVG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void MQI6OKESink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53d ( ) ) . badSink ( data ) ; },1
public void 3P0P4YOG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void K1LOIJFSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void JNK9ITMG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void WL81IRX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void 48QEH6R ( ) throws Throwable { goodG2B ( ) ; },0
private void F9P0JEWG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 53NHEIUSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54c ( ) ) . badSink ( data ) ; },1
public void ZYVVYWRG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 77DL0TISink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54d ( ) ) . badSink ( data ) ; },1
public void LN43R9LG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void GTVAMO2Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54e ( ) ) . badSink ( data ) ; },1
public void QO7LUHQG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_File_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void K2X3K8WSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 2H9SIWOG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 6SDOK7Q ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_File_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void MD9K2L0 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZXVAQO9G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_File_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int KM3JQKKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int K9Q3JERG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 1EPZKEP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void GICUDJC ( ) throws Throwable { goodG2B ( ) ; },0
private void 2NLNQQSG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void WSI972GSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void WW0ZGQ0G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 8B2DREB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void L3WOU0B ( ) throws Throwable { goodG2B ( ) ; },0
private void Z3BE0RNG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void C2GEB8PSink ( CWE197_Numeric_Truncation_Error__int_File_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void KF2524AG2BSink ( CWE197_Numeric_Truncation_Error__int_File_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void Y142526 ( ) throws Throwable { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_68b ( ) ) . badSink ( ) ; }",1
public void R3WX5BH ( ) throws Throwable { goodG2B ( ) ; },0
private void KFEBHO2G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void P9F1F0USink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_File_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void OM34EP5G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_File_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void UNMPXKI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_File_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 5YGP5U4 ( ) throws Throwable { goodG2B ( ) ; },0
private void F0D1DCZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void INMII6JSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void 8T0F17CG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void URSRQJ4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void UDD7KOG ( ) throws Throwable { goodG2B ( ) ; },0
"private void MSP89U7G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void ZGNAOZ7Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void GQ1VWVSG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void JB5Q3A7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ISF1SHY ( ) throws Throwable { goodG2B ( ) ; },0
"private void YDLLLI3G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void F3K5VCPSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void QS9CI3EG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 5P1IWI7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 99MD3HV ( ) throws Throwable { goodG2B ( ) ; },0
"private void 212HIF4G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void OHYBOWJSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void 4CZNPOLG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void 1CIJSYM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void Z5HBK0D ( ) throws Throwable { goodG2B ( ) ; },0
"private void SHPCW30G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_File_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void SZFP6T5Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void HK11RAXG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void RVTLSBC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_File_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_File_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WP3A207 ( ) throws Throwable { goodG2B ( ) ; },0
private void I0XVQP5G2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_File_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_File_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void 7E3TM39 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 6WXP9UM ( ) throws Throwable { goodG2B ( ) ; },0
private void LR0DM2AG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 74V3RBR ( ) throws Throwable { int data ; if ( true ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 93HVVHEG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 74UOTNYG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J8GM6WV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void AV4FBWV ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void S4CIZCUG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void TEZU4A8G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2RTPR0G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void A4X5VBP ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void HKYZ5UQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void FUJV8Q4G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5I1I9H6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void RHOGLNQ ( ) throws Throwable { int data ; if ( privateTrue ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 98RA26IG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MR8YEFSG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VR7XY5Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void X2X701Z ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void FQWRE1IG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 33AY15FG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7BOURUA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void QKBUXJN ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void Y17T239G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void R9EF3L3G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J09R45W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 97HZ3G9 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void I9LPXZ5G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EAK91X9G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EK5POHT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void L12YM12 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void MTXL5WAG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DQ1TF6OG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DMZDFMZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void LL692UP ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 5KG6K5TG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NXD0GDZG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HLSIKNH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void TWHQAEG ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 64DOOIXG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 6ZUJ4K4G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4JTEJME ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void SG548O4 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void L8X1UHQG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 6B4QKK5 ( ) throws Throwable { goodG2B ( ) ; },0
public void 21ACEDT ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void ALTZT6OG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void X25RF25G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void GYGGHCH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void APFH2EC ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void DN022XXG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void M5ES0A0G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void F68HCPE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 1SC9XJZ ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Short . MAX_VALUE + 5 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void IJU9B68G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0FCBN58G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YIYDGTB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 9HC63F0 ( ) throws Throwable { int data ; while ( true ) { data = Short . MAX_VALUE + 5 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 654WKS1G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void QKTPTCE ( ) throws Throwable { goodG2B ( ) ; },0
public void 9SK6IJC ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },1
private void EWKD5N8G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void S5TMCRX ( ) throws Throwable { goodG2B ( ) ; },0
public void YOJLNRE ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int W91RFOL_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public void O90LRT8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FYEH6R5G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int EJJKSGWG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void N6J8OFNG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int ZOSC5D9G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void DWNAAKF ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void JR1KKOL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void ZP1EUMAG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void T9VQRP4G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public int 3O7XNJ6Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_byte_22a . badPublicStatic ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public int MAZU42EG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int KMLK4KJG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void OXXZI92 ( ) throws Throwable { int dataCopy ; { int data ; data = Short . MAX_VALUE + 5 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },1
public void NI751AY ( ) throws Throwable { goodG2B ( ) ; },0
private void 0BHC1X3G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void A8MS9QKSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 94BUH1X ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; badSink ( data ) ; },1
public void WD3FE72 ( ) throws Throwable { goodG2B ( ) ; },0
private void EKUDBC7G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 5AXUTTRG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int XM6N6TLSource ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; return data ; },1
public void V5H6FVZ ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int YW7R8YIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void C559TT4G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 8099LIT ( ) throws Throwable { goodG2B ( ) ; },0
private void J0NIKGBSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 1QP62MD ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; dataBad = data ; badSink ( ) ; },1
public void M0SOSVS ( ) throws Throwable { goodG2B ( ) ; },0
private void 21WAEEZG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 9RUQE9IG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void PH0MFAW ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_51b ( ) ) . badSink ( data ) ; },1
public void I1EIXRN ( ) throws Throwable { goodG2B ( ) ; },0
private void OLNU6FKG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void G5FV4IHSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 1TLZUILG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void XFMAICM ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_52b ( ) ) . badSink ( data ) ; },1
public void W5XZB9K ( ) throws Throwable { goodG2B ( ) ; },0
private void ENYQI6UG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 1W5EOB9Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 2HA030EG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 6QJAGVFSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 2GPOMSLG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 0OK4P1E ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53b ( ) ) . badSink ( data ) ; },1
public void X8Y1QK1 ( ) throws Throwable { goodG2B ( ) ; },0
private void HYFY4IMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void DULGP9HSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void 2IBJ7E8G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void AHSFUBQSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void UONRUWDG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0WNDN6JSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void TB93OJFG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void MNCM35Z ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54b ( ) ) . badSink ( data ) ; },1
public void Q776YHD ( ) throws Throwable { goodG2B ( ) ; },0
private void LFK7UZHG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void MBYYUKKSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void 64R2EN8G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2LV0B93Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void KB0GI91G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ZVA88GDSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void Z55NXLNG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 7ZGK9ACSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PQXVRO8G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 0GEIBP5 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EEGAOYW ( ) throws Throwable { goodG2B ( ) ; },0
private void 8BE6ZMFG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public int 8DT3YU1Source ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; return data ; },1
public int W9YJE97G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void 6D7V1X1 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_66b ( ) ) . badSink ( dataArray ) ; },1
public void V2FFWO5 ( ) throws Throwable { goodG2B ( ) ; },0
private void YRMCFHUG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void V93WLB9Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 8F1MKD0G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void IPCPRTP ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_67b ( ) ) . badSink ( dataContainer ) ; },1
public void MNHY95I ( ) throws Throwable { goodG2B ( ) ; },0
private void M9V4LMLG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void GRN238QSink ( CWE197_Numeric_Truncation_Error__int_large_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 5E4MS1VG2BSink ( CWE197_Numeric_Truncation_Error__int_large_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 8YH996D ( ) throws Throwable { data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_68b ( ) ) . badSink ( ) ; },1
public void 0WTBXM6 ( ) throws Throwable { goodG2B ( ) ; },0
private void J3DF30DG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void QF6TC6YSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_large_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 0D3F1T6G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_large_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void V3L7NZ1 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void S5BZXRK ( ) throws Throwable { goodG2B ( ) ; },0
private void 2RQTN4RG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void KIZYGLKSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void BHSVQFVG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void AK8PJWL ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void WYTZNPZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7RIBCAOG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void RULF4YCSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void VDY7PSCG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 663IT2P ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void AE5RKOG ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7FE3D16G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void EFCBOK3Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void R49GIBCG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void RERW398 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void IVFJLW3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5YHL4DPG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 3M5S6CHSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void KWVGDAYG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void XK5PILT ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void KFWVILV ( ) throws Throwable { goodG2B ( ) ; },0
"private void GEJ52G2G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Z3DQGALSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8AV3CEJG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void KUC2D5G ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_large_to_byte_81_bad ( ) ; baseObject . action ( data ) ; },1
public void 6CM59RB ( ) throws Throwable { goodG2B ( ) ; },0
private void MBINGEPG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_large_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_large_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void 57UTWDB ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; { IO . writeLine ( ( short ) data ) ; } },1
public void VBQXKNW ( ) throws Throwable { goodG2B ( ) ; },0
private void UISFNR1G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
public void DLU0YCH ( ) throws Throwable { int data ; if ( true ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void ZCUIEPXG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 6MAC2ICG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 4WW2ZX0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EJHRL9C ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 50YD5QKG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void DVHN7E4G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RBIH32W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void HWP9SDI ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void GHDKOO4G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 0H83VB6G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void WV2WMWF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 631JY4Z ( ) throws Throwable { int data ; if ( privateTrue ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void FFL6S38G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void AB2SXEFG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void X5Q3OJD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void OG3PVFL ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void R0FY1J6G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void U5UJ4D3G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 1FRZ4HB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 95DQYZB ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void GXCKE9RG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void E34KFR2G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void VA464CE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void BDSV9DN ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 7EIB09DG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void XMO5Q2VG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 35R7VUS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 027KZPX ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 566P9ZFG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 68CNFEJG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RZJEOL6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 4GS6ZC2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void DI7UK70G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void J2F5622G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PLTQX7D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void W6433RZ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 8JDXAV5G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 53RRWOMG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void G80HTAH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void RLZCH7D ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MAX_VALUE + 5 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void W9IMN00G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 7AXFL5R ( ) throws Throwable { goodG2B ( ) ; },0
public void 4O9R4U3 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void UUVMSW1G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 11WUVE9G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void Y0SNC67 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void YPHY3RO ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 98ZYT7ZG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QSWDJ2BG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void ZBZTC44 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void WAMVSF9 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Short . MAX_VALUE + 5 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 2KY6KS4G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QLTHGR2G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TT6EFKS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 3FJYO7E ( ) throws Throwable { int data ; while ( true ) { data = Short . MAX_VALUE + 5 ; break ; } { IO . writeLine ( ( short ) data ) ; } },1
private void HEK3L60G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RKSVGYL ( ) throws Throwable { goodG2B ( ) ; },0
public void LKL5A49 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },1
private void JE7SVHVG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void Q7AZKLA ( ) throws Throwable { goodG2B ( ) ; },0
public void X7DM32V ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int 6J2MQHU_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public void PLD5MKQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void VUVPTI9G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int C55J0F6G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 4ALL72XG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 5817AAZG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void G5LPJY9 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void J0O57SW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void SRHELQ3G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void YWJW3GXG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_large_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public int NZZGWMVSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_short_22a . badPublicStatic ) { data = Short . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public int AL0RTAFG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int OSZGBNMG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_large_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void MVYUGWI ( ) throws Throwable { int dataCopy ; { int data ; data = Short . MAX_VALUE + 5 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },1
public void DIWCMBJ ( ) throws Throwable { goodG2B ( ) ; },0
private void NNGIZO3G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void S591SS0Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 15BN7AR ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; badSink ( data ) ; },1
public void VL8S4AO ( ) throws Throwable { goodG2B ( ) ; },0
private void 9I950ZTG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void M0FXESFG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int V039ZY1Source ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; return data ; },1
public void 34AVBW2 ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int J0J9TZSG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void TYC0416G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void GVQB90B ( ) throws Throwable { goodG2B ( ) ; },0
private void 17WYKXUSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
public void C12QZPY ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; dataBad = data ; badSink ( ) ; },1
public void UW6CVXH ( ) throws Throwable { goodG2B ( ) ; },0
private void 7N84ADNG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void NP9UDWUG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void J73DWPW ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_51b ( ) ) . badSink ( data ) ; },1
public void LQMX5P4 ( ) throws Throwable { goodG2B ( ) ; },0
private void CCSNTQNG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void J6O76QFSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void RI714DHG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void DMWTTWH ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_52b ( ) ) . badSink ( data ) ; },1
public void 2UEYFO0 ( ) throws Throwable { goodG2B ( ) ; },0
private void LL7H39ZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 0Z13GQ3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_52c ( ) ) . badSink ( data ) ; },1
public void GLEO1GLG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void BEH1AG2Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 074SIVZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void N77ZH0A ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53b ( ) ) . badSink ( data ) ; },1
public void E4V9URE ( ) throws Throwable { goodG2B ( ) ; },0
private void W4LNOI0G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 5R12X5ASink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53c ( ) ) . badSink ( data ) ; },1
public void OI2513BG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void J7BLY83Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53d ( ) ) . badSink ( data ) ; },1
public void XOSI707G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void KQZSZVDSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void E8CJU7VG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void YQXGP17 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54b ( ) ) . badSink ( data ) ; },1
public void OTD9TWC ( ) throws Throwable { goodG2B ( ) ; },0
private void BJWDF4HG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 1NUOBTSSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54c ( ) ) . badSink ( data ) ; },1
public void SNMR167G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void D7QGSLTSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54d ( ) ) . badSink ( data ) ; },1
public void ZGZCRK1G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void KMKXS0KSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54e ( ) ) . badSink ( data ) ; },1
public void HHMF3TCG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_large_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void KJ6B6MMSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void LVCDZTIG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 6X0YF3E ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_large_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void OM8PPMQ ( ) throws Throwable { goodG2B ( ) ; },0
private void ACD4FWMG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_large_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public int C1086MCSource ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; return data ; },1
public int 1TFCITHG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void JX249HW ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_66b ( ) ) . badSink ( dataArray ) ; },1
public void Y1C27BW ( ) throws Throwable { goodG2B ( ) ; },0
private void FICD9DDG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void FLR73KASink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void 5OFG33TG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
public void ATMVK62 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_67b ( ) ) . badSink ( dataContainer ) ; },1
public void 4P6RK6O ( ) throws Throwable { goodG2B ( ) ; },0
private void ND150BXG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void QAR7HBBSink ( CWE197_Numeric_Truncation_Error__int_large_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 99LC4NFG2BSink ( CWE197_Numeric_Truncation_Error__int_large_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
public void 4PDG5WG ( ) throws Throwable { data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_68b ( ) ) . badSink ( ) ; },1
public void CXZP5BV ( ) throws Throwable { goodG2B ( ) ; },0
private void M2PJQGEG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void 4CL15E5Sink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_large_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void 8L6VA81G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_large_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
public void KQ1AG1E ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void 5TTK68B ( ) throws Throwable { goodG2B ( ) ; },0
private void 8SWV0MBG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 3L7QSMISink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void VS26ORJG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void RR1WZZU ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 8ML57CC ( ) throws Throwable { goodG2B ( ) ; },0
"private void P3ON2R9G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 08MOYP0Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void FG8WP5WG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void IMEHL65 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void S4KB9ZB ( ) throws Throwable { goodG2B ( ) ; },0
"private void I2URZGIG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void NNSGCRGSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 4O71FRUG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ZUR95E9 ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void LFPUVXW ( ) throws Throwable { goodG2B ( ) ; },0
"private void RCSH6V9G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void EMI9JV9Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void OSUYACEG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void GPSL37M ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void ZI06GAT ( ) throws Throwable { goodG2B ( ) ; },0
"private void A4D8IPBG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_large_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void CEJYZXUSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void PLP02VGG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void ZDLV9WI ( ) throws Throwable { int data ; data = Short . MAX_VALUE + 5 ; CWE197_Numeric_Truncation_Error__int_large_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_large_to_short_81_bad ( ) ; baseObject . action ( data ) ; },1
public void D1UTWDB ( ) throws Throwable { goodG2B ( ) ; },0
private void VHPELAYG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_large_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_large_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 6P0MLYF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void VCE54G5 ( ) throws Throwable { goodG2B ( ) ; },0
private void YGE1IMJG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void E083M06 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void EU2MKU1G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void R1UTVA2G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DCIKOV6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CJFH8F3 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void UQ6Z2AGG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void H500Q70G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VLIHZ00 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6EAGUEK ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 25QNB8IG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void G3TVR4AG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DNO3ZPL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G90097I ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void X0C5GD0G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void TZ7IOBSG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void GHOZVO4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LFN960E ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BFSTWFQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 5F4IQS1G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XBA5I1J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y6H4S6M ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void IBI8EEGG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void KLFP674G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 3TG1XKL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DAC7IWZ ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Q5T9QMHG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void JRBFJZKG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 940XUVZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KIIXD4E ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KKJHVIZG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 3963L87G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VSAD5LG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Z28KN65 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void E5Q31A7G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void TD4NEQZG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void KYQ34Z5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MWBVTZM ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void QXM9REDG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 3T8TO6SG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void CTCVLAK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6YSQIN1 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void G7JA263G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EQAC2OK ( ) throws Throwable { goodG2B ( ) ; },0
"public void B16UH8F ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void J0S3RHKG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4Y09NJWG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1L0AUNC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void P85A0ZZ ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 7ZYA8QLG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void IU29D14G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void P4U806W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PB2IKG3 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void G4JCHO1G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ZCCJBJ8G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void OV4AOJ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UT0Z0PQ ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PSS2RXDG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8GFJBFH ( ) throws Throwable { goodG2B ( ) ; },0
"public void 6OX1OKJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 2Z0XKZ8G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void RQ5HX5D ( ) throws Throwable { goodG2B ( ) ; },0
public void S3C4WLJ ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int 80ORDIZ_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void K12YF16 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void NH5EB27G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int KT3F9VFG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void UMZAF3OG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int X1MK5MLG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void XDRUYRO ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void J6VJT7H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 8YT0VCXG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void DCISZQSG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int UI9L9NOSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 32P7FHWG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int CI341SUG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void BZ6XPWE ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void 66ZUW8A ( ) throws Throwable { goodG2B ( ) ; },0
private void XCDGYNCG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void ODVZLTISink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 8IAH5OI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void GGMTGKB ( ) throws Throwable { goodG2B ( ) ; },0
private void JV8DHPMG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void CUKUQE7G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int L82KAV7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void ZXW2LE3 ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int MZE5KXIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void LCEO5L2G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void T3J14ZU ( ) throws Throwable { goodG2B ( ) ; },0
private void 276IX0XSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void QOBB1XM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 4H7HIOJ ( ) throws Throwable { goodG2B ( ) ; },0
private void LD9OC3TG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 9BNTSRPG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void EOC5TEE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void SJ3TK72 ( ) throws Throwable { goodG2B ( ) ; },0
private void IH1OXVNG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 1T38UCGSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void HFPXULGG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void SX5MDXN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void 4HT2Q1L ( ) throws Throwable { goodG2B ( ) ; },0
private void ZVR9YMDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void Z0ZPQPBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 1FY096ZG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GEO28JKSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void YYFK2YMG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void FL13FIW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void ZGCV78H ( ) throws Throwable { goodG2B ( ) ; },0
private void 7KDKECIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void OTRCCURSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void JYA6ZYCG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void V8Q2GJ0Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void BCJSFAFG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 625JRFCSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ZWOTGDWG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void GBO3ROZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void FSNBFPV ( ) throws Throwable { goodG2B ( ) ; },0
private void X36SN14G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 40SKLK1Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void ATK41OVG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 48L9SPWSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void V7GZEREG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void UH99X1KSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void AGH0089G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void CC7ZUQKSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PDF5P0MG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void SDDBOWP ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void O202CYS ( ) throws Throwable { goodG2B ( ) ; },0
private void 0P0JRNHG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 3ZJHSERSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public int XSL938ZG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 4I921TD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 1VCDHJC ( ) throws Throwable { goodG2B ( ) ; },0
private void 7RFDFMMG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void A3ZVQ2NSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void DM0WM09G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void TEB7H4U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void ZK0QW8S ( ) throws Throwable { goodG2B ( ) ; },0
private void P2BERO2G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 7T8FPYISink ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void VK3NXY7G2BSink ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 7FXTA7I ( ) throws Throwable { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void E73RAFP ( ) throws Throwable { goodG2B ( ) ; },0
private void XO3TBD3G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void 9HH44UMSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 8ZCS2SWG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void DJQ5EN3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KU603FH ( ) throws Throwable { goodG2B ( ) ; },0
private void 8HC8CT6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void FUJ3YWUSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 9NZGA1XG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void WVTMHDW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CORT9PN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 72SZNBMG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void OJVAKH4Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void ISX8780G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void R8WVP1L ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void R4XGMMD ( ) throws Throwable { goodG2B ( ) ; },0
"private void AXLBM32G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void DW3PF6OSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void U5YJSVLG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void D5YL78Q ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void T34GXF2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void TSK5IZOG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void XPVUREOSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void R3GHXSBG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 8TVXWPP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DDJ8A4H ( ) throws Throwable { goodG2B ( ) ; },0
"private void M5416K8G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GWWSL86Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void JRGPY47G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 0ROIOVD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VB8211Z ( ) throws Throwable { goodG2B ( ) ; },0
private void 30C4D4NG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 1R9BOQC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void 8GUEZBH ( ) throws Throwable { goodG2B ( ) ; },0
private void LZZ380VG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void RWAJ9FU ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 7HQBB79G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ZTVE8M7G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void PS9ARKM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V7I2O46 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 915YMA7G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void KV1SGVUG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void ESJPBW8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ILCBXCF ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void O57GI4YG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 4Y7RYV3G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void KUBU2QT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FVPSGN2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 7Y1IYR6G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void WTYOWQ9G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2C39IU9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VOPECDT ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ZR7G7PFG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 39YJI2HG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void WX24GNJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FD84A06 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void NLCN6ZDG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void PXSF89FG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void YNS0W2G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IZDU5ZK ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void YX9IUF3G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QI79D1KG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void GHGRE00 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3YRZGIY ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void BG00ERYG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QO1K03XG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void HVKGQS8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VOYG12C ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void L11MCSWG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void LVWC9U8G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void NHDF63Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VULONHJ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ZFEDWOIG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void AVNSBHNG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void K3TP12T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N8E4OVF ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 4RGZVSQG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void K3E7HI9 ( ) throws Throwable { goodG2B ( ) ; },0
"public void N0HDVOZ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 3K1E9QHG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 2MNKA7PG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void WJTI5BV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q65IBK2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 8O311IZG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void PZJUBBWG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void CSG9Q7M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JYC47VP ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void DJ7LEUMG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void NOGTCE7G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 9SZUJNJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AV5TYF9 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 9LU4L39G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XZ5FTIT ( ) throws Throwable { goodG2B ( ) ; },0
"public void BEHOPXH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void LHOR5U8G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void K59KYIH ( ) throws Throwable { goodG2B ( ) ; },0
public void Q44WA3M ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int HBCJHM6_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void LI3EWXU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void EZOZUBJG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 622WW9HG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void EO0ST4AG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 970RKV4G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 64T8F0T ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void EFQ38LB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 2BH1RZDG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void PDMRTCGG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int CAW1SFISource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int HI10AKBG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 136C8RBG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void CWX8B08 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void 2F7T9KQ ( ) throws Throwable { goodG2B ( ) ; },0
private void KD4W0PCG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void TSK7BI1Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void ZGO644S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void ECT2NG8 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZBYPF7GG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void PE1N3PWG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int Y7WLLWESource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void BPDL26N ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int TBNOV6XG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 3SQVJS8G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void U1231JS ( ) throws Throwable { goodG2B ( ) ; },0
private void 702WBGDSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void TF6XPF5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void HUM69OB ( ) throws Throwable { goodG2B ( ) ; },0
private void GF3YKPQG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void T773N40G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void BAG1PBH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void 3WJ97LK ( ) throws Throwable { goodG2B ( ) ; },0
private void HKLBR0SG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void VV6PAKOSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 675H90NG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void 7LXYM3S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void QAUQ7JV ( ) throws Throwable { goodG2B ( ) ; },0
private void 3NT9TQ6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void N9EDIOBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_52c ( ) ) . badSink ( data ) ; },1
public void 28P46ITG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void K9BLVKQSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 7JYYDHWG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void LNFIDF5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void R86ZFY8 ( ) throws Throwable { goodG2B ( ) ; },0
private void YY9AE45G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void XGC3QXPSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53c ( ) ) . badSink ( data ) ; },1
public void VZYN8KWG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void DFCLUXASink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53d ( ) ) . badSink ( data ) ; },1
public void 7EOEX8NG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void LA67493Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void MY0DDCHG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void UIWYG1Y ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void 24OAOTT ( ) throws Throwable { goodG2B ( ) ; },0
private void 4SZH4C9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void N3LFGJFSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54c ( ) ) . badSink ( data ) ; },1
public void SGY3L8BG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void V8E4SPESink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54d ( ) ) . badSink ( data ) ; },1
public void LNZOU95G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void N2QXAS8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54e ( ) ) . badSink ( data ) ; },1
public void S8MZ5IVG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1Z3BS85Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void OM9S1G4G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void K06MCHY ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void DFBHPB8 ( ) throws Throwable { goodG2B ( ) ; },0
private void SX92L27G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int IKGVGK1Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public int LC56EJRG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void VA0ZU0J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void OOGK1P1 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2MX4RQCG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void PGD3WEUSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void 8EIFZZKG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 5PI9PVW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 64OQQ4L ( ) throws Throwable { goodG2B ( ) ; },0
private void LWJA7DFG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void CHQL4ZQSink ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 7X7UNBOG2BSink ( CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void YQLP6I6 ( ) throws Throwable { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_68b ( ) ) . badSink ( ) ; }",1
public void PA6ED4T ( ) throws Throwable { goodG2B ( ) ; },0
private void W2DXPACG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void Q1JX1E7Sink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void 781XD0PG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void S6KKAQA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 6UJE34D ( ) throws Throwable { goodG2B ( ) ; },0
private void IQJKQY4G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 0887OSASink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void QFRJA5BG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void IIZNB2Y ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void PRWVTBK ( ) throws Throwable { goodG2B ( ) ; },0
"private void EZQT5X5G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 8SLMTZJSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 7N1RR5EG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void BHI995Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void XKO82AM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1JQ28R0G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void W0IV162Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void GWH6K8UG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 01ECOFS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void QBZ6NZY ( ) throws Throwable { goodG2B ( ) ; },0
"private void 77YNFOSG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 235GAA1Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void 36LLA82G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void V12SHU3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void VGL5EEZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void Y5GU0C8G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void UHQEUGHSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5IW41LLG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BP7UNPQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void PAPDQLH ( ) throws Throwable { goodG2B ( ) ; },0
private void BIVDV7VG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_listen_tcp_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 49OMHET ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void 40S8BJB ( ) throws Throwable { goodG2B ( ) ; },0
private void 42RM0F2G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void YZEXKA4 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void GRJ2DQRG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ABI5ZAHG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void TD40OGZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GNU0HFS ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9EKH8AHG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void B8M0H12G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2784L22 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S68FD5L ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TTU6R5XG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RXQ5IR0G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0WTBKLY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KLU321C ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1T044UEG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 45PJ3ZIG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JTVU3XA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8X3AEJK ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 92TECDSG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0PSW6PJG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4E76Z8N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 209MU51 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0BZRMB9G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EFMSRW0G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7LPPAOE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void D6TUSRD ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 6EYW3ZEG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void W3H2G2LG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JZMBT0Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 89SZXVJ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void OI39IKBG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void M0QHA66G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void SX6QL1L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5A033WT ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void K4XCNETG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4A415BGG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void R9CW0X3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7MDBS63 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void U1GM1VAG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T0GE3CXG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VSFV0DW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HTVLQ7T ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WAGZHVWG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void W71LU7U ( ) throws Throwable { goodG2B ( ) ; },0
"public void N29INQU ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void L5GNE0VG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DCDT4JBG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N04R6BD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3DHGEY9 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TLJDS88G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ZW0FT9ZG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N892Z07 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6XXLWHV ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MOHSRLSG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void XG4P4GDG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void I5MHKM4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6ZCC2EV ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 48H53UKG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void F01MYEN ( ) throws Throwable { goodG2B ( ) ; },0
"public void P6ZPM80 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 226FCWNG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void IN9PZPH ( ) throws Throwable { goodG2B ( ) ; },0
public void OPAYCYU ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int YDDDR2N_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void RDTCCX6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 1M7AK7EG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 50EOAFRG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 7GS9OCMG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int H4QNOYLG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 5X64WJ5 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4N9QP35 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 4JH159YG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void MTX1IOAG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int IE4SWBOSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int MUFXNNEG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int E1IRBT6G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QW92RND ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void KUCTLNX ( ) throws Throwable { goodG2B ( ) ; },0
private void IPP3GX1G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void EYXESCVSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void YKODO6R ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void HP5GZZG ( ) throws Throwable { goodG2B ( ) ; },0
private void 38GZBROG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void J3UMLIJG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int YAMHT1FSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void NYYS2DV ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int YLU2E48G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 9L8WEHEG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 2ZOLTNW ( ) throws Throwable { goodG2B ( ) ; },0
private void JW9ENV4Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void 8F8Q5RS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void T0WP9YQ ( ) throws Throwable { goodG2B ( ) ; },0
private void VY7CO9JG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 89TAT48G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void MJ7XPXR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void IBBP7BH ( ) throws Throwable { goodG2B ( ) ; },0
private void B5BBEM8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void ZN24I2TSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 24ZQAS6G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 9GBU8RH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void FSOHHRG ( ) throws Throwable { goodG2B ( ) ; },0
private void C9SFZUIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void NIQ78VBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void CMYOLN7G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void S8HLWABSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void K25G7PCG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void PGFEPQT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void RQ7NSLI ( ) throws Throwable { goodG2B ( ) ; },0
private void 43I55H9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void XDL29X8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void 1IWZCCJG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void DJ1CAS6Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void F58G9BNG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void DYORVPMSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 55PYYVWG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 48KCBDI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void X0UHTZK ( ) throws Throwable { goodG2B ( ) ; },0
private void GK2R47TG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 7LXKGUFSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void BI9KUYCG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void S80ZQIVSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void 2XKVYO9G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 4WDNGRNSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void IY0DC5VG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 7GFCP5GSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void NVG93RDG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 2ONMXJV ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KA5G9D7 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4H1M5FGG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int DMQS53MSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int DTTP4E1G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void YTI7N20 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4JIBH68 ( ) throws Throwable { goodG2B ( ) ; },0
private void O6PDRULG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void QGPPAMNSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KRHG4XZG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void CD7AXN1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void R20N68F ( ) throws Throwable { goodG2B ( ) ; },0
private void YSH32JXG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void V47JBQKSink ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void E10II5KG2BSink ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void M1AI3IZ ( ) throws Throwable { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void W700F8K ( ) throws Throwable { goodG2B ( ) ; },0
private void PTQS96QG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void EU1X3SFSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EQSXCQ4G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 8IFF0CC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void UO9309W ( ) throws Throwable { goodG2B ( ) ; },0
private void B4BVWLCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void LDSX0B5Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void ALOEDW7G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void FJLIE89 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void ON62FS8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void HU7Y834G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void SBLZAIRSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void S1HAAAAG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void APIB527 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void S3J1IRM ( ) throws Throwable { goodG2B ( ) ; },0
"private void MJHFIXMG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 76HYJZESink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4VZ5G8OG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void UOFSL6R ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 92W1KDQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void QT47UAVG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void XDLAFZPSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void Z81QZO1G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void QMKASQS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void O4A910Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4UVMTBQG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void OH7ZM44Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void A3C2ET2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 88OTM42 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 80KR69U ( ) throws Throwable { goodG2B ( ) ; },0
private void C9VZKO2G2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 9NFRXS6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( short ) data ) ; } }",1
public void WOTY9RX ( ) throws Throwable { goodG2B ( ) ; },0
private void B0ZBU2FG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 6H7XB0N ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void D7EOWHFG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void Y14TBIKG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void F3ZPYK8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PAUV2IW ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void QLI7T53G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void N0A6828G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XYTSW8M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AID4PQG ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 9QPXV4NG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void OV768XZG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void KE06VZA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9JPADC2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 0EYGSXXG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 797G9BGG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RCIMSVJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ANTOOSF ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void YHT5IIEG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void OYUD0TQG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 669PME2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IF05SNV ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 29J2EAZG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 6MENNY4G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 5WXLIJS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B6PT8XT ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void YE63XT8G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void NCG9NGKG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2A6J5JN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 62ID8BL ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ISODG3QG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void BL8HZCVG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XXM91J4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HG2E6V8 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 6UTAXMTG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void O30A2JQG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void QSXKFOQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YVSP1DF ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 0S4A4J8G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 9RZBEPYG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void BYAMBDO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IMDN2H7 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void XNXC36YG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void NFH4V9P ( ) throws Throwable { goodG2B ( ) ; },0
"public void 447FFY5 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void XLBWI9IG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ZVP8KHOG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void M8VZNRL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void URPDQL8 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 9PT5OMYG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 3XRQ0PWG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 7B1Y9R1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3GY3UUS ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void RQE8AFCG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void J816K0BG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JKOWY0B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WV9REZ2 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void LD7TX63G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void T0CSX23 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 9ROVZET ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void NZB2MV3G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void FHTAITR ( ) throws Throwable { goodG2B ( ) ; },0
public void EAXK5BD ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int 7GT2NVE_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void ZWOADYW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 39F6YQKG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int TQW1798G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void LAWIBNEG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int MHA37OKG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void FZ1URUH ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void XX7XKLS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void UWWZFQIG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void 9FNB69KG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int 4I9SG8JSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int KEFLLPCG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 5JCMT2OG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 7MH2FAV ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void BBB48A9 ( ) throws Throwable { goodG2B ( ) ; },0
private void UG3RXUFG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void 9H20DLSSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void U9ISNKO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 5HPIFNW ( ) throws Throwable { goodG2B ( ) ; },0
private void VLWW1YBG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void MRFNJGDG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int Z7CLD5ESource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void 6DLWEU4 ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int BJI2ZAHG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void HRPG0HUG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void DXSRFRD ( ) throws Throwable { goodG2B ( ) ; },0
private void LGMC0XWSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void 68PIQG1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void RCZB36Y ( ) throws Throwable { goodG2B ( ) ; },0
private void 9GVF911G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void VDB3YJUG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void WE4O0E1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void I3DSXU5 ( ) throws Throwable { goodG2B ( ) ; },0
private void CXQI3P8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void OJ4QIN7Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void NDEV6BIG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void MU4RFMY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void 3C07B80 ( ) throws Throwable { goodG2B ( ) ; },0
private void QHJGKEIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void FD7W4QJSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_52c ( ) ) . badSink ( data ) ; },1
public void GE6JF2KG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 5EI2EIXSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void NGPZJT8G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void AHSDOWM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void BC0CURW ( ) throws Throwable { goodG2B ( ) ; },0
private void RF5WPVMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void U84QA7LSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53c ( ) ) . badSink ( data ) ; },1
public void ZAITQ8IG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 9VYWY1OSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53d ( ) ) . badSink ( data ) ; },1
public void 8ZCFUXRG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void I9OKGHPSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void K0M5T3FG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void 3HT0OCS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void TGBVV2K ( ) throws Throwable { goodG2B ( ) ; },0
private void 6YHITQCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void S6LXHZNSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54c ( ) ) . badSink ( data ) ; },1
public void SBAI6CUG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void OPNU4OBSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54d ( ) ) . badSink ( data ) ; },1
public void 2SMBOT3G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void WSY2B0DSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54e ( ) ) . badSink ( data ) ; },1
public void R5MSI8JG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 3ACXAA4Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 65SR5EDG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void HWDE644 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 02D7RV3 ( ) throws Throwable { goodG2B ( ) ; },0
private void DLTB4EZG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int P6G2F44Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int 1CWIBGPG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void E0M4HU6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 0DD8DUE ( ) throws Throwable { goodG2B ( ) ; },0
private void K1BTHVSG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 3TXEK06Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void SA8Y17PG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 0O184IH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 8K02I50 ( ) throws Throwable { goodG2B ( ) ; },0
private void G400Y49G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void OFZ2Z0SSink ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void VGRI4RKG2BSink ( CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 89XWC8S ( ) throws Throwable { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_68b ( ) ) . badSink ( ) ; }",1
public void X2OZSXS ( ) throws Throwable { goodG2B ( ) ; },0
private void WPS42V0G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void Z7LB0LLSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void VMXD5CRG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 8ZCZLJ5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 4W221SJ ( ) throws Throwable { goodG2B ( ) ; },0
private void NRFIBKKG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void S4YGGWQSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void QNAO6B6G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void OJVRWE0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void RNM4JCK ( ) throws Throwable { goodG2B ( ) ; },0
"private void FD02UUAG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void VGWWABLSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 1B7FVKNG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void WUS0Z7J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 5QNY4A3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4ZHVPPDG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void F7WBOOYSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void UL5V8AKG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void VFO7HRV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void X967G84 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3MSWWM7G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void K117T8MSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void XP3X6WMG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void DGR34F6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void QHT11B0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6022O8TG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void B98409ASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void EBZODOZG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 9YEG60J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void CT7R3F0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1FI67CHG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_PropertiesFile_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void WEHZ7D0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void I5ZQIJI ( ) throws Throwable { goodG2B ( ) ; },0
private void OJMAAY2G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 1BOS0QX ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void AHWMSUQG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BCSHKRMG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MOGVPOX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y2TH8LO ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 5B1SOU6G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ON58LIHG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 04S2BRR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WX7DC2I ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void HSPGZBPG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RKGWXIIG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EWRC28F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PX0DRET ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 4326XZUG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void UDIJHJ8G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4V6X9IR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1ZMG8GU ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1RS79P5G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Q2H234BG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 03K1W5D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2NOA8F2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void CCXXJ0EG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 8I1YEK6G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void KJNCEDB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O40FEAA ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 7V3W9KTG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EDN2YXYG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void FNM5825 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YK9J0Z6 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 50DCNQYG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void W25488NG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5Z7M7IW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FWC1XDQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MZS3I96G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2UGWJRWG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7X8K14T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V9ZEOVW ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SE3OZ8CG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ZD2A0XOG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 90KK2HV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7TBJQSW ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0OX1KK1G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J7GYRFL ( ) throws Throwable { goodG2B ( ) ; },0
"public void 403B7KI ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void N7258BCG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CHP8G11G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void Y9YMBPO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B5HSZLN ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DHIHSSYG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void AKVCXTNG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LUN8ERQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7PGOI3H ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void HQ2PLJ7G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OZBFB52G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J2ZYKFX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XP3AAVX ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PS3VUDFG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1BI0JW3 ( ) throws Throwable { goodG2B ( ) ; },0
"public void TB6H2LN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 9GVPIVSG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void PYFCOCA ( ) throws Throwable { goodG2B ( ) ; },0
public void NRFGAJV ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private int 6VGQNQX_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void 72BYEEI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void KK5R279G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 5Q6ZIHHG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void STBRB3SG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 4L8STBTG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void KOUA2QE ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3L9ZT1O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void THOGFQOG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void LK3INR3G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 3DTBGXWSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_byte_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public int RBUX7ENG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int C9QAU92G2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void RLY1TWN ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void DFN0U6K ( ) throws Throwable { goodG2B ( ) ; },0
private void 5X5Z3NEG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void MTQBZH3Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 5POWYUN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void B0D0M7H ( ) throws Throwable { goodG2B ( ) ; },0
private void 2GZD5LAG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void ASNF537G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int SRC1DHBSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void KOZXYHP ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int ZRQMC4KG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 4IN7JDVG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void WSIPXTR ( ) throws Throwable { goodG2B ( ) ; },0
private void A6G1VY1Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void 8K2IXXH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void 0QXXB7X ( ) throws Throwable { goodG2B ( ) ; },0
private void YIU7179G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 6UPPTKUG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void D3QDAJM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_51b ( ) ) . badSink ( data ) ; }",1
public void NBV342I ( ) throws Throwable { goodG2B ( ) ; },0
private void YB5S42UG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void OGKAU76Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void KDHE0AGG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void HAX4MEP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_52b ( ) ) . badSink ( data ) ; }",1
public void 6A34WTA ( ) throws Throwable { goodG2B ( ) ; },0
private void IZVWA98G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void R2YKBVUSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void GMO67I2G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void T2GDV34Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 435KNTRG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void QEVSZNW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53b ( ) ) . badSink ( data ) ; }",1
public void ZNJYNMG ( ) throws Throwable { goodG2B ( ) ; },0
private void 74D7YGUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void ZF46A0GSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void 3WJ63X4G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 6VIDMCKSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void 275FBF5G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void TXSOUNSSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void RPQZ7VYG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void T0TSMVA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54b ( ) ) . badSink ( data ) ; }",1
public void QCQHBTF ( ) throws Throwable { goodG2B ( ) ; },0
private void FYDDU7LG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void SX9Z1CZSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void FS9H65KG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void FH2S1WOSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void TNEY891G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void PUSW97JSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void ZKGXE8TG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void RWQNBFVSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ZFXQ9KZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 6U9X19E ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CL86RF6 ( ) throws Throwable { goodG2B ( ) ; },0
private void VT89HVMG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public int 536421ASource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public int 3HTMT3RG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void FQGIARY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 985MXJ8 ( ) throws Throwable { goodG2B ( ) ; },0
private void VFDAA6PG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void DJOU0O2Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void UIT4S55G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void LTT2CES ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 6KPUZXO ( ) throws Throwable { goodG2B ( ) ; },0
private void CN7B9PNG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void JJHFXPWSink ( CWE197_Numeric_Truncation_Error__int_Property_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void IOY7WJIG2BSink ( CWE197_Numeric_Truncation_Error__int_Property_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void J1IUDR9 ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_68b ( ) ) . badSink ( ) ; }",1
public void FFGETVL ( ) throws Throwable { goodG2B ( ) ; },0
private void SMQ84FQG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void 7TDR9BNSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Property_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void E5GDRJXG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Property_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 0ZA04YF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void FYAT3AS ( ) throws Throwable { goodG2B ( ) ; },0
private void ZWRMZ8DG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void AUUFWXFSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 9ATPWNQG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void S19A7Q2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void T4LGOZU ( ) throws Throwable { goodG2B ( ) ; },0
"private void X265E9ZG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void FD8ZDKNSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void H2H54AHG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void GAVYXRB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 7BIA7Z9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void Y9MBTX6G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 2BHM7W6Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void QH7VP05G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void WCOPAI0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 3HVHMK4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void QPNA2NPG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 88O8R42Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void OBR0KF7G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void LUD54IU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void FAJ7X8G ( ) throws Throwable { goodG2B ( ) ; },0
"private void 81GIYJCG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void PON0YEDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void NN4KD9WG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 3TAAGZI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE197_Numeric_Truncation_Error__int_Property_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Property_to_byte_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void W26T6SR ( ) throws Throwable { goodG2B ( ) ; },0
private void Z2IWCMHG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_Property_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Property_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void V8VSGG6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } { IO . writeLine ( ( short ) data ) ; } }",1
public void XDHAB08 ( ) throws Throwable { goodG2B ( ) ; },0
private void QLSRI6BG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
"public void G6FGV3H ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 5XEQTOVG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void JL4GZCQG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void VTZQNMM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4LXARSZ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void X6093GDG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 36KMV8OG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 06NES8M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4YHN1KF ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void WV8AVPKG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void FZ9IT8VG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2ELOR9Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HTOPN34 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 0CMSQMPG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void T55QR03G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void ZMUWZJ9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 43HTDND ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 4JRVGIKG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void NSAHHSQG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void YNFW9EH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LWCCMS9 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void Q2MQ2YPG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void IFHSYVVG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void W25Y3NZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7I1PV44 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void PGMS8H3G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QTPYULPG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void HV56U3G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 95XQ384 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void ML17FMHG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void U76DEI5G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void EGAAAYF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5LZ8XV7 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 661SSXSG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void FVMG07UG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RYASF6P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HVAEEP7 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void DNKSNFTG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 9U46AEVG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void LN6JMBG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BZ8Z2FV ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void QL4TP1KG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 55JS5J6 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 7X8W314 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void RB1VZ0CG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void YHP02Y2G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void GKU2BA3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I4D3ZSZ ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void TCN1JIOG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void CXZIQHMG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2WREHTW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YVYM22L ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void BNFDSZMG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 0VZSLNTG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void O7LQHEB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EX59JGF ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } { IO . writeLine ( ( short ) data ) ; } }",1
private void 6MZ2NIQG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void TA4YT20 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 2C03ZEZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } }",1
private void 7VQYDI7G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void YXFGRI8 ( ) throws Throwable { goodG2B ( ) ; },0
public void 688A9H4 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
"private int 4K6XZNI_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void YETY7J5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void HAGVARSG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int 8CMQ9OWG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void Q2BX3JGG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int TGMR2GPG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void FB5WJEB ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void P7FNVE5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void P2T1D08G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void QY2MM6QG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int VBZOYK8Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_short_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public int TGV0Y0SG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 9PIONBGG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_Property_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void Q4OH535 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } }",1
public void CNAZAZH ( ) throws Throwable { goodG2B ( ) ; },0
private void 7MGTL55G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void CXCPUF1Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
"public void XCMBM4E ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void 38HZH6V ( ) throws Throwable { goodG2B ( ) ; },0
private void VL5X0PSG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void BHIVN30G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 8TVFX9ISource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void W44XFNC ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int A27TXQ3G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 7T8B42DG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void CR00V92 ( ) throws Throwable { goodG2B ( ) ; },0
private void AKQEIO4Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
"public void DKCUPSF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void UCVRLHD ( ) throws Throwable { goodG2B ( ) ; },0
private void 10PKUG0G2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void P7ABG8ZG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void MTRME4F ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_51b ( ) ) . badSink ( data ) ; }",1
public void OHBQMYH ( ) throws Throwable { goodG2B ( ) ; },0
private void D5DNDN1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void MP545BGSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void CFV31G0G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void SXHSZHY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_52b ( ) ) . badSink ( data ) ; }",1
public void 4M8HSKO ( ) throws Throwable { goodG2B ( ) ; },0
private void 0CDX3H1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void ZNAUBHQSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_52c ( ) ) . badSink ( data ) ; },1
public void 1LUEGYYG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 3X6CL5WSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void KDRPLJLG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void HB7VK02 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53b ( ) ) . badSink ( data ) ; }",1
public void 03ODTAK ( ) throws Throwable { goodG2B ( ) ; },0
private void NQPRMVEG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void PRVAFXMSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53c ( ) ) . badSink ( data ) ; },1
public void 6KHFI7GG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void FLDW04HSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53d ( ) ) . badSink ( data ) ; },1
public void RLTOHHMG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 5AHJUA7Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 47LF2LOG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
"public void Q8GKE7F ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54b ( ) ) . badSink ( data ) ; }",1
public void 79D163D ( ) throws Throwable { goodG2B ( ) ; },0
private void ULO6MHLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void EKBLX8XSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54c ( ) ) . badSink ( data ) ; },1
public void DIOTSLPG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void REB7C3MSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54d ( ) ) . badSink ( data ) ; },1
public void DOSKV5IG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void S586I2RSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54e ( ) ) . badSink ( data ) ; },1
public void F0KGYYXG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 3ZJK88KSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void RST0JFYG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void RJMX7S1 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void L7PCG21 ( ) throws Throwable { goodG2B ( ) ; },0
private void 6Y8935MG2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public int TE6KFD7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public int QRHSLTUG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void ZC2XL33 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_66b ( ) ) . badSink ( dataArray ) ; }",1
public void C1MVFR3 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5OZZ4YIG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void IV17H29Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void W7KSF8DG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
"public void LVLVDI4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void BHDIQ14 ( ) throws Throwable { goodG2B ( ) ; },0
private void QO7UK6HG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void D375AI6Sink ( CWE197_Numeric_Truncation_Error__int_Property_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void RX8PSS2G2BSink ( CWE197_Numeric_Truncation_Error__int_Property_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
"public void YJT5BDO ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_68b ( ) ) . badSink ( ) ; }",1
public void YNCE2EF ( ) throws Throwable { goodG2B ( ) ; },0
private void OAX09T7G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void 2ALDKXLSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Property_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void TFTXYE7G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_Property_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
"public void AQUCHO7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void EGKFFP9 ( ) throws Throwable { goodG2B ( ) ; },0
private void W0LMMWCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void TUA8RL8Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void HTPAQ35G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void P4N77B7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 7JFRV88 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 804D8Y9G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void VUW81ICSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void U0RPZF5G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void BOW3DPQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void MK4DNUH ( ) throws Throwable { goodG2B ( ) ; },0
"private void IZ2D67BG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void H2W083DSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void MNF37K1G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void 5YAU3KP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 4TAX3LK ( ) throws Throwable { goodG2B ( ) ; },0
"private void 77BOTCWG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 5WNAFG9Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void CC9FK95G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void M3PTLII ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8HMT7TL ( ) throws Throwable { goodG2B ( ) ; },0
"private void YH2WGRFG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_Property_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void M84PJX0Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void G8I7832G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 78FVI3J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE197_Numeric_Truncation_Error__int_Property_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Property_to_short_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WV9XFY6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2PBMOBAG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_Property_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_Property_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void OPUPJ8A ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 5J6JWB6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 47E9ZODG2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
public void F203AQQ ( ) throws Throwable { int data ; if ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void BJI4KZLG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EIEV6AIG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void TYSLA3P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void AOTGYQE ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 3WFM3MYG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 8PQGMS5G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PEMNLV2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 4K85RQW ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void NCHIPOBG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RLXJ4ZFG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2EZQN8T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void CFHOTS8 ( ) throws Throwable { int data ; if ( privateTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 228CQZDG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void FSWLLK5G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZQL0ZQ1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void RA958LH ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void ALI18JSG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RXQN463G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1BHQEL5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void IZV5V22 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 02E0Q46G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OEEW17YG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ERKWD6F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 0ALL8KV ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 1XPGQ4JG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void V7Q7SV7G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void CG6A2DP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void R7LCK5X ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 1W8K53RG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 5BZHDARG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void BN50DTA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 55WSPY2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void USBW4XGG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 7KIKMX5G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void RJUFUT8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void KG1FZGH ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 6LZLIBZG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void O9CQIL2G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XVUE87C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JGJSEFM ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void BCICD3CG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void H3X0TZH ( ) throws Throwable { goodG2B ( ) ; },0
public void 5L9SAE5 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void HBIKM9KG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ITU7T5PG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 9R81HPR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void IYPEEX7 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void HXV9WY1G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void YN5HNA5G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void M55VBD8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 5OHM9AE ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void A3LFVRPG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void U8CRBV4G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MTZ03QA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 2V66TUY ( ) throws Throwable { int data ; while ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 8HE8782G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NJBIJWC ( ) throws Throwable { goodG2B ( ) ; },0
public void JSY6IB8 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },1
private void ULLC8MRG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 8YBEWJG ( ) throws Throwable { goodG2B ( ) ; },0
public void 72WU6WH ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int LZG7NZK_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public void X6S47EO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 8ZHNP02G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 5P207M4G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void I74SD44G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private int 4L43F0CG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void RNE48UM ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3OZINGZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void G0K2TX0G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void L8K4US9G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public int 7Z3HOKZSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_byte_22a . badPublicStatic ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public int D2SQ97LG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_byte_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int RGFZ9YPG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_byte_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 4YZF98Q ( ) throws Throwable { int dataCopy ; { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },1
public void P8HCOM2 ( ) throws Throwable { goodG2B ( ) ; },0
private void QXCCRIMG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void 5OTYGRISink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void D6W3ELR ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; badSink ( data ) ; },1
public void 07HP66Z ( ) throws Throwable { goodG2B ( ) ; },0
private void LGNBZDQG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 7RHN8XUG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int WZIQLE0Source ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public void 4MJJIM4 ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private int BIB5E74G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void XTZUZSIG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void X69CON0 ( ) throws Throwable { goodG2B ( ) ; },0
private void WJ5GZ8VSink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
public void DYMXTJ2 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataBad = data ; badSink ( ) ; },1
public void MI0WLMD ( ) throws Throwable { goodG2B ( ) ; },0
private void DKF5EDRG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 7GBHGIPG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void ALWPO21 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_51b ( ) ) . badSink ( data ) ; },1
public void P6K7SD3 ( ) throws Throwable { goodG2B ( ) ; },0
private void ER2QVYPG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_51b ( ) ) . goodG2BSink ( data ) ; },0
public void ERSYFGCSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void RCFSAT5G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void SMIGAOL ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_52b ( ) ) . badSink ( data ) ; },1
public void CNGFW79 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZPYRQ3LG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_52b ( ) ) . goodG2BSink ( data ) ; },0
public void NMWV1ZPSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void WULSR3IG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 3HYY6YLSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 8EI64JZG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void HYQRD1A ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53b ( ) ) . badSink ( data ) ; },1
public void 7NCN1UK ( ) throws Throwable { goodG2B ( ) ; },0
private void OTMDPS9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53b ( ) ) . goodG2BSink ( data ) ; },0
public void KUHA8X8Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void Z9AC3NZG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 5010PCPSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void O376296G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void L4I4T41Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ZG0RT0TG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void ZP7J6SS ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54b ( ) ) . badSink ( data ) ; },1
public void T3R0G1X ( ) throws Throwable { goodG2B ( ) ; },0
private void AHF05NYG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 8IA7WH6Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void WTQARCXG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void KDBBBIJSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void G1VWA7JG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YRNDSCDSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void 2RQ1U9KG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void JMO4JLCSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 3UMVE7PG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void NO5HMYA ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void I8GBLCM ( ) throws Throwable { goodG2B ( ) ; },0
private void 3GQ6WE1G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public int JYA6QA2Source ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public int KRXQJQSG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void 7HAK6H8 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_66b ( ) ) . badSink ( dataArray ) ; },1
public void MQRZXN7 ( ) throws Throwable { goodG2B ( ) ; },0
private void UVA3RYHG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void UMS7TYVSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void A1ZUCE8G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void KLMDYC3 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_67b ( ) ) . badSink ( dataContainer ) ; },1
public void B0GH9IF ( ) throws Throwable { goodG2B ( ) ; },0
private void VF1K64UG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 3EVFKU2Sink ( CWE197_Numeric_Truncation_Error__int_random_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void T32SQYNG2BSink ( CWE197_Numeric_Truncation_Error__int_random_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 989SFHE ( ) throws Throwable { data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_68b ( ) ) . badSink ( ) ; },1
public void UG0X4WQ ( ) throws Throwable { goodG2B ( ) ; },0
private void X8247V2G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_68b ( ) ) . goodG2BSink ( ) ; },0
public void ABACX5GSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_random_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void ES2OYO3G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_random_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void H5AC6Z6 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void XGRCUB3 ( ) throws Throwable { goodG2B ( ) ; },0
private void TWNU588G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void CJQ6EYKSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void YOO7DR8G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 4ZJCQ7H ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_72b ( ) ) . badSink ( dataVector ) ; }",1
public void X7UI8ZV ( ) throws Throwable { goodG2B ( ) ; },0
"private void OAM3Z64G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 7YU456KSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 2KT089ZG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 9M00TL0 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 8YZY4NK ( ) throws Throwable { goodG2B ( ) ; },0
"private void G5EG57AG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void N58VVOGSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 2P2MFORG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 9ZKC699 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void ULVXUXD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2EJTMK1G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 7HH4FPRSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void ENUG6ADG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void OO8MINL ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void LO2E1XR ( ) throws Throwable { goodG2B ( ) ; },0
"private void W52B9L9G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_byte_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void R59B792Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void RP8UE7FG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void XDR67UR ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; CWE197_Numeric_Truncation_Error__int_random_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_random_to_byte_81_bad ( ) ; baseObject . action ( data ) ; },1
public void ML9WN88 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7IQ17RTG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_random_to_byte_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_random_to_byte_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void QYWD9BP ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void J8C4LAB ( ) throws Throwable { goodG2B ( ) ; },0
private void JGX2SU9G2B ( ) throws Throwable { int data ; data = 2 ; { IO . writeLine ( ( short ) data ) ; } },0
public void I0EI7IM ( ) throws Throwable { int data ; if ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 1N76H7XG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void MLHHMYCG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void MRFZ6AE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void KKBP0IO ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void OG9LREYG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void TRXAT1VG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 139JQ5W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void QK0NQCQ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void RD6DEF9G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 6G8I0NEG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void JOQK7YQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 2L9V7K2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 29J0W70G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void Y3RKD0DG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void LIUY8MO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void GJCYWJ0 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void FDLVXIBG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void PDBN0RWG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 2RVFFVG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void O04LMTN ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void MOI5KQOG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void U4RKC7AG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void R5I04GP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 10XRJHV ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void 8TGT50BG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 5SXYPMEG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void XL12XWX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void FWBL0WP ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void D1AE9RJG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 4MO7FYFG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void L1SBTQ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void QMDH8KL ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void HZJ5INUG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 95JHSH4G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void U09WIP2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void DK0CUG7 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void KOCX16BG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void 75WQ7VNG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void YE30IWX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void R4MMR08 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void MH25QB3G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void UHMGGPM ( ) throws Throwable { goodG2B ( ) ; },0
public void AULZWKX ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void VY2SR7LG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void ILKAMUTG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void RPVBZ3K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JFLU1CF ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },1
private void RK43GNVG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( short ) data ) ; } },0
private void KD5DUHWG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 5ZKVKRJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 5JQXDF6 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },1
private void PCD7EMSG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
private void QF56LSCG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void 7GQQ8RB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void NLT3SC2 ( ) throws Throwable { int data ; while ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; } { IO . writeLine ( ( short ) data ) ; } },1
private void RH1MN4WG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( short ) data ) ; } },0
public void SANJW6K ( ) throws Throwable { goodG2B ( ) ; },0
public void 9FBINZI ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },1
private void 8EMJV9EG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( short ) data ) ; } } },0
public void LQA7AN6 ( ) throws Throwable { goodG2B ( ) ; },0
public void DQ8BX52 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int S50Q6P7_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public void ZM4BEZK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void U8K2WJFG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int B16EC8XG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void F81QVXFG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private int NL1LH9UG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void JTUKZ7J ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void HVJ4G74 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void UX2D4DAG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void ARZPS2GG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_random_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public int NYRV2BJSource ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_short_22a . badPublicStatic ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public int S1Q07UMG2B1Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_short_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 3CFDP9HG2B2Source ( ) throws Throwable { int data ; if ( CWE197_Numeric_Truncation_Error__int_random_to_short_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void WXEL9NU ( ) throws Throwable { int dataCopy ; { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },1
public void 7SF1MY9 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZTFMHZTG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; { IO . writeLine ( ( short ) data ) ; } } },0
private void P7I7E0LSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void PL5DW14 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; badSink ( data ) ; },1
public void OTPV5EG ( ) throws Throwable { goodG2B ( ) ; },0
private void MMFL26FG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
private void MUMDKDFG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int TYUZADJSource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public void B9HUBXL ( ) throws Throwable { int data = badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
private int P00IWT9G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void LQRIMOWG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void B1LQA3U ( ) throws Throwable { goodG2B ( ) ; },0
private void 508QBL9Sink ( ) throws Throwable { int data = dataBad ; { IO . writeLine ( ( short ) data ) ; } },1
public void YKIZ3HC ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataBad = data ; badSink ( ) ; },1
public void 1TQQ9K6 ( ) throws Throwable { goodG2B ( ) ; },0
private void S0UVC8WG2BSink ( ) throws Throwable { int data = dataGoodG2B ; { IO . writeLine ( ( short ) data ) ; } },0
private void TFYTKBDG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void GT8GB8U ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_51b ( ) ) . badSink ( data ) ; },1
public void 7D26OO0 ( ) throws Throwable { goodG2B ( ) ; },0
private void E6A8IH9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 6GTM50ISink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void NJ7OW1QG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 3BUPD3U ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_52b ( ) ) . badSink ( data ) ; },1
public void GVZT3DA ( ) throws Throwable { goodG2B ( ) ; },0
private void F1OWCOEG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_52b ( ) ) . goodG2BSink ( data ) ; },0
public void GQSKOB3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_52c ( ) ) . badSink ( data ) ; },1
public void CCUP58SG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GG4Z1KBSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void YDEY2JJG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void PH6C5OX ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53b ( ) ) . badSink ( data ) ; },1
public void TVT7M4B ( ) throws Throwable { goodG2B ( ) ; },0
private void AEZOI50G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53b ( ) ) . goodG2BSink ( data ) ; },0
public void S5YIEX5Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53c ( ) ) . badSink ( data ) ; },1
public void JSI31SNG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 2RHRE88Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53d ( ) ) . badSink ( data ) ; },1
public void IXM3JPUG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void T3OKFKXSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void VRU8M72G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void 53G27SH ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54b ( ) ) . badSink ( data ) ; },1
public void A6K3MHA ( ) throws Throwable { goodG2B ( ) ; },0
private void PSH2L19G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54b ( ) ) . goodG2BSink ( data ) ; },0
public void BPIN0WOSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54c ( ) ) . badSink ( data ) ; },1
public void 1M8EVWMG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void KZU8GBRSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54d ( ) ) . badSink ( data ) ; },1
public void II5JU2JG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 9O6OWQQSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54e ( ) ) . badSink ( data ) ; },1
public void YB01B2VG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_random_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void XV6U452Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 1XJ0JHKG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void VWCBXT1 ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_random_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void A7IUTZJ ( ) throws Throwable { goodG2B ( ) ; },0
private void ND2WX13G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_random_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public int PD9SYTESource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public int KX4CEUAG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void N3BVA36 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_66b ( ) ) . badSink ( dataArray ) ; },1
public void 7OVEEUW ( ) throws Throwable { goodG2B ( ) ; },0
private void 0CCPWQ4G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void LLSHW7SSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void QWO49EAG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
public void ZBRCLWF ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_67b ( ) ) . badSink ( dataContainer ) ; },1
public void T635NGJ ( ) throws Throwable { goodG2B ( ) ; },0
private void AV35LGNG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 56QCS79Sink ( CWE197_Numeric_Truncation_Error__int_random_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 1368T61G2BSink ( CWE197_Numeric_Truncation_Error__int_random_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
public void 6UI85RN ( ) throws Throwable { data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_68b ( ) ) . badSink ( ) ; },1
public void FAKT8QV ( ) throws Throwable { goodG2B ( ) ; },0
private void G767DWJG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_68b ( ) ) . goodG2BSink ( ) ; },0
public void 1C87ARSSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_random_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void 6HPPWWXG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_random_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
public void Z1PROY7 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void TA3L2RP ( ) throws Throwable { goodG2B ( ) ; },0
private void S70XW18G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void LK3FPLLSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void JSNNILJG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
"public void MLWSXJ8 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 7U4D2GW ( ) throws Throwable { goodG2B ( ) ; },0
"private void CI6M380G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void Z6YUQ8ISink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void DEXSAULG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void A250JZW ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Z8KCSHG ( ) throws Throwable { goodG2B ( ) ; },0
"private void S6K6UILG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void ZPZZJXVSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void 8C6BZSUG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void ZTEFEKZ ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void QFS5YIG ( ) throws Throwable { goodG2B ( ) ; },0
"private void BCF4NTMG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 7FYMKXWSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void D93BJSPG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void OBQOUM3 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void M088PLM ( ) throws Throwable { goodG2B ( ) ; },0
"private void C0E2PV6G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__int_random_to_short_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Q4PK174Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8E71MYBG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void 6VWGWW2 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; CWE197_Numeric_Truncation_Error__int_random_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_random_to_short_81_bad ( ) ; baseObject . action ( data ) ; },1
public void 7FQ0F8U ( ) throws Throwable { goodG2B ( ) ; },0
private void J7Y3M5WG2B ( ) throws Throwable { int data ; data = 2 ; CWE197_Numeric_Truncation_Error__int_random_to_short_81_base baseObject = new CWE197_Numeric_Truncation_Error__int_random_to_short_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void 0HLVNBP ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void I5IFA2G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void I3J4UXDG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void AIS1KK5G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void QE3L8CJSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void AGBQERWG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 53T3ZTISink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_52c ( ) ) . badSink ( data ) ; },1
public void 0GEWQ3UG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_52c ( ) ) . goodG2BSink ( data ) ; },0
public void UK5DQW4Sink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ED72L5YG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void BXTIS2CSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_53c ( ) ) . badSink ( data ) ; },1
public void 1I2WS43G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 0BK8M74Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_53d ( ) ) . badSink ( data ) ; },1
public void 664CHZCG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0VUK53FSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void T9YU5ASG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void JSKIGM5Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54c ( ) ) . badSink ( data ) ; },1
public void 7DIB9POG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54c ( ) ) . goodG2BSink ( data ) ; },0
public void NHI49QASink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54d ( ) ) . badSink ( data ) ; },1
public void P6M2OBAG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54d ( ) ) . goodG2BSink ( data ) ; },0
public void M8HU4L0Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54e ( ) ) . badSink ( data ) ; },1
public void XMFEFK1G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 7GST20SSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void F2VWWO0G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 0E20B1L ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void L8NA0MZ ( ) throws Throwable { goodG2B ( ) ; },0
private void VX15HH6G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 3D646ABSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void XIEO9DIG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 4WLIPX1Sink ( CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 36X5WFAG2BSink ( CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void C7KJ7CASink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void WBTNI3GG2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_URLConnection_to_byte_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void BI880PISink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void PSZILX8G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
public void IM65YDKSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void M1DENIWG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void WISHK8SSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void PW5XEGUG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 73VQY9PSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void ZPYLH5AG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void WXIAXOFSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void OS96MJ0G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void OEPKITA ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void RUBJ1S9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void LWGBR4WG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
private void J06Z7SBG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void N0ZWSFFSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void Z3U93WUG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void AAF8C0ISink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_52c ( ) ) . badSink ( data ) ; },1
public void 4LLSXECG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WB2ZWV7Sink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void 6VLM5OFG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void DE32HTGSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_53c ( ) ) . badSink ( data ) ; },1
public void BUBTI2ZG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_53c ( ) ) . goodG2BSink ( data ) ; },0
public void Q5V8VFESink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_53d ( ) ) . badSink ( data ) ; },1
public void FQZEGJJG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_53d ( ) ) . goodG2BSink ( data ) ; },0
public void D2LJGLLSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void VACGN42G2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void H3CM0K3Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54c ( ) ) . badSink ( data ) ; },1
public void PSMLH2HG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 250Z577Sink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54d ( ) ) . badSink ( data ) ; },1
public void MY11L11G2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54d ( ) ) . goodG2BSink ( data ) ; },0
public void NPQ7PDOSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54e ( ) ) . badSink ( data ) ; },1
public void VLFW8DYG2BSink ( int data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_54e ( ) ) . goodG2BSink ( data ) ; },0
public void LOSLNBWSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },1
public void HPTS8SDG2BSink ( int data ) throws Throwable { { IO . writeLine ( ( short ) data ) ; } },0
public void HXMA9ZA ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void X64PRDB ( ) throws Throwable { goodG2B ( ) ; },0
private void H7JG2R1G2B ( ) throws Throwable { int data = ( new CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void QLSGKKASink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },1
public void KUCQ8XXG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; { IO . writeLine ( ( short ) data ) ; } },0
public void 4RD4MSHSink ( CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },1
public void 9YTB4UQG2BSink ( CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; { IO . writeLine ( ( short ) data ) ; } },0
public void KTU2EQPSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },1
public void 9PNL7X9G2BSink ( ) throws Throwable { int data = CWE197_Numeric_Truncation_Error__int_URLConnection_to_short_68a . data ; { IO . writeLine ( ( short ) data ) ; } },0
public void TM1C9TXSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },1
public void PGYIKWTG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; { IO . writeLine ( ( short ) data ) ; } },0
public void SVARVZGSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void U4IWX3EG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
public void 2GD9HSHSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },1
public void GIVP1LIG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } },0
"public void BK7LFP6Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",1
"public void MY0QTFQG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( short ) data ) ; } }",0
"public void 3OQ5KHMSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 3UIAGJ2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( short ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void LFDH3EC ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void CF8D6Y0 ( ) throws Throwable { goodG2B ( ) ; },0
private void SKUSRAMG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void TXRFDU3 ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SQ8OL79G2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 51Z9HIVG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XEBSAXI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2AS77YD ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9X4RI1ZG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QUZ6JPVG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ELSRXP6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6IXUGQ0 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void RN6OH5FG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 35JDUAIG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 44DYC6T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C7XPWJO ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 2W0J4LDG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void TCQF10DG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MXV8WNA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CN2SLXR ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void S0MOYVJG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ERONNEFG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4VRHXJQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C63OG8N ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 61W2ILZG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Z7JCDXGG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void E7M0MDM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UYUKU6R ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void YLNPR7YG2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 6XR88F6G2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8F7S522 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JWKFKK2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 816WVNKG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DJE4L6IG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2FHTA40 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2ZEAO7Z ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void XH9CH65G2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SYJNLJ3G2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 731EALZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VTV1VJ2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DWKABTMG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void LIWN8CYG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void WB8W824 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RQH0RC4 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void ICFS4UHG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2UMD8YS ( ) throws Throwable { goodG2B ( ) ; },0
"public void Z031L06 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DIJTLL1G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 1V7FWJGG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void Z6ANTVO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X87TAQQ ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8FEYTRHG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QKBR8W8G2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HKM50G4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void POJ7B4N ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void UY23DILG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void W45N4CRG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5S1LHO1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WHEZFT5 ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void X964HMTG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HVXCU9G ( ) throws Throwable { goodG2B ( ) ; },0
"public void 1SRMX01 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 8ZITJBWG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 4E29B1T ( ) throws Throwable { goodG2B ( ) ; },0
public void E8XC1EJ ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short 6AF6NVF_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 3NL160H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 06NNM2QG2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short YMNNQ4SG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void TVWJV5UG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 0OED2YRG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void TQ6CFTD ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KKMDO7Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void EIPKQ6XG2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 830K5ELG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 6EVM4WCSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_connect_tcp_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public short LR3EMWVG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_connect_tcp_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short GGJ4TLHG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_connect_tcp_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 0MN2CSQ ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void OOIGFGH ( ) throws Throwable { goodG2B ( ) ; },0
private void 1KPXO4MG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void WO8CHDKSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void A6NS97R ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void KOV0V3J ( ) throws Throwable { goodG2B ( ) ; },0
private void LL3VYIUG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void G1LSM8MG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short MHH7BX5Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void WT4OJU6 ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short 1VCRGDKG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void 4H74AIYG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void GTSM3F2 ( ) throws Throwable { goodG2B ( ) ; },0
private void DTUHFL4Sink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void PD8ECPJ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void B81WN2J ( ) throws Throwable { goodG2B ( ) ; },0
private void SLHE6DZG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 2G17E4SG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void LDVXRXB ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void LTBDV8J ( ) throws Throwable { goodG2B ( ) ; },0
private void W22VZ9YG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_51b ( ) ) . goodG2BSink ( data ) ; },0
public void E4LD1Q1Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 2JILDHCG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void FJ6Y36J ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void VGUPPR2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 8PRVXZNG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_52b ( ) ) . goodG2BSink ( data ) ; },0
public void EZIFQ7HSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_52c ( ) ) . badSink ( data ) ; },1
public void 4USINB7G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void KG0EAJ9Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void BYUDHBJG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void G0NV3ZZ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void 59WCAF0 ( ) throws Throwable { goodG2B ( ) ; },0
private void D99V8I6G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53b ( ) ) . goodG2BSink ( data ) ; },0
public void OWS72WPSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53c ( ) ) . badSink ( data ) ; },1
public void 90QSLNYG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void JAF1XRUSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53d ( ) ) . badSink ( data ) ; },1
public void Z36Z7M6G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 7G9YP04Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ON84S0XG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 9QLS3QG ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void PRRT5N8 ( ) throws Throwable { goodG2B ( ) ; },0
private void ULP6UWUG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 6OE8RIPSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54c ( ) ) . badSink ( data ) ; },1
public void KOJ0P2HG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void GFXY8GASink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54d ( ) ) . badSink ( data ) ; },1
public void 7BL3QFKG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ZTEH162Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54e ( ) ) . badSink ( data ) ; },1
public void FMOVW5QG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void FEXBIX7Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void CCNDHKAG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void NIX1INI ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void RMEW3WL ( ) throws Throwable { goodG2B ( ) ; },0
private void 1DPGCAHG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short FAOEL3HSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public short 799BD5ZG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void 9ZXDH27 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void G8GB6AR ( ) throws Throwable { goodG2B ( ) ; },0
private void GP2ZQF1G2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 5ARO0SHSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void Y4BXW65G2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void DXTJLBT ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void VBO9A3C ( ) throws Throwable { goodG2B ( ) ; },0
private void 3YU98P8G2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 26MHJXQSink ( CWE197_Numeric_Truncation_Error__short_connect_tcp_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3RODGGOG2BSink ( CWE197_Numeric_Truncation_Error__short_connect_tcp_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void MU0TQR3 ( ) throws Throwable { data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_68b ( ) ) . badSink ( ) ; }",1
public void DQNFBK8 ( ) throws Throwable { goodG2B ( ) ; },0
private void JS2I4B2G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_68b ( ) ) . goodG2BSink ( ) ; },0
public void S7I240GSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_connect_tcp_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void RV80T2GG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_connect_tcp_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 2IU9J4R ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 4ZQUT9O ( ) throws Throwable { goodG2B ( ) ; },0
private void VH2Q9YNG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void ZRNE5H0Sink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 9G3VBTGG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void NW4OPDU ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void GGXB3IH ( ) throws Throwable { goodG2B ( ) ; },0
"private void OLVTNWLG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void PK5F2XRSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CZKZSENG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void TW1PPR5 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 5B9F0DD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5TONVELG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void DQWRG6RSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 2NCFUYAG2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 18CFJR0 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GG2E5W7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void XPYLNR2G2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void CH96ESMSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void VDRGXVGG2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 83QOAYO ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void RXK3A12 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8ATVLMFG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 488R7OKSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void Q94NCMIG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void DXAHWOE ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__short_connect_tcp_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_connect_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void NW9EIOL ( ) throws Throwable { goodG2B ( ) ; },0
private void Y29MDZNG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_connect_tcp_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_connect_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 9TKC4E2 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void I87916K ( ) throws Throwable { goodG2B ( ) ; },0
private void M8YBK0FG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 672OO92 ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void YDDXH8RG2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void S9O1YFXG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NF6D6VQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ED597YS ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 52HTMBBG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EBXPZG9G2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4HTNMIR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K6KTE0Z ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void X4W7NDLG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SPOV911G2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2ENCMFS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4DI9D8A ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8DGFJXXG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T9A14HUG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 95XNJMA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZC55ONK ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void O07QPV5G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 1865HV8G2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void IH6UHBW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ENSDOHI ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 34QUBPCG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void X0UCWW8G2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 84ASU1K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E99L4V9 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MB9WKF3G2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void G3YWIIPG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 25NAH47 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X1YE9VC ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void AD4CN0ZG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DNNDN0QG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2LMZQC3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8Z0DSMP ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8S69VTKG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 9X8DQH2G2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 3EXD147 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JZ9EDQL ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DEWTOWEG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NS5D1JZG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0XJTSVS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3VFUGMW ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void VJABP85G2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void U0DR4UO ( ) throws Throwable { goodG2B ( ) ; },0
"public void WX9DIB9 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 18CR1J5G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void FYCBRU6G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PN60H95 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5F8Q76R ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PE8KS3XG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void TJXDX1IG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5H68OZF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YKMKEY2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void R4V1L1OG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2VXA4BUG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void OFQIZ2P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GYFV132 ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 2XE8RESG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XDNV0KF ( ) throws Throwable { goodG2B ( ) ; },0
"public void HIGVCE8 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void H4JQL99G2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 41882WL ( ) throws Throwable { goodG2B ( ) ; },0
public void YAYDBGX ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short TLJLZ00_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void UDRENS2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FHG7P89G2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 4B8MGKMG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 2CYIEF5G2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 4JWRIUWG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 7FK8DS7 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_console_readLine_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void MK4YDJC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 1QLPGZ2G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_console_readLine_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void APKICRRG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_console_readLine_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short D5UEBNMSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_console_readLine_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public short GESIZ0HG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_console_readLine_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short 8RZ73E3G2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_console_readLine_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QNGX415 ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void ZTBZANM ( ) throws Throwable { goodG2B ( ) ; },0
private void K2LBFWMG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void 5HI68P2Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void KW87VRU ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void BABVDVE ( ) throws Throwable { goodG2B ( ) ; },0
private void LWOZY3EG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void BMO1KNBG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short FPRCPL0Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void 8UF65MM ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short P43U3YNG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void J10G38CG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 4FEE0SQ ( ) throws Throwable { goodG2B ( ) ; },0
private void T0VPKT2Sink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void IXIRW16 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void SKRHXUF ( ) throws Throwable { goodG2B ( ) ; },0
private void P1PRJZKG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 13SQGCHG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 37TVU4G ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_51b ( ) ) . badSink ( data ) ; }",1
public void 459OQ9Y ( ) throws Throwable { goodG2B ( ) ; },0
private void FEHM3ZVG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_51b ( ) ) . goodG2BSink ( data ) ; },0
public void QNEZ0ILSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void QL674Q5G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void C0F974B ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_52b ( ) ) . badSink ( data ) ; }",1
public void FMENDJ0 ( ) throws Throwable { goodG2B ( ) ; },0
private void XTUMIOBG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_52b ( ) ) . goodG2BSink ( data ) ; },0
public void LQG3QBFSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_52c ( ) ) . badSink ( data ) ; },1
public void 5SFCNJNG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_52c ( ) ) . goodG2BSink ( data ) ; },0
public void ZMV97D4Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void B3RDYAMG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void Z705NX3 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53b ( ) ) . badSink ( data ) ; }",1
public void U98354K ( ) throws Throwable { goodG2B ( ) ; },0
private void 2XA8U5RG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53b ( ) ) . goodG2BSink ( data ) ; },0
public void ZP7KV1VSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53c ( ) ) . badSink ( data ) ; },1
public void PY1WIX9G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53c ( ) ) . goodG2BSink ( data ) ; },0
public void BG0PFCXSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53d ( ) ) . badSink ( data ) ; },1
public void TB03JP5G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_53d ( ) ) . goodG2BSink ( data ) ; },0
public void NVPHJN5Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void XWLB5VYG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 3EEXNT9 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54b ( ) ) . badSink ( data ) ; }",1
public void GX2LK1T ( ) throws Throwable { goodG2B ( ) ; },0
private void TCR1BGPG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54b ( ) ) . goodG2BSink ( data ) ; },0
public void JN22CH5Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54c ( ) ) . badSink ( data ) ; },1
public void GWKH6MHG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54c ( ) ) . goodG2BSink ( data ) ; },0
public void YT5DQDOSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54d ( ) ) . badSink ( data ) ; },1
public void ZZ3F878G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VC8RFTJSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54e ( ) ) . badSink ( data ) ; },1
public void 87XEZIUG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_console_readLine_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 81W27QASink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void WUXB1ZBG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void NDWAKKQ ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_console_readLine_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void VDBY872 ( ) throws Throwable { goodG2B ( ) ; },0
private void WDK5TOIG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_console_readLine_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 7WNDMA5Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public short 62FPM70G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void LNUY05U ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_66b ( ) ) . badSink ( dataArray ) ; }",1
public void E6L48IA ( ) throws Throwable { goodG2B ( ) ; },0
private void KCT03WGG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 1600FTLSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void W50Y0G1G2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void R3M1XQ5 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 4575T0B ( ) throws Throwable { goodG2B ( ) ; },0
private void GSMVII5G2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 7WY69JXSink ( CWE197_Numeric_Truncation_Error__short_console_readLine_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void AXVJHFWG2BSink ( CWE197_Numeric_Truncation_Error__short_console_readLine_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void GUNCSBB ( ) throws Throwable { data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_68b ( ) ) . badSink ( ) ; }",1
public void XMVT4JG ( ) throws Throwable { goodG2B ( ) ; },0
private void 9W9VQ02G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_68b ( ) ) . goodG2BSink ( ) ; },0
public void LKKGR06Sink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_console_readLine_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void AVLPVA2G2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_console_readLine_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void H8OTQI9 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_console_readLine_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KSJQKE0 ( ) throws Throwable { goodG2B ( ) ; },0
private void RXFNRUHG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void SGIE32HSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void Q99SWW8G2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void RQA3MBC ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_72b ( ) ) . badSink ( dataVector ) ; }",1
public void Y890VK0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void L7GGPCWG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 5GCDEUGSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4IIEEROG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void SPWMDO4 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 4PBJ4TV ( ) throws Throwable { goodG2B ( ) ; },0
"private void AK1QE2SG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void RV3EW41Sink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 6F8U97VG2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void WRBG6GK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void HS9HGQC ( ) throws Throwable { goodG2B ( ) ; },0
"private void TLJWGZOG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void TMQ24ZTSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void WPKVBSOG2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void UOZLC82 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8PG0MFQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void H666EM9G2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_console_readLine_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ZHB44I2Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void MFMSMOKG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void OL9IF2D ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__short_console_readLine_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_console_readLine_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void Z8HOFK1 ( ) throws Throwable { goodG2B ( ) ; },0
private void MA67365G2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_console_readLine_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_console_readLine_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 5OM89G2 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void GJ5P94U ( ) throws Throwable { goodG2B ( ) ; },0
private void H3RH2BEG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void YKYSCQD ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Y464B95G2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MO518SUG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XYKEKXB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8GQ59OA ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FZXCMVGG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 08VSTHZG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void V9PU8NJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CEWWVVP ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void NDLSINMG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void X67DPEBG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void W3GR5PL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S59SGAY ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void U1FAXRGG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void KCIXJCLG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 9QYMD7Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 44DV6S6 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 41Q30NYG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NMUS1W7G2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void CK9XERA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A8JH9OC ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 59WP5TVG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 9PZBRTWG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2NRCRUO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y2IXAL1 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PACWELAG2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2QOO8G4G2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void EJ10N0A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MNBIHA3 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 78S8D5NG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void LOPREFBG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void UDLA2V5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RBK2NKP ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void JOIY46QG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HLF47XUG2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5RYCRVM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Z1Y6YAE ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8VYMLTUG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QNW1YIIG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void XUFJTD3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HYMUNSE ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void D6RECHMG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NIJXSGZ ( ) throws Throwable { goodG2B ( ) ; },0
"public void X5SQL8R ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KRSBOLYG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 5JCVJS5G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZUZMZED ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7PCJR4N ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WKFAYZVG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BAFOKQ4G2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8GBXECO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MVRLWPN ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 5BM3LQ4G2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NK9LR55G2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YDFFSFA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8RSAXBJ ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void ZNI4JLUG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void NOQSGMR ( ) throws Throwable { goodG2B ( ) ; },0
"public void 8GTHEQP ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 9WIK48BG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 5BQQ1LD ( ) throws Throwable { goodG2B ( ) ; },0
public void ZDYPEX8 ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short RF0I39N_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void GQA3C2V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void MB3LCFDG2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short LULHO55G2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void C7RPEXDG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 50SS80TG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void HQQSJ6A ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_database_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void D6ZSU33 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void HV41Q64G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_database_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 44RCQFWG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_database_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short MFDPGUASource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_database_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public short EHQOMFTG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_database_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short PXI7DNUG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_database_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void Z5O56HM ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void IEYIT9J ( ) throws Throwable { goodG2B ( ) ; },0
private void YGDXOGIG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void I36A2A4Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 8N38WUQ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void WK3HTFP ( ) throws Throwable { goodG2B ( ) ; },0
private void MCRJFRUG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void AXE5KVIG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short KIIZ9XDSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void B0A9XC5 ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short 9RLGKK2G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void UW5SA5IG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void EANJAJX ( ) throws Throwable { goodG2B ( ) ; },0
private void BRGB7HNSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void X47LDLX ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 69JOOFX ( ) throws Throwable { goodG2B ( ) ; },0
private void B2EHRQNG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void EL7IXPUG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void OPB3UX8 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_51b ( ) ) . badSink ( data ) ; }",1
public void 7UR31BM ( ) throws Throwable { goodG2B ( ) ; },0
private void I6MFC97G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 7M6GB5ISink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 63SAG1CG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 01SV3VI ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_52b ( ) ) . badSink ( data ) ; }",1
public void OUUOMVT ( ) throws Throwable { goodG2B ( ) ; },0
private void DAMCLTPG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_52b ( ) ) . goodG2BSink ( data ) ; },0
public void S7DU5K9Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_52c ( ) ) . badSink ( data ) ; },1
public void LG8U3JXG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_52c ( ) ) . goodG2BSink ( data ) ; },0
public void A85ZVMKSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void TV54QU1G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 5V432LK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_53b ( ) ) . badSink ( data ) ; }",1
public void AVH3BYZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 3QXPYUJG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_53b ( ) ) . goodG2BSink ( data ) ; },0
public void BJSOLMQSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_53c ( ) ) . badSink ( data ) ; },1
public void VGPJ018G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_53c ( ) ) . goodG2BSink ( data ) ; },0
public void GX27SL2Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_53d ( ) ) . badSink ( data ) ; },1
public void 2M0TUPHG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 3FBOTZ6Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void KPLZYTRG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void IKMMHMO ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_54b ( ) ) . badSink ( data ) ; }",1
public void J8VIBY4 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZQ6M80UG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 3MMLLBRSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54c ( ) ) . badSink ( data ) ; },1
public void 4L2QNDOG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 4MPIXLVSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54d ( ) ) . badSink ( data ) ; },1
public void 3U1Z6BDG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54d ( ) ) . goodG2BSink ( data ) ; },0
public void G5469GPSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54e ( ) ) . badSink ( data ) ; },1
public void ZRGDLUFG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_database_54e ( ) ) . goodG2BSink ( data ) ; },0
public void VPHH7WYSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 3DQZGL4G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 67FJDLZ ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_database_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void LXJPXTT ( ) throws Throwable { goodG2B ( ) ; },0
private void AKUZFZQG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_database_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 6E9YH2TSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public short 9B4M2DNG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void TBK4UX5 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_database_66b ( ) ) . badSink ( dataArray ) ; }",1
public void YOL4K73 ( ) throws Throwable { goodG2B ( ) ; },0
private void RKRG07BG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_database_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void YQO3S2MSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void TW7PTDFG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void K3OTUIB ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_database_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void EQXXULT ( ) throws Throwable { goodG2B ( ) ; },0
private void E2Y66MOG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_database_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void VIWMRAJSink ( CWE197_Numeric_Truncation_Error__short_database_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void LIPPAVRG2BSink ( CWE197_Numeric_Truncation_Error__short_database_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 09AU6ZC ( ) throws Throwable { data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_68b ( ) ) . badSink ( ) ; }",1
public void BH6V6RA ( ) throws Throwable { goodG2B ( ) ; },0
private void YN2KA5WG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_68b ( ) ) . goodG2BSink ( ) ; },0
public void F1SKDRRSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_database_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void S2QKM9AG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_database_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void DHIMNBP ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_database_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 1GXDRL2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 8WDN8SAG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_database_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 0FAEQZ8Sink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void G1K8A2OG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void NSW4WA2 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CC5JBSM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4JWOTX2G2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void NYAPYLNSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void VKYG2GUG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void D317A5R ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ID5BWWS ( ) throws Throwable { goodG2B ( ) ; },0
"private void QKS6196G2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void MXE7U8PSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 6NACEL9G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 6NKGD5V ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void C5KXDDM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 69BP1WRG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_database_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void YJCBQCWSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void CD790V7G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 2B8JF9U ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_database_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8V2YSGG ( ) throws Throwable { goodG2B ( ) ; },0
"private void QQ2I7CUG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_database_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void VZ4O2IGSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void P8MQS9QG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void TDHB9ZI ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE197_Numeric_Truncation_Error__short_database_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_database_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void JZBUAWI ( ) throws Throwable { goodG2B ( ) ; },0
private void 1NG05KVG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_database_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_database_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void NS9U2LA ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void KEMMZCS ( ) throws Throwable { goodG2B ( ) ; },0
private void LYICVEZG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void DVTUW4J ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 4WE75JOG2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QCBHT9WG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JIRAOLW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K4TJOOG ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void RVX5SXOG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void KJAYC47G2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 061PHFY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X26W5OS ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void J7AGCE6G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void PAM7N3GG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MU0TDX3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5BHBCCU ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SNFHV4DG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SFJZX3EG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J3CE6ZL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UWEHAJY ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void VJK2MXDG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void EV1G1BFG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void UNKMAV8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DDVW5WV ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void P4FV0XYG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 3WDVFSJG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void TASWZ6N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F5JSNPC ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KQ6HYC1G2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void V7RKAV4G2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void M2M10AF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JTEILS4 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FUYJAVZG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0BMLYPQG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HFH79H1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JB780P2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void EE7LVDOG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4RU5JX6G2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N23DF9W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7I59ZGX ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 7O7SJR2G2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void PCQZKWWG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void Q66WTR5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CI3FJLJ ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0Z3R9N8G2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void TL9QNLJ ( ) throws Throwable { goodG2B ( ) ; },0
"public void 4RUAFKF ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void R09W6HHG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CXOLA9KG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YII9JXG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KCDJFU1 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void IKMP06OG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OU6PKYKG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void AR13YVR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YBQQPZY ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void XFKX7UDG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 41E3GOYG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ILJBPCX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FQ74E2T ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FRPVLXMG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void P6L0ZRO ( ) throws Throwable { goodG2B ( ) ; },0
"public void BEN9NIK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void BQQ2FKYG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 3HWAD16 ( ) throws Throwable { goodG2B ( ) ; },0
public void GCXUJZV ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short 7C3LP61_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void DM5CGIY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void Z8OSTHSG2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short XLFNDNBG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void BYB24JNG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short SIZKDQ5G2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void JYRZPX0 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_Environment_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void MECAAFQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 524YUTHG2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_Environment_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void MLNJXWPG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_Environment_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 59887Z9Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Environment_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public short MC88O3JG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Environment_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short VXHCFB0G2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Environment_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void JGCCTJA ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void XNPA5JF ( ) throws Throwable { goodG2B ( ) ; },0
private void XACRIJYG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void PJ4MHYESink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 47IC790 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void P24YAFJ ( ) throws Throwable { goodG2B ( ) ; },0
private void YW1CZPQG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void SG3S8NDG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short 8BBFU2DSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void ZL5GZW5 ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short SBOM9FYG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void 57L8N1IG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 3GQB9X8 ( ) throws Throwable { goodG2B ( ) ; },0
private void HR50QPUSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void NNK5XU0 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void RRNTO3E ( ) throws Throwable { goodG2B ( ) ; },0
private void PSL3DWNG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void NH7NOMEG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 4HUN20H ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_51b ( ) ) . badSink ( data ) ; }",1
public void TT4K5AI ( ) throws Throwable { goodG2B ( ) ; },0
private void HFIGL7SG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_51b ( ) ) . goodG2BSink ( data ) ; },0
public void XN0SZTWSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PXBXYVWG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void YBGJEDF ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_52b ( ) ) . badSink ( data ) ; }",1
public void J04V0IG ( ) throws Throwable { goodG2B ( ) ; },0
private void FZRL9SRG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_52b ( ) ) . goodG2BSink ( data ) ; },0
public void JRE0DSOSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_52c ( ) ) . badSink ( data ) ; },1
public void H5PKAH0G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_52c ( ) ) . goodG2BSink ( data ) ; },0
public void BB1ULFZSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void LYJXTDVG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void T0U80WG ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_53b ( ) ) . badSink ( data ) ; }",1
public void 416GGOQ ( ) throws Throwable { goodG2B ( ) ; },0
private void XXV5QDXG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 77LI0ROSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_53c ( ) ) . badSink ( data ) ; },1
public void D19VX4UG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_53c ( ) ) . goodG2BSink ( data ) ; },0
public void D9XKCF3Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_53d ( ) ) . badSink ( data ) ; },1
public void 4AAT9DWG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_53d ( ) ) . goodG2BSink ( data ) ; },0
public void MVNCKTXSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 8C0MYODG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 99NSAMB ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_54b ( ) ) . badSink ( data ) ; }",1
public void JASHKRD ( ) throws Throwable { goodG2B ( ) ; },0
private void 22OAGGQG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_54b ( ) ) . goodG2BSink ( data ) ; },0
public void Q6HYTX3Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54c ( ) ) . badSink ( data ) ; },1
public void JT88CC2G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 1X1H7ZXSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54d ( ) ) . badSink ( data ) ; },1
public void HJDVPB2G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YG0QJDMSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54e ( ) ) . badSink ( data ) ; },1
public void XXCC8JXG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Environment_54e ( ) ) . goodG2BSink ( data ) ; },0
public void JUMDE7FSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void M3C3ARPG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 2WLIANW ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_Environment_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void Y49F0W5 ( ) throws Throwable { goodG2B ( ) ; },0
private void Z0DM1O2G2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_Environment_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 2BQ1XNUSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public short 5CMO9Y0G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void REOQFJP ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_Environment_66b ( ) ) . badSink ( dataArray ) ; }",1
public void I9CEDVL ( ) throws Throwable { goodG2B ( ) ; },0
private void 1QHNN0RG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_Environment_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void DLPKKG0Sink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void M898YHRG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void PD5QD9H ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_Environment_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 8TKM607 ( ) throws Throwable { goodG2B ( ) ; },0
private void HE2S5WPG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_Environment_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void G43G70USink ( CWE197_Numeric_Truncation_Error__short_Environment_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3VFAMUHG2BSink ( CWE197_Numeric_Truncation_Error__short_Environment_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void W4GINSI ( ) throws Throwable { data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_68b ( ) ) . badSink ( ) ; }",1
public void GCPK1GX ( ) throws Throwable { goodG2B ( ) ; },0
private void SJ8AGWWG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_68b ( ) ) . goodG2BSink ( ) ; },0
public void Z8NF9HBSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_Environment_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void TFH0G7ZG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_Environment_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 44MYA6N ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_Environment_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void P94R587 ( ) throws Throwable { goodG2B ( ) ; },0
private void KMD4OL6G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Environment_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void XIS1MSBSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EGCI3U5G2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 2OBO8ZR ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_72b ( ) ) . badSink ( dataVector ) ; }",1
public void QQMO6H9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MPFMPVQG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 2BMOR0SSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void LQ77P5RG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 8ESHKTM ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Q7IFUK3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void JT25AEJG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void EZF0928Sink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void FZV5987G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 7HNJ2IM ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 96HWRSX ( ) throws Throwable { goodG2B ( ) ; },0
"private void 96CZLYWG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void TUE0SH5Sink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void PMYXRA5G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void H6DV2R5 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void S8IE9N0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7TK86I4G2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_Environment_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 6LKRZC6Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void OLG1LT4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 206JB92 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE197_Numeric_Truncation_Error__short_Environment_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_Environment_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void L614GC7 ( ) throws Throwable { goodG2B ( ) ; },0
private void 94MRNGSG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_Environment_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_Environment_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 24I5ZHP ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void MQ495HA ( ) throws Throwable { goodG2B ( ) ; },0
private void 5GHD4UYG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void IMG9O1W ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void G23957UG2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 96LMIKBG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LT3GYAX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0TZMLJ6 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void B02R1HZG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void RG5EX61G2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void CSLVM8D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4GFIUF9 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 60TW6ZQG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SKA2UXOG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void BVFO42Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A7EK2X0 ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BDH0P1SG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ROY7X4IG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DCU6FMR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6IMTMJJ ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void UNNLHJ6G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void SFJIYJDG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void A1F5DCL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9HU70BV ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KX54CLKG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 9CT6VXHG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void J68DSYC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ME9AWY1 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void KH8YZP2G2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HAUE3EUG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LRD87H0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M3LOAQC ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 92BTT24G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void LEFUAV5G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void BQZWA2J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J85LS4Q ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MKH5QCVG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T34O56PG2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void W082ALC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RNRAYT6 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void S8ZL701G2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CUBWER8G2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HGM38TO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0CWMF82 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 9C0M6DIG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void GEI4OZG ( ) throws Throwable { goodG2B ( ) ; },0
"public void JEAWR2D ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 09H3SUCG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2EO4JB4G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ORXTY87 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J9N4GFN ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PM7TGM5G2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 7CBV4OHG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1BTZVJ0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LF0J65P ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 6XL0EYDG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 09CAVMHG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5UR67VD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FHHT9KT ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void O9PF841G2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void C5RNR0J ( ) throws Throwable { goodG2B ( ) ; },0
"public void 39JXZRO ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 4E5LDZMG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 3VHZSK0 ( ) throws Throwable { goodG2B ( ) ; },0
public void 79SNOAZ ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short JL9T73U_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 9ORQ3OU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 6RHC2W7G2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 3EXIE09G2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void K7USO96G2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short 6326HMOG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void L66WSOO ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_File_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void ZJCG7MR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 8QHSD58G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_File_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void SGSFL4HG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_File_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 6MACUGZSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_File_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public short 9UL5CDSG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_File_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short HIWOFPOG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_File_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void VB8K3CQ ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void XIRSXIA ( ) throws Throwable { goodG2B ( ) ; },0
private void MRX2WIGG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void FQC6KFYSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void KUEA0HD ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void G64J0WC ( ) throws Throwable { goodG2B ( ) ; },0
private void 8QVPJ8AG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void F8F9HVOG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short XJPRRP5Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void K71TUAE ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short 0SWZH8YG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void 9NU6TBYG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void CLEI4B4 ( ) throws Throwable { goodG2B ( ) ; },0
private void X53R622Sink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void 1TOOI8I ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void WY5F5WO ( ) throws Throwable { goodG2B ( ) ; },0
private void A003E1SG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void RSTV0B7G2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void YDACGNY ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_51b ( ) ) . badSink ( data ) ; }",1
public void SFCDMU6 ( ) throws Throwable { goodG2B ( ) ; },0
private void N7WIJ21G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_51b ( ) ) . goodG2BSink ( data ) ; },0
public void J5QUS3MSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void R9BGJBKG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void CJWL91M ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_52b ( ) ) . badSink ( data ) ; }",1
public void Q3PWD5P ( ) throws Throwable { goodG2B ( ) ; },0
private void DGXK5SOG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 67TY5I8Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_52c ( ) ) . badSink ( data ) ; },1
public void Q3IXC3VG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_52c ( ) ) . goodG2BSink ( data ) ; },0
public void SRQNB4JSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void LPZH0GEG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void T9OKWX7 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_53b ( ) ) . badSink ( data ) ; }",1
public void L2I8V2L ( ) throws Throwable { goodG2B ( ) ; },0
private void UOJWXAEG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_53b ( ) ) . goodG2BSink ( data ) ; },0
public void M606ORWSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_53c ( ) ) . badSink ( data ) ; },1
public void U2VLXF4G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_53c ( ) ) . goodG2BSink ( data ) ; },0
public void KH2HHFQSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_53d ( ) ) . badSink ( data ) ; },1
public void ETO0M3PG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_53d ( ) ) . goodG2BSink ( data ) ; },0
public void EDXW9PGSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 2HG6ES5G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 1UTNO9F ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_54b ( ) ) . badSink ( data ) ; }",1
public void RGTUELK ( ) throws Throwable { goodG2B ( ) ; },0
private void QSNAU6OG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_54b ( ) ) . goodG2BSink ( data ) ; },0
public void GIDBL92Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54c ( ) ) . badSink ( data ) ; },1
public void BWU04NDG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54c ( ) ) . goodG2BSink ( data ) ; },0
public void WVJ4995Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54d ( ) ) . badSink ( data ) ; },1
public void TU5M88HG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FYV0FAVSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54e ( ) ) . badSink ( data ) ; },1
public void ZE1ADASG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_File_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 5ZF3KIZSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void G4579UWG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void LMZSNNL ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_File_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void RPFMKIM ( ) throws Throwable { goodG2B ( ) ; },0
private void 6DVJ0V1G2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_File_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short CFQ1ZDTSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public short HCD4AM1G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void OXSBSQK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_File_66b ( ) ) . badSink ( dataArray ) ; }",1
public void B1N4UUG ( ) throws Throwable { goodG2B ( ) ; },0
private void 6HIBKSIG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_File_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void DMRT5I3Sink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void L8FZW5LG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void FPTD7MS ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_File_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void SUD862J ( ) throws Throwable { goodG2B ( ) ; },0
private void P833ASVG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_File_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 3KOS9A2Sink ( CWE197_Numeric_Truncation_Error__short_File_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 0OFXBBFG2BSink ( CWE197_Numeric_Truncation_Error__short_File_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 64IJTDR ( ) throws Throwable { data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_68b ( ) ) . badSink ( ) ; }",1
public void YN91MJK ( ) throws Throwable { goodG2B ( ) ; },0
private void X5VN5KSG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_68b ( ) ) . goodG2BSink ( ) ; },0
public void 1FFJXA7Sink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_File_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void QY7ZN3MG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_File_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void KAKTS2N ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_File_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void NSDMILM ( ) throws Throwable { goodG2B ( ) ; },0
private void 9I9DTH8G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_File_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 03WP0OESink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void X4OGX9QG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 5J2VR9S ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_72b ( ) ) . badSink ( dataVector ) ; }",1
public void U2QNXSV ( ) throws Throwable { goodG2B ( ) ; },0
"private void W2TWKL0G2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void M3RAQ75Sink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 38A35E6G2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void D7PKHWP ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 470XZ6A ( ) throws Throwable { goodG2B ( ) ; },0
"private void NXYYRALG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 3YP3WKISink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void E42MMP3G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void RGI5WZY ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void AHHUDZF ( ) throws Throwable { goodG2B ( ) ; },0
"private void D6XGBLRG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_File_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void HQRWAPDSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void GKKGIF5G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void GCBK3RN ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_File_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void XUT7OW0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LSQHKYMG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_File_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void IBGQ81FSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void GKWTTMZG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 46NO9XV ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__short_File_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_File_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VJQL7DP ( ) throws Throwable { goodG2B ( ) ; },0
private void 5T3WDRVG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_File_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_File_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void 9BO7UOB ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; { IO . writeLine ( ( byte ) data ) ; } },1
public void DIOWO9A ( ) throws Throwable { goodG2B ( ) ; },0
private void 8ZVCLJ1G2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 5TJSXCR ( ) throws Throwable { short data ; if ( true ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void UK9F9VBG2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MLVX7JBG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JM795EQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 9F0YGW5 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void EHNSF05G2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void XV87VATG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void I0DGN43 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void K40OH66 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 5ZKE40OG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T3C2I3VG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 80DYLJL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void XF2V9NP ( ) throws Throwable { short data ; if ( privateTrue ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void JOK84ATG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NRNP7MLG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0ODYFTV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JWDO8MH ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void EB45448G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QWPH9TTG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 3ADQH47 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void S24JGI3 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void EVMLVL1G2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NLLNHWNG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void JMLTANO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void VMFTTLX ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 2XBTQPBG2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4JXD4MXG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 62DLETR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 2D2XSMV ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void Q6MACVZG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HJN0QC4G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HEX8ECG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void YMDDEBV ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 8RLID97G2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void UUSJK01G2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void W3STOVI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EM4MCMU ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void QI695W6G2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 00A0SHMG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void I7ESPJ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void GK5HKW7 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Byte . MAX_VALUE + 5 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void XL7FU7SG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MFWYCZJ ( ) throws Throwable { goodG2B ( ) ; },0
public void 3AKNKE5 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void D0LMO3HG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 38Y2B25G2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MHICAFM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void Q7PHLXH ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void DW3JCYOG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 9ZLZ2IUG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void P3ZC5F2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void SY3G1QJ ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Byte . MAX_VALUE + 5 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void G4866H2G2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void DA3DZ1KG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7W2ESCE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EKN0SKK ( ) throws Throwable { short data ; while ( true ) { data = Byte . MAX_VALUE + 5 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void M6MDEM8G2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HAGIM36 ( ) throws Throwable { goodG2B ( ) ; },0
public void FRGMW6Z ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },1
private void J222Y9MG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 7TXCTQM ( ) throws Throwable { goodG2B ( ) ; },0
public void HNG8ITC ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short IFMDPYT_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public void QM73VUJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void MN7KKRVG2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short HM2D8XAG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void O5BOKQ6G2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short MGI3SCWG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void Z8CK254 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_large_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void DSBC0I9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 5C7CHJ4G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_large_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void HP1SEWCG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_large_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public short SATEIW2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_large_22a . badPublicStatic ) { data = Byte . MAX_VALUE + 5 ; } else { data = 0 ; } return data ; },1
public short SF2HUE1G2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_large_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short 8PQVOF6G2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_large_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void IT3J9FK ( ) throws Throwable { short dataCopy ; { short data ; data = Byte . MAX_VALUE + 5 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },1
public void B2MT75O ( ) throws Throwable { goodG2B ( ) ; },0
private void RVLU5Q3G2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void AH1BIIRSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void BBHU64K ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; badSink ( data ) ; },1
public void VZ48AFI ( ) throws Throwable { goodG2B ( ) ; },0
private void AKR9KOOG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void UI62NX2G2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
private short C6Y31JVSource ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; return data ; },1
public void VQL6ZPY ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short 4MKD2TVG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void GESIHN6G2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 6EMTXUZ ( ) throws Throwable { goodG2B ( ) ; },0
private void LCIFMSZSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
public void AFYPUNC ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; dataBad = data ; badSink ( ) ; },1
public void BCSTXFM ( ) throws Throwable { goodG2B ( ) ; },0
private void 0TZGTP2G2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 1F3P2MPG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void A3C7SD6 ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_51b ( ) ) . badSink ( data ) ; },1
public void MLWGHS8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 6L83MTVG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_51b ( ) ) . goodG2BSink ( data ) ; },0
public void HZVJUN5Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void D237EUJG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void PHX6ZLC ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_52b ( ) ) . badSink ( data ) ; },1
public void OZ53L5E ( ) throws Throwable { goodG2B ( ) ; },0
private void DS140VZG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_52b ( ) ) . goodG2BSink ( data ) ; },0
public void FNQQNUVSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_52c ( ) ) . badSink ( data ) ; },1
public void YI85OKDG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 1UYOA4CSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void JC77WT6G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void KLJT98H ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_53b ( ) ) . badSink ( data ) ; },1
public void BGZD7FQ ( ) throws Throwable { goodG2B ( ) ; },0
private void MMGA8K1G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_53b ( ) ) . goodG2BSink ( data ) ; },0
public void GXCJO69Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_53c ( ) ) . badSink ( data ) ; },1
public void FADDUHNG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_53c ( ) ) . goodG2BSink ( data ) ; },0
public void H7QLJCVSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_53d ( ) ) . badSink ( data ) ; },1
public void MD9FJPKG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 8G9ZARNSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 30HJHUVG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void XG2MUTE ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_54b ( ) ) . badSink ( data ) ; },1
public void 0S5NKSW ( ) throws Throwable { goodG2B ( ) ; },0
private void MN47ZT4G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_54b ( ) ) . goodG2BSink ( data ) ; },0
public void EUNSOV3Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54c ( ) ) . badSink ( data ) ; },1
public void ZP3RD1OG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54c ( ) ) . goodG2BSink ( data ) ; },0
public void RTARP0VSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54d ( ) ) . badSink ( data ) ; },1
public void 1IHW4ZRG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 99UVZQ6Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54e ( ) ) . badSink ( data ) ; },1
public void LKDSIFAG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_large_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1FRAN3HSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void WARXQ0LG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void C00PQFT ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_large_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void UBS71SH ( ) throws Throwable { goodG2B ( ) ; },0
private void BCBK91NG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_large_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public short E24CL0KSource ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; return data ; },1
public short AIOJU5MG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
public void 77RVZME ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_large_66b ( ) ) . badSink ( dataArray ) ; },1
public void 7M12EL6 ( ) throws Throwable { goodG2B ( ) ; },0
private void LZU00OCG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_large_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void FDKS5FRSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CVHAVVVG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void R2IRZW1 ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_large_67b ( ) ) . badSink ( dataContainer ) ; },1
public void TQEMAV9 ( ) throws Throwable { goodG2B ( ) ; },0
private void SYJ1LNHG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_large_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 4DAV01NSink ( CWE197_Numeric_Truncation_Error__short_large_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void RUUENBNG2BSink ( CWE197_Numeric_Truncation_Error__short_large_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void DORMSFB ( ) throws Throwable { data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_68b ( ) ) . badSink ( ) ; },1
public void U01H3BQ ( ) throws Throwable { goodG2B ( ) ; },0
private void KBMVQ69G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_68b ( ) ) . goodG2BSink ( ) ; },0
public void OYA020GSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_large_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void X0DXTIUG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_large_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void APE1QVK ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ( new CWE197_Numeric_Truncation_Error__short_large_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void VSQC4XV ( ) throws Throwable { goodG2B ( ) ; },0
private void 8Q2AV2AG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_large_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void HN9II1WSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void QZBMS14G2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void TUC44P4 ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_72b ( ) ) . badSink ( dataVector ) ; }",1
public void RILSVRS ( ) throws Throwable { goodG2B ( ) ; },0
"private void S78TDLAG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void AC66ZUASink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4E6P9UOG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 326XQ5Z ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void WM5MYQX ( ) throws Throwable { goodG2B ( ) ; },0
"private void NQT281ZG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 6YGY7WYSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CUVS018G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 3TD2TZL ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void T40HR9B ( ) throws Throwable { goodG2B ( ) ; },0
"private void N4DYFDEG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_large_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void DZOHEKNSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void KSQMZA7G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void G4O07SK ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_large_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void XDK2U7I ( ) throws Throwable { goodG2B ( ) ; },0
"private void AHKASZTG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_large_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void DM8E3JASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void FT4ULAFG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void RN2452E ( ) throws Throwable { short data ; data = Byte . MAX_VALUE + 5 ; CWE197_Numeric_Truncation_Error__short_large_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_large_81_bad ( ) ; baseObject . action ( data ) ; },1
public void LMOAFJ1 ( ) throws Throwable { goodG2B ( ) ; },0
private void PWBJZ6FG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_large_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_large_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void A8P072W ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void BG2GAZ7 ( ) throws Throwable { goodG2B ( ) ; },0
private void GI8YL9LG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 407JEZS ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WXXV864G2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void S0OQHCJG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0ATV2GO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 15ZEA4L ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BE69JCDG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void BX6XUF2G2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void RXWGHVH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TSOJ2EK ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void HPOZCR0G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OZT77QKG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void DMYPRZC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G18I1RU ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 8Y9OMTRG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void B0R21F1G2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 622147K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8FJV56X ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Y8N2J8AG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void V8QZV3WG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void CPY7OPC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TJBL9W1 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void PRY2YOYG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void VI7PDSOG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0EEU4D7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XH869KL ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MFT8PV8G2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 2UIYZKAG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 21EGH5U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K6EDVNI ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void O5GQSLNG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void T7RU4SNG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8S8C143 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LWXPTS4 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void W9TZDQZG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0YDIVLTG2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HZSHL3T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QPZJC4A ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void N4OUOLPG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Q9PFS32G2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 9S0ZDFY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GH4UA3H ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Z8GONUVG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void KL6V1RS ( ) throws Throwable { goodG2B ( ) ; },0
"public void MWFV94D ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void OWDLID1G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NBGU1LVG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void LAZUTUB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S6ACUU2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 69GPQNFG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0KX2S8IG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 4ST81XF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 76XW1TJ ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void MBANASJG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void J9EDG5LG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void IM054SL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XAD6PHF ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FBPDWLNG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void QHZ2OZJ ( ) throws Throwable { goodG2B ( ) ; },0
"public void 692W4KZ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void SSS2QZMG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void OUD7G6Q ( ) throws Throwable { goodG2B ( ) ; },0
public void 1HTI5CA ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short WQXW425_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void KLWDNVZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void DGGDAYDG2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short E34UUB8G2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 7E4V8ZZG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short U1BKI8CG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 72XPV85 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void WP202WS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 35DJNW3G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void TSGCBIHG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short EBX7BM6Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_listen_tcp_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public short WS6RKBDG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_listen_tcp_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short OTK0RMWG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_listen_tcp_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QSBN9BC ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void X4OWYJK ( ) throws Throwable { goodG2B ( ) ; },0
private void FV9LTZYG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void W730DA8Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 845YKS8 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void U8JTX3J ( ) throws Throwable { goodG2B ( ) ; },0
private void MYBFNRLG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 7OVZ3QTG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short MUAZA4GSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void V896RFD ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short 69FOJ3IG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void N0YN3FDG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void PDYU6OM ( ) throws Throwable { goodG2B ( ) ; },0
private void WYQN72WSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void XYXHBFR ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void G7F0WKS ( ) throws Throwable { goodG2B ( ) ; },0
private void NVBGGRLG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void W132R32G2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 8URY368 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void BV02RID ( ) throws Throwable { goodG2B ( ) ; },0
private void MIER7P6G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 1M98P0VSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void KSFX4W3G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 8KB6UZM ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void U206019 ( ) throws Throwable { goodG2B ( ) ; },0
private void PXEPPIIG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_52b ( ) ) . goodG2BSink ( data ) ; },0
public void VJCJ68JSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_52c ( ) ) . badSink ( data ) ; },1
public void XFLE3BWG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 50LFTKVSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void PRYOVOCG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void GE2DV9X ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void WV7SSSJ ( ) throws Throwable { goodG2B ( ) ; },0
private void XPYCUQIG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53b ( ) ) . goodG2BSink ( data ) ; },0
public void HG7WBMCSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53c ( ) ) . badSink ( data ) ; },1
public void M0YAQ39G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RJ6X70KSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53d ( ) ) . badSink ( data ) ; },1
public void M0R7FM0G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void WTBNYZ8Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void RUCZJCQG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void JS1DLW5 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void RWVJPTJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 47FCS9KG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54b ( ) ) . goodG2BSink ( data ) ; },0
public void VYN6H4DSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54c ( ) ) . badSink ( data ) ; },1
public void HD4ZVL9G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 75STQW2Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54d ( ) ) . badSink ( data ) ; },1
public void UGL7FUDG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 0PPIAM0Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54e ( ) ) . badSink ( data ) ; },1
public void IQLESI3G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void I6ARQPOSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void UL2289MG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void ZDCZVTA ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void L6O729H ( ) throws Throwable { goodG2B ( ) ; },0
private void 222V9Q7G2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 3QN5DRXSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public short 5L6E4KHG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void C13TCKI ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 8N9DQ9P ( ) throws Throwable { goodG2B ( ) ; },0
private void 2557HSGG2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void ZAL731PSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 980KCLGG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void W5I1PBI ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void D4L7XWO ( ) throws Throwable { goodG2B ( ) ; },0
private void FUCF0KFG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 2QJ611WSink ( CWE197_Numeric_Truncation_Error__short_listen_tcp_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void DDYIPGMG2BSink ( CWE197_Numeric_Truncation_Error__short_listen_tcp_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 3DYE3WP ( ) throws Throwable { data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_68b ( ) ) . badSink ( ) ; }",1
public void DH8GG6Z ( ) throws Throwable { goodG2B ( ) ; },0
private void 7UBXYZ9G2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_68b ( ) ) . goodG2BSink ( ) ; },0
public void P6BCTSTSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_listen_tcp_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 0P6W6IRG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_listen_tcp_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void WP0D2EV ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void CRQU4UE ( ) throws Throwable { goodG2B ( ) ; },0
private void DOCDFTFG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 8I07S3MSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EDXY3XPG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void MX1Y132 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void AON5H38 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5X55O8PG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 6T92ZMASink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void BMOXWAJG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void MHBZG1Y ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Z90TPED ( ) throws Throwable { goodG2B ( ) ; },0
"private void XB744ZXG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void W06914BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 44W5UHTG2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void Y7E9NBH ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 17ZMHYT ( ) throws Throwable { goodG2B ( ) ; },0
"private void K9YCFPGG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void SS27TGPSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void F5SR551G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void VJ4025L ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void R47XKK4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 009EYUTG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void AUC4Z5MSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void M16STEJG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BEOT9T2 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__short_listen_tcp_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_listen_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void V7J6UJM ( ) throws Throwable { goodG2B ( ) ; },0
private void KK3F5D2G2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_listen_tcp_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_listen_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void TDJBG64 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void U5SVJSP ( ) throws Throwable { goodG2B ( ) ; },0
private void BGS6EVRG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void HHP061J ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void OJRJFMNG2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HRSYCJMG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZPB1I2N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SLTNMB0 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void BCA4RQHG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void O27PVIOG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void K04A0JT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N20DACW ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void NQ75G6SG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 8UKZX3FG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void P758ZDE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 93IUC7H ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 23HTUKNG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void XRGY1XUG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 84EYAJT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RQL6QBE ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void RQVLA0UG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void H2GWJRLG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void FNSOLIK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BGTXM20 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void DUVKEX9G2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void YYL097BG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2744ZED ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void L4DB3WJ ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0JLWVGFG2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void V1R8QBRG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 0QIYONU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4X43L6E ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void APYMFQ5G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void ITM9PKAG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 6GHKO0S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N6CODYH ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1I6A4EYG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MCI6FIBG2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PGDS26P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WJTJAXL ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void H5RL8RZG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void X8IHRQOG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void H90RNCV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CC35J7D ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 14HUQFWG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 35RZO48 ( ) throws Throwable { goodG2B ( ) ; },0
"public void JT4GK7Z ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void WW1GMQAG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void MMZ44NNG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void N6VZELF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void L3N4V17 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void CWDW93DG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void W16JBV0G2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 283ZWE9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HN5Q1LX ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 3AVNRFPG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void S98I73YG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void WG8QOM7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T6PGNXL ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void I8COCOAG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8FEF4D7 ( ) throws Throwable { goodG2B ( ) ; },0
"public void L20PMW6 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void 95K08SMG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 6XGVYA9 ( ) throws Throwable { goodG2B ( ) ; },0
public void G30CHWN ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short 79CKCE0_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void YZ54N5S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void X4PL8C9G2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short UW1U9Y8G2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 1JTBFM4G2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short HBG6T4ZG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void EU5P9D7 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void G1A45OT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 7P7OMYPG2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void LXEPFG6G2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short F1Q9B5NSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_PropertiesFile_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public short QLL8KOKG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_PropertiesFile_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short PZOLNCUG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_PropertiesFile_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void K1RWHZJ ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void 0EI3SQP ( ) throws Throwable { goodG2B ( ) ; },0
private void 03HVS2ZG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void NRR895YSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void 0L0CFX1 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 3ZJF21L ( ) throws Throwable { goodG2B ( ) ; },0
private void K80OQLNG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void MYC6GY3G2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short 6MSXN7RSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void 6S6C6AL ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short HMYKUEHG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void TIA2HDMG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 2Y3C0TW ( ) throws Throwable { goodG2B ( ) ; },0
private void JRA9MP1Sink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void EFS01BK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 5COFSX1 ( ) throws Throwable { goodG2B ( ) ; },0
private void NZM7DDXG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void V92735YG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 4NMVPCT ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_51b ( ) ) . badSink ( data ) ; }",1
public void VPQMQD3 ( ) throws Throwable { goodG2B ( ) ; },0
private void HNGTPKQG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 3LF49VLSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void EP16I1MG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void EPHS29Z ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_52b ( ) ) . badSink ( data ) ; }",1
public void IRS1HNC ( ) throws Throwable { goodG2B ( ) ; },0
private void 56R7431G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 45MD0AXSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_52c ( ) ) . badSink ( data ) ; },1
public void XB2MI0CG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_52c ( ) ) . goodG2BSink ( data ) ; },0
public void BKHNHBWSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void GGYAJGXG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void E5HQ0T4 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53b ( ) ) . badSink ( data ) ; }",1
public void R7OE2GJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 73YW7BJG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53b ( ) ) . goodG2BSink ( data ) ; },0
public void FD8YZN5Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53c ( ) ) . badSink ( data ) ; },1
public void SEVBQW0G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53c ( ) ) . goodG2BSink ( data ) ; },0
public void HC7EKMMSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53d ( ) ) . badSink ( data ) ; },1
public void B7SUSG9G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_53d ( ) ) . goodG2BSink ( data ) ; },0
public void CLOPIK3Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 105UATIG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 57WU583 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54b ( ) ) . badSink ( data ) ; }",1
public void O1ZTT8R ( ) throws Throwable { goodG2B ( ) ; },0
private void 9LN1EJGG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54b ( ) ) . goodG2BSink ( data ) ; },0
public void P7OFSKVSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54c ( ) ) . badSink ( data ) ; },1
public void ZEFJXSOG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54c ( ) ) . goodG2BSink ( data ) ; },0
public void AP628MLSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54d ( ) ) . badSink ( data ) ; },1
public void DK3MJ0TG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YW0PZV9Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54e ( ) ) . badSink ( data ) ; },1
public void HBJWPGOG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_54e ( ) ) . goodG2BSink ( data ) ; },0
public void B025I7CSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void CJWYJBKG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void N2W7B38 ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EK9OKTT ( ) throws Throwable { goodG2B ( ) ; },0
private void 3T1HXCCG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short 5LLWQGXSource ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public short P2W10KUG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void SGZ0C0L ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_66b ( ) ) . badSink ( dataArray ) ; }",1
public void KC3QN4O ( ) throws Throwable { goodG2B ( ) ; },0
private void GNLRKS4G2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void I9RDON0Sink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void TOL6JWDG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void NFFLBU3 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void CXM7FEK ( ) throws Throwable { goodG2B ( ) ; },0
private void 5LQ4P9ZG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void Q8JYFE2Sink ( CWE197_Numeric_Truncation_Error__short_PropertiesFile_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void R5F9URIG2BSink ( CWE197_Numeric_Truncation_Error__short_PropertiesFile_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 0ABACX1 ( ) throws Throwable { data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_68b ( ) ) . badSink ( ) ; }",1
public void 8U6YCSJ ( ) throws Throwable { goodG2B ( ) ; },0
private void U9WXZWPG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_68b ( ) ) . goodG2BSink ( ) ; },0
public void K67BGYKSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_PropertiesFile_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void A9QLP44G2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_PropertiesFile_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void JHPDPSK ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void HRS8CN6 ( ) throws Throwable { goodG2B ( ) ; },0
private void SQ7WC6VG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void W3YJ4LESink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void CFDWS5OG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void VHLE2TJ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_72b ( ) ) . badSink ( dataVector ) ; }",1
public void GNK3405 ( ) throws Throwable { goodG2B ( ) ; },0
"private void TORM8REG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 849GDMKSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void I670SG6G2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 8QH5T11 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 0NSPF44 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9TI096IG2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 3O2HHBWSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void R20CCL5G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void VZUDZB9 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void D98MG2V ( ) throws Throwable { goodG2B ( ) ; },0
"private void TUZVBZRG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void HGYL025Sink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void PIBHGOXG2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void Q4FL6KR ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void L6FIU0Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void JZFD94WG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GDJCF5ASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void RILG1IEG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VJITFIR ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE197_Numeric_Truncation_Error__short_PropertiesFile_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_PropertiesFile_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void PONRFLC ( ) throws Throwable { goodG2B ( ) ; },0
private void MMK4SDGG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_PropertiesFile_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 5V8C6EN ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } { IO . writeLine ( ( byte ) data ) ; } }",1
public void KUXCWAJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 2HX5CS6G2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 39IMM0O ( ) throws Throwable { short data ; if ( true ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void ADSTFD4G2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void CACH563G2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1JYK80A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M2X7ON8 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 1SPUKJ8G2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HZ5T3MHG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MFZ3CA2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QCKGQXS ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void E776RLZG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void OQYNDAAG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void U01ARDO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 593LBTK ( ) throws Throwable { short data ; if ( privateTrue ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void Z95SDVWG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void KJ8E13YG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8LLK1AQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 15XWEQB ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void O0MHDX8G2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void VFMKW02G2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void E3859N2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GMKKQYM ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void LBW937KG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 7RBPZEFG2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void I7L4RVL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8U534MR ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void RXW4RJ9G2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void PNIITKHG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void HQU3435 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ULCBB9A ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void 0KJMHJPG2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 26XH82HG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 1V1P8IX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U0SAFHI ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void SFI0L2UG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Z5JPFR6G2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5UV2GTZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XMDNDYW ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void B1QNY0TG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void X0GS47IG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PP1VPOT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZDZT79U ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void YUD985EG2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void BSTVRJ4 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 6JOLDQW ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void FGDXRK3G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 99TSI2JG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void I0XKXPC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q1HTJAO ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void HWSVWRRG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void Q1S5TPGG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void PX7O96B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2UXZF4M ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void TOS4N3OG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 6KKAMNDG2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 8239AQP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G1HCMKE ( ) throws Throwable { short data ; while ( true ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } { IO . writeLine ( ( byte ) data ) ; } }",1
private void T3TKI1WG2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 7O9DQN0 ( ) throws Throwable { goodG2B ( ) ; },0
"public void I864383 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } }",1
private void HPXY2ZZG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void 154X62F ( ) throws Throwable { goodG2B ( ) ; },0
public void 69KBPRN ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
"private short L0GIN23_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void Q7E8PVA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void J9UW148G2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short FSNXLISG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void R1J4EGYG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short RX0ZIZAG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 738CN57 ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_Property_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void I3O0EPQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void JMC28XQG2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_Property_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 89IWJZKG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_Property_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short HGHWS2WSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Property_22a . badPublicStatic ) { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public short FF81M0PG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Property_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short P9B7NRWG2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_Property_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void B1PHK2P ( ) throws Throwable { short dataCopy ; { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } }",1
public void H4FLNIB ( ) throws Throwable { goodG2B ( ) ; },0
private void TJPYU0LG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void JHTAMPXSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
"public void OW7DK41 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void MJKYZVA ( ) throws Throwable { goodG2B ( ) ; },0
private void H5DQGITG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void TQBJUNYG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
"private short EUMIMD7Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void RXZ96EV ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short OGVE6LPG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void EGEKKQRG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 24CQQJ2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 27EAZNPSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
"public void WFRZF2C ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void Q328CWW ( ) throws Throwable { goodG2B ( ) ; },0
private void MH4BTXXG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void N2ALZIPG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 3JW2GN1 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_51b ( ) ) . badSink ( data ) ; }",1
public void XXE2TP2 ( ) throws Throwable { goodG2B ( ) ; },0
private void N9ETZSQG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 8BNEY4RSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void WI4Z8MWG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void LS6JFLD ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_52b ( ) ) . badSink ( data ) ; }",1
public void OTS8LG5 ( ) throws Throwable { goodG2B ( ) ; },0
private void OGWLTTHG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_52b ( ) ) . goodG2BSink ( data ) ; },0
public void AQ2GBGUSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_52c ( ) ) . badSink ( data ) ; },1
public void QKLWP2YG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 1PNROZHSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void ZEYV2D7G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void JYP1K6Q ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_53b ( ) ) . badSink ( data ) ; }",1
public void GLME3UE ( ) throws Throwable { goodG2B ( ) ; },0
private void 0MYQK90G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_53b ( ) ) . goodG2BSink ( data ) ; },0
public void QZKAQE0Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_53c ( ) ) . badSink ( data ) ; },1
public void 2XRF5EZG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 5M4IFI5Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_53d ( ) ) . badSink ( data ) ; },1
public void UT9MYVHG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 9B1CIO1Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 6ZXJEREG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
"public void 6Y88X89 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_54b ( ) ) . badSink ( data ) ; }",1
public void PFDE353 ( ) throws Throwable { goodG2B ( ) ; },0
private void 11AW2I8G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_54b ( ) ) . goodG2BSink ( data ) ; },0
public void O2V2O05Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54c ( ) ) . badSink ( data ) ; },1
public void E1XQSBTG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54c ( ) ) . goodG2BSink ( data ) ; },0
public void UAORJ58Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54d ( ) ) . badSink ( data ) ; },1
public void BDS5FMCG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 0FNUEP7Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54e ( ) ) . badSink ( data ) ; },1
public void W1WIVJXG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_Property_54e ( ) ) . goodG2BSink ( data ) ; },0
public void OMHLBMRSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void AA93M91G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void K6PP3QH ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_Property_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void SE6LS82 ( ) throws Throwable { goodG2B ( ) ; },0
private void OQF2ZU0G2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_Property_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public short CSV0O85Source ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public short JZ1BDENG2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
"public void 6J5PT2A ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_Property_66b ( ) ) . badSink ( dataArray ) ; }",1
public void DQ6G2F9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 6VLCAD8G2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_Property_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void L136C2ASink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 998JFBPG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void BTJ059J ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_Property_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 7ZR3WT6 ( ) throws Throwable { goodG2B ( ) ; },0
private void ON7GLNJG2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_Property_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void CMN6UVQSink ( CWE197_Numeric_Truncation_Error__short_Property_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 4AONH71G2BSink ( CWE197_Numeric_Truncation_Error__short_Property_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void G0EHDOQ ( ) throws Throwable { data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_68b ( ) ) . badSink ( ) ; }",1
public void IBJYXOG ( ) throws Throwable { goodG2B ( ) ; },0
private void OTAH9CSG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_68b ( ) ) . goodG2BSink ( ) ; },0
public void ZHV3K1NSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_Property_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void P68PHT7G2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_Property_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void GO6RU98 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE197_Numeric_Truncation_Error__short_Property_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KAZZN1V ( ) throws Throwable { goodG2B ( ) ; },0
private void HVSFOSXG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_Property_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 1AUQ8Z5Sink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void HOFBHOPG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void 30JCEDA ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_72b ( ) ) . badSink ( dataVector ) ; }",1
public void UCE1AMD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8Y4BDV1G2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void HWT7SSNSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void OIMIMBPG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void QWW7LN2 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void L77XC4B ( ) throws Throwable { goodG2B ( ) ; },0
"private void CM1ASN0G2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void HYDHY62Sink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void IW32E8YG2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void NPSIZMZ ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 3PX6VAN ( ) throws Throwable { goodG2B ( ) ; },0
"private void K2WRMRIG2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 67P7TH3Sink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void 9L51P9RG2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void 9P275X9 ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void RJH80KH ( ) throws Throwable { goodG2B ( ) ; },0
"private void 38W1U2CG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_Property_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 27LAXTFSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void W830N67G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void ERHKR2E ( ) throws Throwable { short data ; data = Short . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Short . parseShort ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE197_Numeric_Truncation_Error__short_Property_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_Property_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VLMPNQ9 ( ) throws Throwable { goodG2B ( ) ; },0
private void O1J5Q4JG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_Property_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_Property_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void KN04P6E ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void Y5UXL9R ( ) throws Throwable { goodG2B ( ) ; },0
private void XQWGZHOG2B ( ) throws Throwable { short data ; data = 2 ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 847KTLU ( ) throws Throwable { short data ; if ( true ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void KXJ3UK6G2B1 ( ) throws Throwable { short data ; if ( false ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void KKZ03VSG2B2 ( ) throws Throwable { short data ; if ( true ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5AFZ5NB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void HJI165Y ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 13BG8MLG2B1 ( ) throws Throwable { short data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4MBRKNQG2B2 ( ) throws Throwable { short data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 5JMSY06 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void D65T5OM ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void Q2TFIBGG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void NL1PPS3G2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void Z8WPHR3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void GT15OHG ( ) throws Throwable { short data ; if ( privateTrue ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void OP7IA7HG2B1 ( ) throws Throwable { short data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void PIMK6CUG2B2 ( ) throws Throwable { short data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZY60LVU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void O5CY4DY ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void BJFDUTJG2B1 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void K1LD7NAG2B2 ( ) throws Throwable { short data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void YDAS1CG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void SYTOUGD ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void D9MQ67OG2B1 ( ) throws Throwable { short data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 4R3W4W0G2B2 ( ) throws Throwable { short data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VF2M2KE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void MT8ZM4M ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void NC03TXFG2B1 ( ) throws Throwable { short data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void J5ZPM7LG2B2 ( ) throws Throwable { short data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 17SMFL9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 01XQSUI ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 1G19345G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void M62VRFSG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void V6QF5FC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void X69B83I ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void VWOE8FKG2B1 ( ) throws Throwable { short data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void IX73WCNG2B2 ( ) throws Throwable { short data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void A7PMUUZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 9ZB7A13 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void IUONOFVG2B1 ( ) throws Throwable { short data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void HHKDQXGG2B2 ( ) throws Throwable { short data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void VRA0JGY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void MTFNZ4B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void VYXMA87G2B ( ) throws Throwable { short data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void WAMBXG9 ( ) throws Throwable { goodG2B ( ) ; },0
public void 4CZI5J8 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void 46VAV61G2B1 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void 0GY1F8OG2B2 ( ) throws Throwable { short data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void MVSFMP2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void A3DRTVB ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void QPAH95LG2B1 ( ) throws Throwable { short data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void QPMU35IG2B2 ( ) throws Throwable { short data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void ZFDJ44K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JUACC0B ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void IRG06MBG2B1 ( ) throws Throwable { short data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
private void I3YZFY4G2B2 ( ) throws Throwable { short data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void IAY0IQ0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 8IZC0TS ( ) throws Throwable { short data ; while ( true ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; break ; } { IO . writeLine ( ( byte ) data ) ; } },1
private void Z6TXKF3G2B ( ) throws Throwable { short data ; while ( true ) { data = 2 ; break ; } { IO . writeLine ( ( byte ) data ) ; } },0
public void 2TX7P1S ( ) throws Throwable { goodG2B ( ) ; },0
public void L8UWIIV ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },1
private void G12O05ZG2B ( ) throws Throwable { short data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { { IO . writeLine ( ( byte ) data ) ; } } },0
public void S4SNVQH ( ) throws Throwable { goodG2B ( ) ; },0
public void HDOVT1F ( ) throws Throwable { short data ; badPrivate = true ; data = bad_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short LN3IBHM_source ( ) throws Throwable { short data ; if ( badPrivate ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } return data ; },1
public void 8X8YNAS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void EBPTHJ5G2B1 ( ) throws Throwable { short data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short C1AZXLVG2B1_source ( ) throws Throwable { short data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void UE6OE9SG2B2 ( ) throws Throwable { short data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private short QCVVDNQG2B2_source ( ) throws Throwable { short data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void AXKSAXR ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_random_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void X3YDGSX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void QXK2CY6G2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_random_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 8FKDPUDG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_random_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public short 8T3UN5VSource ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_random_22a . badPublicStatic ) { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; } else { data = 0 ; } return data ; },1
public short 8KIXFUUG2B1Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_random_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public short BMLWRS7G2B2Source ( ) throws Throwable { short data ; if ( CWE197_Numeric_Truncation_Error__short_random_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void LHFAMHG ( ) throws Throwable { short dataCopy ; { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },1
public void 7Q3H0YI ( ) throws Throwable { goodG2B ( ) ; },0
private void UCCCIICG2B ( ) throws Throwable { short dataCopy ; { short data ; data = 2 ; dataCopy = data ; } { short data = dataCopy ; { IO . writeLine ( ( byte ) data ) ; } } },0
private void Z98OAV5Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void UKC8AMT ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; badSink ( data ) ; },1
public void ZOQFU58 ( ) throws Throwable { goodG2B ( ) ; },0
private void QB306L5G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
private void 2DI0YKNG2B ( ) throws Throwable { short data ; data = 2 ; goodG2BSink ( data ) ; },0
private short WXDUPYWSource ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; return data ; },1
public void AOR7WXE ( ) throws Throwable { short data = badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
private short F8DXF28G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
private void ENF5W9OG2B ( ) throws Throwable { short data = goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void L1V4B41 ( ) throws Throwable { goodG2B ( ) ; },0
private void 40UQ8UMSink ( ) throws Throwable { short data = dataBad ; { IO . writeLine ( ( byte ) data ) ; } },1
public void B0Y088P ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; dataBad = data ; badSink ( ) ; },1
public void 1L7TFIB ( ) throws Throwable { goodG2B ( ) ; },0
private void PSB0X9EG2BSink ( ) throws Throwable { short data = dataGoodG2B ; { IO . writeLine ( ( byte ) data ) ; } },0
private void 3SFJ0LEG2B ( ) throws Throwable { short data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void LSQ9JIF ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_51b ( ) ) . badSink ( data ) ; },1
public void NFPW8J6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2OZQFLNG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 8QZCYS6Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void UXQ3616G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void CHF67T0 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_52b ( ) ) . badSink ( data ) ; },1
public void YRJ2LVJ ( ) throws Throwable { goodG2B ( ) ; },0
private void ALG0Z9FG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_52b ( ) ) . goodG2BSink ( data ) ; },0
public void UWMKTSNSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_52c ( ) ) . badSink ( data ) ; },1
public void MIOJZMKG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_52c ( ) ) . goodG2BSink ( data ) ; },0
public void QP5J9LXSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void QHR4R2XG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void YBF275G ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_53b ( ) ) . badSink ( data ) ; },1
public void NRQGNMN ( ) throws Throwable { goodG2B ( ) ; },0
private void USGL7PZG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_53b ( ) ) . goodG2BSink ( data ) ; },0
public void P9YU61PSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_53c ( ) ) . badSink ( data ) ; },1
public void YBUSWC2G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 1RVR5JTSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_53d ( ) ) . badSink ( data ) ; },1
public void JFIW5SXG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_53d ( ) ) . goodG2BSink ( data ) ; },0
public void LVPQHJFSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void KIGP8MIG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void R5OCG19 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_54b ( ) ) . badSink ( data ) ; },1
public void 1RMGASZ ( ) throws Throwable { goodG2B ( ) ; },0
private void PN7B1O4G2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_54b ( ) ) . goodG2BSink ( data ) ; },0
public void Y7Y1PVHSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54c ( ) ) . badSink ( data ) ; },1
public void L0ZT2LBG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54c ( ) ) . goodG2BSink ( data ) ; },0
public void HYA8DDDSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54d ( ) ) . badSink ( data ) ; },1
public void DFGW3I7G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ZYT3LEBSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54e ( ) ) . badSink ( data ) ; },1
public void LOON3CLG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_random_54e ( ) ) . goodG2BSink ( data ) ; },0
public void V3LWADLSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void RYY0X5OG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void IY2ZUAX ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_random_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 59LCMBJ ( ) throws Throwable { goodG2B ( ) ; },0
private void U57OAVVG2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_random_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public short 4H23865Source ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; return data ; },1
public short UV4U728G2BSource ( ) throws Throwable { short data ; data = 2 ; return data ; },0
public void F00B68B ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_random_66b ( ) ) . badSink ( dataArray ) ; },1
public void UFFGFRT ( ) throws Throwable { goodG2B ( ) ; },0
private void TW5TFV2G2B ( ) throws Throwable { short data ; data = 2 ; short [ ] dataArray = new short [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE197_Numeric_Truncation_Error__short_random_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void R8E5AY2Sink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void KRYJS5VG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void K6SG561 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_random_67b ( ) ) . badSink ( dataContainer ) ; },1
public void AVTMRGN ( ) throws Throwable { goodG2B ( ) ; },0
private void 54G9DS6G2B ( ) throws Throwable { short data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE197_Numeric_Truncation_Error__short_random_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void PW7JL96Sink ( CWE197_Numeric_Truncation_Error__short_random_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void LB306S3G2BSink ( CWE197_Numeric_Truncation_Error__short_random_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 15E34WU ( ) throws Throwable { data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_68b ( ) ) . badSink ( ) ; },1
public void 5OHRFPC ( ) throws Throwable { goodG2B ( ) ; },0
private void 139Q89YG2B ( ) throws Throwable { data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_68b ( ) ) . goodG2BSink ( ) ; },0
public void A0JV8QASink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_random_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 3ALN7TTG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_random_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void DWHZURZ ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ( new CWE197_Numeric_Truncation_Error__short_random_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void S1F365M ( ) throws Throwable { goodG2B ( ) ; },0
private void PITAKVFG2B ( ) throws Throwable { short data ; data = 2 ; ( new CWE197_Numeric_Truncation_Error__short_random_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void DPM847LSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void N5U0DHYG2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void JFNBUSX ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CHAID31 ( ) throws Throwable { goodG2B ( ) ; },0
"private void XPHXFNJG2B ( ) throws Throwable { short data ; data = 2 ; Vector < Short > dataVector = new Vector < Short > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 3ZC08HNSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void FENY085G2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void ANNA859 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void MPA2OMO ( ) throws Throwable { goodG2B ( ) ; },0
"private void E3J6MF5G2B ( ) throws Throwable { short data ; data = 2 ; LinkedList < Short > dataLinkedList = new LinkedList < Short > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void OY94V5TSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 73A6HS1G2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void N6X57E6 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void C7YTYHJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void ECHRYG3G2B ( ) throws Throwable { short data ; data = 2 ; HashMap < Integer , Short > dataHashMap = new HashMap < Integer , Short > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE197_Numeric_Truncation_Error__short_random_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void SYDP1J6Sink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void 5WO7WE7G2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void BV2NU41 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_random_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 1UR4IHV ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZWSQ3RCG2B ( ) throws Throwable { short data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE197_Numeric_Truncation_Error__short_random_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 0JLI2WPSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 0CD2I03G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void LGVK366 ( ) throws Throwable { short data ; data = ( short ) ( ( new SecureRandom ( ) ) . nextInt ( Short . MAX_VALUE + 1 ) ) ; CWE197_Numeric_Truncation_Error__short_random_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_random_81_bad ( ) ; baseObject . action ( data ) ; },1
public void BBTRR39 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2SB4HJWG2B ( ) throws Throwable { short data ; data = 2 ; CWE197_Numeric_Truncation_Error__short_random_81_base baseObject = new CWE197_Numeric_Truncation_Error__short_random_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void RNN7MAF ( ) throws Throwable { short data ; badPublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_URLConnection_22b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void 2QJ8ZHW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void AYKQOXKG2B1 ( ) throws Throwable { short data ; goodG2B1PublicStatic = false ; data = ( new CWE197_Numeric_Truncation_Error__short_URLConnection_22b ( ) ) . goodG2B1Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
private void B8DW0ZQG2B2 ( ) throws Throwable { short data ; goodG2B2PublicStatic = true ; data = ( new CWE197_Numeric_Truncation_Error__short_URLConnection_22b ( ) ) . goodG2B2Source ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void RPMW9K9Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void 2989T23G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 98594HFSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_52c ( ) ) . badSink ( data ) ; },1
public void AQGRAVPG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WAZ4BBLSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void Z5UMYW3G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void JSUHXW0Sink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_53c ( ) ) . badSink ( data ) ; },1
public void TX3EXHWG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_53c ( ) ) . goodG2BSink ( data ) ; },0
public void A8CX51NSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_53d ( ) ) . badSink ( data ) ; },1
public void 4RQROQFG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_53d ( ) ) . goodG2BSink ( data ) ; },0
public void WOM76Q6Sink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void S9HX1F0G2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 1S9SY2RSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54c ( ) ) . badSink ( data ) ; },1
public void 0PUHC07G2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54c ( ) ) . goodG2BSink ( data ) ; },0
public void SDK7CURSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54d ( ) ) . badSink ( data ) ; },1
public void 04QSNUUG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54d ( ) ) . goodG2BSink ( data ) ; },0
public void F6QLFDXSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54e ( ) ) . badSink ( data ) ; },1
public void QIJBJ6EG2BSink ( short data ) throws Throwable { ( new CWE197_Numeric_Truncation_Error__short_URLConnection_54e ( ) ) . goodG2BSink ( data ) ; },0
public void XUM1J9ESink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },1
public void Y8RM4RBG2BSink ( short data ) throws Throwable { { IO . writeLine ( ( byte ) data ) ; } },0
public void 4TSUAOA ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_URLConnection_61b ( ) ) . badSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void BOV4R77 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4G91D51G2B ( ) throws Throwable { short data = ( new CWE197_Numeric_Truncation_Error__short_URLConnection_61b ( ) ) . goodG2BSource ( ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void LB58GFZSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },1
public void F6S5YDRG2BSink ( short dataArray [ ] ) throws Throwable { short data = dataArray [ 2 ] ; { IO . writeLine ( ( byte ) data ) ; } },0
public void AQ3JD3WSink ( CWE197_Numeric_Truncation_Error__short_URLConnection_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },1
public void PAKI52FG2BSink ( CWE197_Numeric_Truncation_Error__short_URLConnection_67a . Container dataContainer ) throws Throwable { short data = dataContainer . containerOne ; { IO . writeLine ( ( byte ) data ) ; } },0
public void MTZ2MONSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_URLConnection_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },1
public void EF6LFPLG2BSink ( ) throws Throwable { short data = CWE197_Numeric_Truncation_Error__short_URLConnection_68a . data ; { IO . writeLine ( ( byte ) data ) ; } },0
public void XBXWY44Sink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },1
public void O7P91K1G2BSink ( Object dataObject ) throws Throwable { short data = ( Short ) dataObject ; { IO . writeLine ( ( byte ) data ) ; } },0
public void ACBGBW0Sink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void IBJRPNCG2BSink ( Vector < Short > dataVector ) throws Throwable { short data = dataVector . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
public void 8YRW6XZSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },1
public void TX4AGTCG2BSink ( LinkedList < Short > dataLinkedList ) throws Throwable { short data = dataLinkedList . remove ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } },0
"public void BQUOUGUSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",1
"public void AYDP74HG2BSink ( HashMap < Integer , Short > dataHashMap ) throws Throwable { short data = dataHashMap . get ( 2 ) ; { IO . writeLine ( ( byte ) data ) ; } }",0
"public void V6EAPOWSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 3URXEFIG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; short data = ( Short ) streamObjectInput . readObject ( ) ; { IO . writeLine ( ( byte ) data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
