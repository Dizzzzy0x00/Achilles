input,label
"public void TG7E2L2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void EY44HHT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4R5ZZ6IG2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 20IERMI ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void STNDHMBG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YIDP9WXG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void CDIVEAM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AL05DBO ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void B1U267PG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void J8LRTBKG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 4N1O2NS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XKHFME7 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void JPRHLHWG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void UUOMDRUG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void YAAAX1F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T78PAUM ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void QW2BL0ZG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3S8UTU4G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 6LU2S5F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 09PUBNL ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void DVT9FW0G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CB0PLADG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void BYF1IGF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9EO1SFG ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5VX8H12G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void AQVANVIG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 5SPROBD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TS1C5QE ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3RUJFSZG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void DMPZLPOG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void UEFZYZ5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2JGITFV ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void B5M8WDBG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void FBJHHLXG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void CY4KS2H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YUIKUZU ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void DBP0031G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 66CAOG8G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void T6RYA62 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4J1WVD7 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 4G5XLWMG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void N98FW0XG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 40HSCTN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NR5PYBM ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 6UE1MB2G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void I0YA52J ( ) throws Throwable { goodG2B ( ) ; },0
"public void NWEZEOF ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void F80342NG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void HFSKIGSG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void I73OKRW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void P7029GS ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void CI6TTZ5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void G3EUNPSG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void MW7J9L1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EZW38AF ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 03X6CJCG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TKIRPBSG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 0WBAZGV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AEM2IPJ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void HSTDTVMG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void J1SH2N6 ( ) throws Throwable { goodG2B ( ) ; },0
"public void QCMEBSG ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void N8GUAQUG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void XXC34VR ( ) throws Throwable { goodG2B ( ) ; },0
"public void NW57VOO ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String ISSCVSU_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void JYQL2H1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void FXE5QWOG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 06CZRYGG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void YP8HUJRG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String ZRMMQSZG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void ZD3M8JH ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__connect_tcp_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 9TVXJHS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void R3CO2YJG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__connect_tcp_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void J6KYJ1IG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__connect_tcp_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String Q5Z3DADSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__connect_tcp_22a . badPublicStatic ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String ZAYAOU2G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__connect_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String TE1M15XG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__connect_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void NJETKVR ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void 36EXG36 ( ) throws Throwable { goodG2B ( ) ; },0
"private void NG0N6PFG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void EGC388WSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void IRTZJE2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 0UTZSWH ( ) throws Throwable { goodG2B ( ) ; },0
"private void P5ZIUJ9G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ST7NHT1G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String ILYC7NRSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public void JYOGYRO ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String GPGYHW3G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void CCES6UHG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void BEI97KY ( ) throws Throwable { goodG2B ( ) ; },0
"private void KMHHG80Sink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TSPRG0M ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void U9MRCAD ( ) throws Throwable { goodG2B ( ) ; },0
"private void G2MLJQ4G2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JD2FFJ6G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void CI05PAS ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void N4U0CCV ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5EYLOJOG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void BGO1M6ISink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SI5HEZNG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void X8T8BS0 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void X4SVADG ( ) throws Throwable { goodG2B ( ) ; },0
"private void AWOO6BPG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void GZU8M8SSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_52c ( ) ) . badSink ( data ) ; },1
public void QXOVC4BG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void OWFZJSESink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void U3CTPUNG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void C1IBWKR ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void YJAE40P ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2ZICERMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void ZFJEU4FSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_53c ( ) ) . badSink ( data ) ; },1
public void 7K7YXOOG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 5LF29U5Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_53d ( ) ) . badSink ( data ) ; },1
public void UWVY1W7G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 6T217JASink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void FHFZ8VMG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void T190C0G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void DUKFXGV ( ) throws Throwable { goodG2B ( ) ; },0
"private void AYZ5HM7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 0TWX79VSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54c ( ) ) . badSink ( data ) ; },1
public void HIUAEBIG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void MI116AZSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54d ( ) ) . badSink ( data ) ; },1
public void JODS8Q6G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 5P3V766Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54e ( ) ) . badSink ( data ) ; },1
public void HJINOJ3G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__connect_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void 81NBBYYSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 97IEHBCG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 2ZF4K5S ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__connect_tcp_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void ZZEIE4Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void AKDQHOJG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__connect_tcp_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 9BTPGFSSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String RS9U8DQG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 4FSW311 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__connect_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void KD6RR7Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void PTJSP0PG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__connect_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void YBYR60DSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void PTXRG5RG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void F3QTWTC ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__connect_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void NZM2DBK ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8WQQ3GGG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void V3MRIPKSink ( CWE23_Relative_Path_Traversal__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TN3L727G2BSink ( CWE23_Relative_Path_Traversal__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OK81OUJ ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_68b ( ) ) . badSink ( ) ; }",1
public void DP90PHX ( ) throws Throwable { goodG2B ( ) ; },0
"private void YO2JTFQG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 722XDBRSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__connect_tcp_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void NNP0RMQG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__connect_tcp_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void G36WOKO ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__connect_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void C8QMVIB ( ) throws Throwable { goodG2B ( ) ; },0
"private void FZ2SKKUG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void UU4WSP4Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0S58RCOG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void R6L8J0Q ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 8BZLGNI ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5KPT8BBG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void 5IWKBYASink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void BJUE6MCG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5IL72ZB ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 31BJNX2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void HHJ9NWHG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void ZT586BWSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void OGLA1CQG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 227ULFS ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void OFFUCZZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6VAV8XFG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 8S9T0TBSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void Q0U7BL2G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void R9J98NR ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void YOOMSIF ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZREJKLIG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void UU9CMZNSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 3OMF7ABG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 692LD9L ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE23_Relative_Path_Traversal__connect_tcp_81_base baseObject = new CWE23_Relative_Path_Traversal__connect_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void X9IA0ES ( ) throws Throwable { goodG2B ( ) ; },0
"private void KAFAYO1G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__connect_tcp_81_base baseObject = new CWE23_Relative_Path_Traversal__connect_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void L6G2STV ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void F8GVMJX ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1KOHSN8G2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 65VPIWB ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5RG68O9G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void N3C14A0G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void AP3GXZI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5UBB4FF ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void SR544HQG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void SJ465PYG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void HO8VKH6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QR66F3S ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void SO42ZJDG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 701C9ZAG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 7RD4ZW7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PC6GLNX ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void K3PHMGWG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void BCATT0NG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void T5HUDOU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7POVAIC ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void K7DHDD9G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void S4VQ208G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void E3ALRHA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RGBIH9Z ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3DQ13YBG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XYHTKGRG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void KSRQYN8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3WQ00DM ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void G2YOFFZG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 2WGA41KG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 8RDMQRO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 61S5MWV ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 352FZUZG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void RRV4B7JG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void B11BOTY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FN7E32T ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void UQ9PZP3G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void U6Z49HGG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void GE2XSDY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6B17855 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void A3T2DHVG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YALXV7HG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void BYZIEOV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AI5070G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void VCTOJJDG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 5NCIVET ( ) throws Throwable { goodG2B ( ) ; },0
"public void IJG2MMA ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 1BGR0GLG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 5GCFLJSG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void Y0UJB1S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3373YKR ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void J8AGQNGG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TJDIBRUG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void PFNUCR9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OXGBY7M ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void ULCC7YPG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void HYV6Y49G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void VR3EN2P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OH2RDRI ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void VP2VU7AG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void I5JE663 ( ) throws Throwable { goodG2B ( ) ; },0
"public void DI1FYYK ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void MHV5SASG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void V02WXGV ( ) throws Throwable { goodG2B ( ) ; },0
"public void WEY0L9Q ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String IL90PO4_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void RHI2Z87 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 2CF9UKUG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 5C0PXHHG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void G4C6FGUG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 0AWUXF6G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void ST8IFQM ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__console_readLine_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void NWWMSO5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void IMYSKUNG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__console_readLine_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 5A6WFS9G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__console_readLine_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String ESB78VZSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__console_readLine_22a . badPublicStatic ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String L9PDE64G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__console_readLine_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String Q3DHBPBG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__console_readLine_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void K87K9HZ ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void C3WQZI9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LI3PUIAG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void ICE09GWSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0KF7X8U ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void EAF1VMG ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1Z02NOGG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 2B5F5J9G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String SWVDWUBSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public void H9A8JI8 ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 5SQC1Q6G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void RQ1R13HG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void ESH5TO6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void PYBCHGZSink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void A2HR3Y9 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void R4WTPSO ( ) throws Throwable { goodG2B ( ) ; },0
"private void UYCJ9BBG2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JUNBC19G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void O8BZV4O ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_51b ( ) ) . badSink ( data ) ; }",1
public void NVO3LPW ( ) throws Throwable { goodG2B ( ) ; },0
"private void HPBI840G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void SYUK693Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ABY0ITJG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FSUIBIH ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_52b ( ) ) . badSink ( data ) ; }",1
public void DIHLVFS ( ) throws Throwable { goodG2B ( ) ; },0
"private void MGICKM8G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void AJLLJAMSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_52c ( ) ) . badSink ( data ) ; },1
public void O5OF0UXG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void O9IS7XUSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 23SC9XZG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void JA9CRX2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_53b ( ) ) . badSink ( data ) ; }",1
public void 5GK950V ( ) throws Throwable { goodG2B ( ) ; },0
"private void D1P1YZSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void 11WFLF7Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_53c ( ) ) . badSink ( data ) ; },1
public void YNWBCDNG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_53c ( ) ) . goodG2BSink ( data ) ; },0
public void P5TC9K4Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_53d ( ) ) . badSink ( data ) ; },1
public void 5NNHQTPG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void DCL4I95Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SPDPWQHG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 878UZBW ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_54b ( ) ) . badSink ( data ) ; }",1
public void A2FUFOL ( ) throws Throwable { goodG2B ( ) ; },0
"private void LIHZ7GTG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 8A5DETKSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54c ( ) ) . badSink ( data ) ; },1
public void 76EIHO5G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 6WRGHMISink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54d ( ) ) . badSink ( data ) ; },1
public void OT8FMXPG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54d ( ) ) . goodG2BSink ( data ) ; },0
public void AZN7HY5Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54e ( ) ) . badSink ( data ) ; },1
public void KN2BXI8G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__console_readLine_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void DWJHLD0Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YKJ0AH7G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void VP9SDMV ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__console_readLine_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 3T5K7QK ( ) throws Throwable { goodG2B ( ) ; },0
"private void TCTN3ONG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__console_readLine_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String FU6USONSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String FHUOVIBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void T161MQ3 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__console_readLine_66b ( ) ) . badSink ( dataArray ) ; }",1
public void SYIX2FR ( ) throws Throwable { goodG2B ( ) ; },0
"private void HRID02BG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__console_readLine_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void O00I55TSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 44CURAWG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OSEB9B4 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__console_readLine_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void VSHA6FO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1Q7PUZTG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__console_readLine_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void CD2E55ZSink ( CWE23_Relative_Path_Traversal__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0C7HX9GG2BSink ( CWE23_Relative_Path_Traversal__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void K05M0JP ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_68b ( ) ) . badSink ( ) ; }",1
public void CFJV4CC ( ) throws Throwable { goodG2B ( ) ; },0
"private void T6COJJEG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void XSGRHOVSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__console_readLine_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0QBEVPCG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__console_readLine_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void Y243K2M ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__console_readLine_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void PMBNZ59 ( ) throws Throwable { goodG2B ( ) ; },0
"private void PG21BZ7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__console_readLine_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void X6J3HVLSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SLWVYSJG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 29BB3BO ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_72b ( ) ) . badSink ( dataVector ) ; }",1
public void LSO264I ( ) throws Throwable { goodG2B ( ) ; },0
"private void KYNTM80G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void 9UU1TY3Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void M6B0FFKG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void B0R57JA ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 1SZMW87 ( ) throws Throwable { goodG2B ( ) ; },0
"private void PC17VMTG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void 5PI9352Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void P2PN4AHG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void PYHJP4E ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void TS5U1QN ( ) throws Throwable { goodG2B ( ) ; },0
"private void NRUGB7TG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void DBNEDHGSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void DSXMFBQG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OQ7H2PO ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void XYEWS4F ( ) throws Throwable { goodG2B ( ) ; },0
"private void XDSFJILG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__console_readLine_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void JNF33QZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void BN7REQ4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void TS62XZ9 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE23_Relative_Path_Traversal__console_readLine_81_base baseObject = new CWE23_Relative_Path_Traversal__console_readLine_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RO90G61 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 39KHCOLG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__console_readLine_81_base baseObject = new CWE23_Relative_Path_Traversal__console_readLine_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void IABI5EE ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void NG66FIY ( ) throws Throwable { goodG2B ( ) ; },0
"private void ILV3ZRNG2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void UH0HQTO ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void WQ6FXJVG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 90S07OWG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 2MVLNSY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 358KXHX ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 9KHDQ5ZG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 024RWN1G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void DHIMQ0E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0I48Q0T ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void XFWOCX4G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 7XDEQYSG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void OBME7D1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A83GKO3 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void N1OGAIWG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void KAFZED6G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void HF5NQRK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CBWJYG8 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void QLTBJQZG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void J422CTUG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void HCY7NXW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 85IFG3Z ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void Z16KV0SG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TGDN5E2G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 9EQQJ3Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0SEZMAF ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void IBFLTFMG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void DE59BTCG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void KZU7FEZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VQQ24O6 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void YEP68V3G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 2HN9O7IG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void HOGGSLW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Z0AFJ29 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void GJ6MMLBG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void H0YBBOHG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void O2G3IKA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 86XTOIF ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void D1U7JIRG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void GM68SUZG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void B1VX74G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KS1YZ3P ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3JG5X0BG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void PBKYYR1 ( ) throws Throwable { goodG2B ( ) ; },0
"public void P52R7E4 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void JT9YZ5IG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void Y0VA5PNG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void AJQ1CIH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JWNLWBG ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void HEXFHAIG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XTO9SRZG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 5ML46II ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HDIRFSQ ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void LSXDHU4G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void MI8HGT6G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void GRVRCZO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GI89BV7 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 2103NOHG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void LHNZB5J ( ) throws Throwable { goodG2B ( ) ; },0
"public void 1RYIETW ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void ZMU32RHG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void 2FFE0MO ( ) throws Throwable { goodG2B ( ) ; },0
"public void 31X9CAB ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String AJJTJZV_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
public void LOLUEKJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void SKHYNVOG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String KCBOOZVG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void X7W5JNMG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String CK99BPJG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void T0I0Z0D ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__database_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void GHEHKZ0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void WE67VADG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__database_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 38XL5MAG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__database_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String MY7BYGVSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__database_22a . badPublicStatic ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
"public String LWX5YZTG2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__database_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String J1QTW2KG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__database_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 59K1YIA ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void YOC8RT7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void EMRNSRBG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void V1G3DP3Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 2UTTC59 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void VZQ6BYA ( ) throws Throwable { goodG2B ( ) ; },0
"private void XQ9SOC7G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void O0BWI28G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String ZNPRHYTSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public void AE38T67 ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 7FM7B8IG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void F6N3XA5G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void YEVLJ1L ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7EHAGWCSink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void H5XBVJP ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void UMZ4S56 ( ) throws Throwable { goodG2B ( ) ; },0
"private void D5EXI64G2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TQ6WOANG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void QXG9FPW ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_51b ( ) ) . badSink ( data ) ; }",1
public void W1YJMVZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3P2ZTR4G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void IN4PSBTSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3P58SNGG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void DA3BG56 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_52b ( ) ) . badSink ( data ) ; }",1
public void 65HZ7VV ( ) throws Throwable { goodG2B ( ) ; },0
"private void X903H98G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 9W7YW9YSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_52c ( ) ) . badSink ( data ) ; },1
public void 1WB9ODYG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 5WT0PT5Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void UXX6IR5G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void IG22O5F ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_53b ( ) ) . badSink ( data ) ; }",1
public void NX01F5W ( ) throws Throwable { goodG2B ( ) ; },0
"private void B67U8K7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void 570VTVNSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_53c ( ) ) . badSink ( data ) ; },1
public void P1A1KCFG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_53c ( ) ) . goodG2BSink ( data ) ; },0
public void XTFAVRKSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_53d ( ) ) . badSink ( data ) ; },1
public void 7Q0U2DVG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 9R8LP2USink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0OYQB80G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void A1GSJVE ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_54b ( ) ) . badSink ( data ) ; }",1
public void TUQ6TID ( ) throws Throwable { goodG2B ( ) ; },0
"private void UM380MVG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void NAUE56DSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54c ( ) ) . badSink ( data ) ; },1
public void OHROCZRG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54c ( ) ) . goodG2BSink ( data ) ; },0
public void VU8V30VSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54d ( ) ) . badSink ( data ) ; },1
public void KYYU93SG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54d ( ) ) . goodG2BSink ( data ) ; },0
public void MBPQR4NSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54e ( ) ) . badSink ( data ) ; },1
public void Z6GWF3DG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__database_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void MUTFD1ISink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void DETXXDBG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 4UDWFEO ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__database_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 550RQR6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZSEVSVIG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__database_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String BBR7N9ISource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String L2LX81UG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 5XZTTM8 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__database_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 2PX26BV ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1SS2O3MG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__database_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void Z4L5MW5Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SG8AVRQG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7B9E33G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__database_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void JU5XLD6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GNG7V4EG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__database_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void DUDNNBXSink ( CWE23_Relative_Path_Traversal__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void JQS80FIG2BSink ( CWE23_Relative_Path_Traversal__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void DXCZ6ZT ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_68b ( ) ) . badSink ( ) ; }",1
public void ERTTXU2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void F5A76TCG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void QELPHMFSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__database_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void U81F61DG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__database_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void GIGRKBL ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE23_Relative_Path_Traversal__database_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 8EO3JU6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 74MK3YBG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__database_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void VO79TKYSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void PDBGBJ8G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void KNP5JYH ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 1NEHFBM ( ) throws Throwable { goodG2B ( ) ; },0
"private void W48VWH8G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void IOX1PQCSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void Z4WKO1KG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void IKBZXDD ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 6X5ZSRO ( ) throws Throwable { goodG2B ( ) ; },0
"private void OJIWDKJG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void W9I1FOMSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void GA7F0MCG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void W0ECWIX ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void CW5G9J5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void SZ1W22UG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__database_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void Z77X7E4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void T6AQ8TYG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FZ9H51X ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__database_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void D6OAZ26 ( ) throws Throwable { goodG2B ( ) ; },0
"private void TL8DI52G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__database_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Y58KVK4Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void S82TKZMG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void QPBJQG4 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE23_Relative_Path_Traversal__database_81_base baseObject = new CWE23_Relative_Path_Traversal__database_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void JGVILC5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LMG722XG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__database_81_base baseObject = new CWE23_Relative_Path_Traversal__database_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void DRBD47Z ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void SROZ7BF ( ) throws Throwable { goodG2B ( ) ; },0
"private void U4PP9F9G2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void O2LGH1G ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 8HHZAS7G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CSZZUGQG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void AQNLBO8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SP7RPFK ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void X717A7UG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 8FNLOUMG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void TKUOSAP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G9QQSYI ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void YEOIAS3G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NKSVNNCG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void CD7O6P1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F0EP7JX ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void WQPKC9GG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void OJ9318WG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 98KFIPT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void P65XCSP ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void Z8HUTQRG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void PKR5Y74G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void PUUVDUP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GN4BQBD ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void IWNBK69G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 9I2MRNFG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void C7VDOON ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 64S0FJU ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void L4MQK7TG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 8VGGSL5G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void ORSJHJD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QSLPS7J ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void MD16CMWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void I0JIDX4G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 3MRA8VO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KXS4TB6 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void PH9JTXNG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void S0X048CG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void A8GO12N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YRJ70V6 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 8ZO0IZQG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YX1XL2KG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 9KNANOB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YRPKMH0 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 0F48HVLG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 4GOQVOS ( ) throws Throwable { goodG2B ( ) ; },0
"public void 3WELEWP ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void YS17B5RG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void WFJ6Q11G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 5JB320N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0WEQVAB ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void UCRO62IG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void PPA25HCG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void CIHEF9Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void W9MEI7B ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3ITGUK9G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void SE51KLOG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void HT3459O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SA3QQSP ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void JJZRTI0G2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 628LP0A ( ) throws Throwable { goodG2B ( ) ; },0
"public void IF50HWU ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void TDUJBV7G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void SRRG6CG ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZGCGLGF ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String KJBK2BU_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
public void LBY1914 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 3PC638MG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 4EZBHU3G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void N9MKD9ZG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String IF5LU5GG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void J5QRA3M ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__Environment_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void W07TY7N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void GMH0MQ3G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__Environment_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void SFKF0W8G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__Environment_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 614TEB0Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Environment_22a . badPublicStatic ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
"public String DW47O07G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Environment_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String OGD70K6G2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Environment_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void KRKYODN ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void CX8UN06 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9ZXFAMKG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void TOI4TCESink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void Y3CXVZ8 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void SDENS8F ( ) throws Throwable { goodG2B ( ) ; },0
"private void CBCPW4OG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 7K6SW0BG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String EUL6Y74Source ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public void OK2362Y ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String Y608PL5G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void D01SVDYG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void N8IOH9W ( ) throws Throwable { goodG2B ( ) ; },0
"private void U18JG82Sink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 8330I8J ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void X85MCUU ( ) throws Throwable { goodG2B ( ) ; },0
"private void P6R25MGG2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void I9U6CB5G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void UA0A92O ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_51b ( ) ) . badSink ( data ) ; }",1
public void PK8916Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3MC9O9JG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void ZDVUZ4FSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 99U6769G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void BSWALY7 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_52b ( ) ) . badSink ( data ) ; }",1
public void B32B6YT ( ) throws Throwable { goodG2B ( ) ; },0
"private void XWRQT4EG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void HQ9GVG6Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_52c ( ) ) . badSink ( data ) ; },1
public void 8TPUDMCG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void TG6JTNMSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3E7V0RDG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void N7L0Y1O ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_53b ( ) ) . badSink ( data ) ; }",1
public void DOK67ZM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6RL3H45G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void TSQT2WXSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_53c ( ) ) . badSink ( data ) ; },1
public void 2IVVIUBG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_53c ( ) ) . goodG2BSink ( data ) ; },0
public void B0FH62FSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_53d ( ) ) . badSink ( data ) ; },1
public void TDK1XZ0G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 0DZMQ3GSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void M9DHZMPG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void RYYTWFC ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_54b ( ) ) . badSink ( data ) ; }",1
public void JXGPK7G ( ) throws Throwable { goodG2B ( ) ; },0
"private void FE21AHGG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void E4U1I4TSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54c ( ) ) . badSink ( data ) ; },1
public void TR20B3ZG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54c ( ) ) . goodG2BSink ( data ) ; },0
public void EITYW7KSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54d ( ) ) . badSink ( data ) ; },1
public void X71M9QOG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YBGCT7GSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54e ( ) ) . badSink ( data ) ; },1
public void 10AJ42HG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Environment_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void XGP8NLWSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ODZMG36G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void JDO73UB ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__Environment_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void Y0WI11V ( ) throws Throwable { goodG2B ( ) ; },0
"private void HQ18JEJG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__Environment_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 1Y16PAHSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String AYSDNXHG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void EGP93QF ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__Environment_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 86E6EDB ( ) throws Throwable { goodG2B ( ) ; },0
"private void WMA5Q8IG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__Environment_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void GC3LUN7Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void W1MPYN9G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LWDOY3O ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__Environment_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void TR421J1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void T34C6ECG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__Environment_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void MGP9XSBSink ( CWE23_Relative_Path_Traversal__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0OS606MG2BSink ( CWE23_Relative_Path_Traversal__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void M1E7JVJ ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_68b ( ) ) . badSink ( ) ; }",1
public void 11A1FVE ( ) throws Throwable { goodG2B ( ) ; },0
"private void FKZATIOG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 2U01414Sink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__Environment_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void LDFFEXAG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__Environment_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void WNWC7LF ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE23_Relative_Path_Traversal__Environment_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 6U9WO86 ( ) throws Throwable { goodG2B ( ) ; },0
"private void O3CIIBQG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Environment_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void 8NQGWI1Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void R0WD28TG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 3GSFTT0 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_72b ( ) ) . badSink ( dataVector ) ; }",1
public void BAGOD43 ( ) throws Throwable { goodG2B ( ) ; },0
"private void RJ5VW0NG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void GTZFWTHSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void PPKTI5BG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void PW060HP ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 6KE8XXY ( ) throws Throwable { goodG2B ( ) ; },0
"private void 782AQI2G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void MBOA216Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3A44NPIG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void MMT85IX ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void WEFK8YH ( ) throws Throwable { goodG2B ( ) ; },0
"private void RUCKRWKG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Environment_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void C19I5M0Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void DQ24VU2G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 29UXHAB ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__Environment_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 88E5JVS ( ) throws Throwable { goodG2B ( ) ; },0
"private void 277YOOSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__Environment_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HVZ5X1WSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void CZR55N4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 1PMDVVJ ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE23_Relative_Path_Traversal__Environment_81_base baseObject = new CWE23_Relative_Path_Traversal__Environment_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 1K95D4P ( ) throws Throwable { goodG2B ( ) ; },0
"private void SWKCN3BG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__Environment_81_base baseObject = new CWE23_Relative_Path_Traversal__Environment_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void XCXL4N9 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 2Z35N8O ( ) throws Throwable { goodG2B ( ) ; },0
"private void S8DO3A0G2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FU77MY5 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void ZGT8P5UG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void LTQBX3VG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void KS0W0EL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LS1P4SF ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void WFC4AYBG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void KKH674DG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 28RF4MF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4HTGV9H ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void B2DQZXNG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 048FX3CG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void JVPXJ7S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6KV452Z ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void CEOXSSAG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void V4OY2ZOG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 85M3CBB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AK0EW2D ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 2FJ3RVXG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ZOUZ77IG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 918IDED ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IDBLC78 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void ERRLDPRG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JLVXIXNG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void FAMYTMO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NQDWN62 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void H6C7ER5G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void IJ9AU1MG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void TD8EIZS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DFL4VLD ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void HEXQZRHG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 8YFWK9NG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void AJV0TSL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void II1I365 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void KS885E3G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NCP1ZAFG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void IZNGFWK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7Q4QHMO ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 6OMTTFDG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XFWY50OG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void ACVFRCL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q0EQOQV ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void B9O21YYG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void YU6QCHN ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZLSFD73 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void RHJTVCQG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ENPRRWEG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void NJRSCW3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void D3E4GRM ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void BU362Z5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3O5DX50G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void NINGX5O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LMI34UC ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5UH5X6VG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CT7EPSFG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void FYH5IM7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E0R44QQ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 1MJ6M84G2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void Q1V94IT ( ) throws Throwable { goodG2B ( ) ; },0
"public void E3U5570 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void 7ZKC0O8G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void 9I5R1UD ( ) throws Throwable { goodG2B ( ) ; },0
"public void M2WCO4U ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String KMSJUMV_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void 689FX17 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 4ME85ESG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String DN6JJSXG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void XVGJCBOG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 1Q5RL8CG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void OZL2MS3 ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__File_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void MHN6HI2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void UVHGWNTG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__File_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 24LM5AIG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__File_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String V4PTOHHSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__File_22a . badPublicStatic ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String DMH0MB5G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__File_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String YM30QQGG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__File_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 949SGL0 ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void Z2ZV31U ( ) throws Throwable { goodG2B ( ) ; },0
"private void GS9NF5TG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void HZD9FP3Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void IFYN0P5 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void ZF2PVO5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void S4VG8USG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void G6W61E8G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String YQHTKJ4Source ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void QDMLUUM ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String AIO1KTFG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void RG9WBAUG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 686E41K ( ) throws Throwable { goodG2B ( ) ; },0
"private void GO1KY9DSink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YREQK1U ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void D813PCG ( ) throws Throwable { goodG2B ( ) ; },0
"private void L7EK121G2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 5CWDHSFG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void 40XCJ88 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_51b ( ) ) . badSink ( data ) ; }",1
public void AGMIWOW ( ) throws Throwable { goodG2B ( ) ; },0
"private void ELE12X6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void Z6SPYDASink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SEQZOT3G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7QKWH3J ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_52b ( ) ) . badSink ( data ) ; }",1
public void 6UJOQ2V ( ) throws Throwable { goodG2B ( ) ; },0
"private void SD8MYDPG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 5G7F4NUSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_52c ( ) ) . badSink ( data ) ; },1
public void GLRWFMQG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void KHWSCKYSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 27H8463G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FGXPB9U ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_53b ( ) ) . badSink ( data ) ; }",1
public void OKEY0F5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void UFXO359G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void JCMAJ71Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_53c ( ) ) . badSink ( data ) ; },1
public void IL9YNSGG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_53c ( ) ) . goodG2BSink ( data ) ; },0
public void FK3UY5MSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_53d ( ) ) . badSink ( data ) ; },1
public void OM12CISG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void M0KI7D5Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void UC59BS0G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void SGE7RJS ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_54b ( ) ) . badSink ( data ) ; }",1
public void 5X9KLV5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8MON046G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void JAINVW1Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54c ( ) ) . badSink ( data ) ; },1
public void TUSY93SG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54c ( ) ) . goodG2BSink ( data ) ; },0
public void ZYQ0YN2Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54d ( ) ) . badSink ( data ) ; },1
public void BJP3RBQG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54d ( ) ) . goodG2BSink ( data ) ; },0
public void X2JA3LUSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54e ( ) ) . badSink ( data ) ; },1
public void X5TSPF7G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__File_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void Q4V4J2RSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void XU18H7LG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void L81RQGN ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__File_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void SP66TN0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 63UO5O0G2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__File_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String BYPCM4ASource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String NL3SWK3G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 6CFJJCE ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__File_66b ( ) ) . badSink ( dataArray ) ; }",1
public void J6DAX6Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void HIFQU5HG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__File_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void 7IALQXOSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void O4MM7RVG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void Z9DG9G2 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__File_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 79UUKEN ( ) throws Throwable { goodG2B ( ) ; },0
"private void QX4Q05PG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__File_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void 4MQLE4NSink ( CWE23_Relative_Path_Traversal__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TUKSCDLG2BSink ( CWE23_Relative_Path_Traversal__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void E0LQ9J8 ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_68b ( ) ) . badSink ( ) ; }",1
public void IB9VDRJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void CZIOYNPG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 3Z0Y6IQSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__File_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void MLHAI12G2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__File_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void K78L0AZ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__File_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void FVYA7H9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4X38W7CG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__File_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void 4P1RA16Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0YVVKACG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void J0HU3PN ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_72b ( ) ) . badSink ( dataVector ) ; }",1
public void PP0W7CU ( ) throws Throwable { goodG2B ( ) ; },0
"private void O15PGLIG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void 0IA24C1Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 80JK0N5G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 8ZEAFDA ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ZSZJ9EC ( ) throws Throwable { goodG2B ( ) ; },0
"private void JOP2RS5G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void CZJ5XB0Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 34L4WVPG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 89QTIFS ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void YB4399Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void NW18JW0G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__File_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void LDPE6S6Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void DLMLDQKG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void H12B1LP ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__File_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 4PBKCSQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void P367WW5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__File_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void FTB9554Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 3KWVPT8G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void PC2C93P ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE23_Relative_Path_Traversal__File_81_base baseObject = new CWE23_Relative_Path_Traversal__File_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void BFSL0FU ( ) throws Throwable { goodG2B ( ) ; },0
"private void DP83A3PG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__File_81_base baseObject = new CWE23_Relative_Path_Traversal__File_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void HKCGM2F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ENB9CLT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VGQOM8VG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void RG5GXXW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void H2Y3BROG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 5U3MHZ8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void SO9SP3A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BETQRKR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 9VW0SWMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 5W8J7ZVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void AX6FMTQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YI4SSZX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 7567J7CG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 608DTNQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 4E0WBY2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void I3Z56UA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void BH36UB3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XSSTBS0G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void WJOVTAP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OTMQC0W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void F0FPANYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void GWAE4C8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void PG3M3F1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JDXBG1O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void PPHSE2BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void M4SHXTQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 8ROE012 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void X764OE2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void G9E9ABLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void T89AHE7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 38C9GB9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PVDBP9X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void OWE4Y71G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TI5QEN7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void EVS3J4A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 13SV4D6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void SL97BO3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 52AELFWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void MAICEFC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7AY0Y4Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void LOYC9B8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 9Z16M2DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 4DD9315 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void UJA09YT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void R3KOVMMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LBD064L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void FCGNBL7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void MH4R3BEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void AJ738HRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 56Y3IBJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void KBR7577 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 7SW6CX9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 6N32WGWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OVB3QVR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 93HV64G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void PY3KJM7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void QB4PL25G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5BBFXD8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1VB0263 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void M9MJET2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void C834K3K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 2VJ1LUG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void 5Q9IEG1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"public void RTDQR46 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 71CLYAX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String FOA2F2X_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public void QI84Q2P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void SSA69WCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 5L73G3NG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 3B9RASTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 3M6XSGDG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void TEM50BH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_22b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YJAPONE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void ZNPOU04G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void GJDNMMIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 8CARL2SSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getCookies_Servlet_22a . badPublicStatic ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public String LJJDWQ7G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getCookies_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String G3ACX7QG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getCookies_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void FF6TRRE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"public void VTOCZ74 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7NMVZPJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void 1S139X9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void B5FAQDH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badSink ( data , request , response ) ; }",1
"public void UNTG01C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UDKPDN9G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JKHVYR5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String FFMVLC6Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public void YCDGYH9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String TYZTDKIG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void N4SIIKRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void YY62CQP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NB4W5CGSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void RU4TM9C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void I2S4KJL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JEGVS23G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void L13MYJ2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void ZOE5SRZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void QMS7CHJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VHGHEU8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 05M2HF4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void GM6UIT0G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 4QUMCKF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void XB3QOY3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8IVIWCUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void W8YHW0TSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void A1F89NZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8N0RAV7Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void USZD5N6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void C8CTD5J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void YK741V4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void V6B4W03G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void C41MDNRSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void DMDTQQIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FWMV0Z1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9KUAYRTG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GXUE25FSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void HTXSDYPG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void I9RGBLE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void HYUIQWV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2EMFE8JG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void V8M6R9QSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void F1DR0NJG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IMQMNFASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void ID9YEB1G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 31HAS87Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void IKTBWUZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void C7LVOUVSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void RP2UKG7G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void I98POE4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_61b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TAF1IPQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XPB4GCCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 2J5N5U3Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public String 92SD68TG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void NCN2DFW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 0EM7ZKB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R6DK1OHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void L8XZTU2Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 13JHOI5G2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void J7WRWY4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void MJB1LH9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void L8Z2XCHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void K7A8283Sink ( CWE23_Relative_Path_Traversal__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0O4MPVIG2BSink ( CWE23_Relative_Path_Traversal__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 0NXMVN4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void OTXGF0I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8Z67MBVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 97VV8INSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getCookies_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void W0YRSBAG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getCookies_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 6PBAWIB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void EHN9HLO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 34RXPXFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void SDMSMLGSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void VFT3J5LG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void APKPWOX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void J9C6X9Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void T93ZFVDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void YQDN354Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void M5CZDJSG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5MVMEPA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void ONDFLX0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 54XUZ8CG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void F4U1ZAMSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void WVY3L00G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void CI1DGVV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void YNTJY2O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EWXC9XFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void ABQQ39ZSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void NA9OVDVG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void VNTO0T3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 6CEOR7J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CMYKFS0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getCookies_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void VZHNV5GSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void AAUWKEYG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 1H007ZP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE23_Relative_Path_Traversal__getCookies_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getCookies_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void FX3TS6F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UQKFHYNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__getCookies_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getCookies_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 0IKJJ2R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 20P5V4C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9W6FEH9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void MSMCK28 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void VA6CEFYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 366B0S7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void K7J9RI2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 57712GQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void OC66HHLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void GZ5A0OLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5HGY8XO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LMKY9G4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 7SJBM78G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void P83SG6OG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7DYAKIT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BRRWB8B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void NDPVFCIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CT9XW1EG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LZ8UVNN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ILANG8E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void SLFX753G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void SLBGRBIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void C9Y5N5R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void G9MYBVQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void XTFSO2BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ELWY9SUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void VB7Z7A3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void F5YUN4G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5FJSPK7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void MKAOPCCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void ASHC7B9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DFMLCB5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void FO2MCV9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CNYLIYKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 23K3NK3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0CKI6JC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void H3RT5KUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 483P05CG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LJMUUWV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void O598U8X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void V5CZEAOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3YYME4GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void U1AL4DE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6MBS2ZB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void WRMD2GLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void EHDDVNK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 3NL2N9Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void Z3P4GR1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void HEJOKTOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7C8HNDK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JOFAM8Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 4OP476WG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void DWSLLO7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void RLQJDGN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8JUSHEF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3SS0495G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 53WJD9IG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OJBWUGG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void UOZ6FIU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void V7FHCJWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LOZQQUE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 5IE6H3X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void 9PBN1UKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"public void G129Q2S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 4AHGLLR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 6DC344Y_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public void BIDODGD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 4090QXZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 06MEULLG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void L6EDBYVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String E8I04OBG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void VH047EM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_22b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void B8TYGUF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void EEBN952G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void UGH67Q1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String RHPLZUCSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getParameter_Servlet_22a . badPublicStatic ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public String MHWRHROG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getParameter_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String 935PJARG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getParameter_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void WVUCJYC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"public void AWOZK4F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 118OURVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void K2B5RN6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YE63WGX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badSink ( data , request , response ) ; }",1
"public void XCA6FMQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 5XWW9H3G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void K8X9J4KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String 8TU6IXVSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public void 26S63FO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String U35JHB9G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void ULG2GFVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void GYBUGXA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1QIXMQKSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void R6H9YGL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataBad = data ; badSink ( request , response ) ; }",1
"public void 9NO1U6D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EFA8AN2G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3GDBJIUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 87ZGE31 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void GWOYZFA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 67BRWH8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0I300O8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SGX963DG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void BY1Q7B0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void MJV0INT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 749D3JIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WLPTFGJSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void VWP4FM5G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void AHQ4CK4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ESRLZZ3G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 0N3Y0C3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 1W2UUIA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0H3DCKLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void V7FRQ4WSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void GTHYJTFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FJTUK2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void OEY1QPPG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6OG3PP9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void W197JYWG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HJVUHMR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void TZUFFXQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NHLUKN1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void EXMHFC4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6HB84W6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void F20PW0NSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void XW252E3G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XKH4S59Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void FUIBEQAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void L4CQZF8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void VC6XMY4G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 8LD27O1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_61b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TO93KMZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7MDRQBOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String J27RZ0JSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public String BW5MJQRG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void RFYIC9Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void U092MPY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3PJVWGRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void CCDNWSNSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void HSMCHF1G2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void MGIGUT3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 6L1LBTR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9EO8VD9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void YC7GXXXSink ( CWE23_Relative_Path_Traversal__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 4EHBMXIG2BSink ( CWE23_Relative_Path_Traversal__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void AITY4ZP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 2BJ4R3F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3CW4RBJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 3R6TK57Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getParameter_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void MH3XHB2G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getParameter_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 3PLHNBF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void S51MK8K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NSKXQZ3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void UDQ3SABSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void NXIO8GRG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void PYOXW21 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 2QXCSQR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EC5X2RNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 0BYK5B5Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 04NDB4VG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void B9ZZC7C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void RQKJPIJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BI4EIOQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void A0PY0MMSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void BIY0B5MG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void VJQN72J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void NZLQH95 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KWFC0BKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void XL9V88OSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void H5EEQ6CG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OSDNU4N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void J32QSGM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NEAHAHKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getParameter_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Z5E52RSSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5HKE58WG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void AL9KZR0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE23_Relative_Path_Traversal__getParameter_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getParameter_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void X7SHNWP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7BIAVY8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__getParameter_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getParameter_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void TX0MBP1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YDHZV6W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FKVRBLWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 6ZDHVZW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5PDOBBLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3NAL8P3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void J0URB39 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XHOI0MN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 09NGGC6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void BV8S078G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HSOJ1QI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YQ2O21Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 8MFR00JG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void W6IYFMOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 3IV5VLX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JV9R2XT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 0AU2WEBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void EOT9JNHG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OIGZF3V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VDDGD6N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 0HKKJI7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XBKL5VUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HMW7J62 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ZNKU8H8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void MYJ5AYXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YBRP542G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void CCCPUR7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4BZMM54 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 10FA8APG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void VILBZZFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FQL7743 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 80NTB34 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void TB8H03RG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NA649W8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 3SYZ8TJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9FJ2EVY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void L5D8XIZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 0RE7UH7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void XL3ZPU5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XQLWEI4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void SEXVLFXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ISMOL11G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void XAMKCN9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HUMZJ7E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void GDBAA0QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 2VABBYI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void U8GWDQ3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void WN62TM9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XLDZFLBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7VO7XBA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 972TD9R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3HF3WJYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YXDUJ38G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void BST62PC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JATMNVT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void RAERW5XG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void WM1V11OG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void MCVE06S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NVDUWIC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void O95H172G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FICGQ6U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 7FRYJ67 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void NV30GQAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"public void HWI6YUJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void HV54XQ4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 22OW9SC_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public void UVEXXDG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 540J2N1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String M40M0SGG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void USCP1RNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String O1FPSZPG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void GV1WMPG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_22b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void FZOZWHX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void QQNL6DLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 3ZFCNS5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String XOCYBHOSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getQueryString_Servlet_22a . badPublicStatic ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public String 5KHXXXTG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getQueryString_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String SDFZPBNG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__getQueryString_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void SVKOBXA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"public void Q10QHEG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BJJCAYMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void ABCJU6YSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 07Z9NCR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badSink ( data , request , response ) ; }",1
"public void AMR40ZH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CK7GW2AG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void BKU07KKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String GM982QSSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public void ZLQW5BC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String SDIFA7PG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 1LP9MG8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OW3YWH0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1UZVA98Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 16QKGIH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void OMA2SHZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HIENI5JG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void F4T6LGSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 8MWVOFK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LE1S12P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6BGNGG6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CHQL9IUSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void QXJPG5IG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void IBBQ5V6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void SK8QE83 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MO1SJCZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IMYQXAESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void C5SZRBNG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 3U25OSLSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 79HBG6ZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void LUBS6ZD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void AYQ1M0F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void S5UQKL4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void N6O05E8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void BACPHL0G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 1OQKIKRSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void LEFQ3EFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FYBO6LYSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void MO5J7TGG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void IMVC51J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void BFPK3P8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MQY27WOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void QD9RPI3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void SXR2O3DG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TKAMPS8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void HEZRQUCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IIT1JGVSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 145RBTLG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void P74CRAXSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void FTHW98NG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void UVHLTTS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_61b ( ) ) . badSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void YZ2XSRR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VVE6S6EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String VGSS957Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public String BS8ZQ4IG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 78UYQDE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void HSCZDAK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KZXOI6DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void 46DZ0FBSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ZWVRDWZG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 24ODRZQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void O0H56SL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void V4C6IMEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void BU9222NSink ( CWE23_Relative_Path_Traversal__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void QQ6SKIZG2BSink ( CWE23_Relative_Path_Traversal__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void YDJDZ4K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void GEEWMA2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3QBV45FG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void M8VMBNBSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getQueryString_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void VHLFGRHG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE23_Relative_Path_Traversal__getQueryString_Servlet_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void BDNLJK5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 9D6M1RI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void K1J59CXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void AQWXP37Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void N566ADOG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void T5D177R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 1GDTEVE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q87NIX0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void VTF1LQOSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void MBKEP0PG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5N1JC8Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 82WFBMU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void T6KYHOLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void XG5UAMDSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void GBKZI41G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void AA27BES ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 76TU4VH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void V69ZXOWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 52D9K2HSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void EGEZJBSG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 9UZONIU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 0W2MX0S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void S23SC84G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__getQueryString_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GX7PPA2Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ZYAMO4MG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 8KLJLWY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE23_Relative_Path_Traversal__getQueryString_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getQueryString_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 2P9AW64 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 90Q6NDNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__getQueryString_Servlet_81_base baseObject = new CWE23_Relative_Path_Traversal__getQueryString_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void ABSHM5V ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void POTWIIZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void CEXO6CCG2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7K1LJZR ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void NBM4MG8G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 61P4V8CG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 5698BNO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 58N8HVZ ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void HE7QNN4G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 6CWIOFBG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void D2HL8T9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IERIY9O ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 6L7T3YRG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void CHJKA3JG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 2C2RAAH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4QMGTPG ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void RKKIJV0G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void K4N0HGEG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void H42VE3S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FPWUXCA ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void C3WKYI0G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 1RSX0MAG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void B70ODQS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LEB3LZ1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 026KYLTG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void PCYK3QZG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void B0LPXIO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TDFDT4P ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void XVA41Z5G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void A1B3H4FG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 3X4R6X4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 681XQVR ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5QD48MSG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 7EGU0MKG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void OGJCGDK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V0MEJKW ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3BCD3R5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void DGIN3DSG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void OVCSFPO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U7QIKND ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void BVZ6F3UG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void TC0KO4TG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void GE6H1ZW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0WVNVIS ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 32Y0KYKG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 39FR7QG ( ) throws Throwable { goodG2B ( ) ; },0
"public void S64M804 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void ZN1R69EG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NMH8X28G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void L8LVRNW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RR2SNWF ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 3HWWB3PG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void VBMO4FQG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 8TB1VQJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GQSD9J1 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void YKXXCZAG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void RMS5YYRG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void D4CVRPC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EHF9U70 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void V4U987MG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void QO8XNZB ( ) throws Throwable { goodG2B ( ) ; },0
"public void 6IM4ITJ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void OLTCG9BG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void NGS8S27 ( ) throws Throwable { goodG2B ( ) ; },0
"public void Q2WZ3X9 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 0094QEU_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void FXRCUPL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void YRTYCR1G2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String UB627REG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void FK9MLEQG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String UXKAGIFG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void B0KB21I ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__listen_tcp_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void MFYLN59 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void ACDH5QWG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__listen_tcp_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void DPVYDCRG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__listen_tcp_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String Q4RHVWNSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__listen_tcp_22a . badPublicStatic ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String GRZ31T6G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__listen_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ZOVGIYAG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__listen_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void REOI54F ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void R1QHYS5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MXMYIS8G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void QDZ2H7MSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TZ0FV2R ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 1BKJM93 ( ) throws Throwable { goodG2B ( ) ; },0
"private void SLPTMCUG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void S8RINJZG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String BQLKXZJSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public void 4COK9KI ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String CKIV3CEG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 2CGGEH7G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void N4YS7KF ( ) throws Throwable { goodG2B ( ) ; },0
"private void 28XOL3ISink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 8PI4SB7 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void QHF4K4I ( ) throws Throwable { goodG2B ( ) ; },0
"private void BDWLSRIG2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void M9H9ZROG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void HJTJ5B5 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void XKY81D4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FS7Z9N9G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void KV45FVISink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void MRRYE4MG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void T3EUWBI ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void O3TX31L ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5FW1IMSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void YD5LZXZSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_52c ( ) ) . badSink ( data ) ; },1
public void 22CNDTVG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 6BJ7VV4Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 7EM83JJG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void CUC3XEQ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void IOIBB1G ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3GXKBYUG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void JQLZ3AKSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_53c ( ) ) . badSink ( data ) ; },1
public void 0KB3K9JG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void XUNECB7Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_53d ( ) ) . badSink ( data ) ; },1
public void FGO2S3JG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void O8LC6QFSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 5NUTJIOG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FJEGI9V ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void NFA4H9V ( ) throws Throwable { goodG2B ( ) ; },0
"private void S3K2OMEG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void SR4L9L4Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54c ( ) ) . badSink ( data ) ; },1
public void Q8M7SYQG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void SCIAQ5OSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54d ( ) ) . badSink ( data ) ; },1
public void R7FNTXCG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void GJ4M26JSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54e ( ) ) . badSink ( data ) ; },1
public void IPJVVJ4G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__listen_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void 137TB78Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 9SQH0L6G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void VVYSIW5 ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__listen_tcp_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void CT1X09K ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9PVP9FCG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__listen_tcp_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 0DQYSIGSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String CN7SYKMG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 8K04I94 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__listen_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void MEY620Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void I4OOO8WG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__listen_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void 6IP7PZ7Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void ZFK97O0G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FNKGRB8 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__listen_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void X5TB8KK ( ) throws Throwable { goodG2B ( ) ; },0
"private void B5CM53KG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void I4AKV5TSink ( CWE23_Relative_Path_Traversal__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void USWT4PIG2BSink ( CWE23_Relative_Path_Traversal__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 5OOPBXX ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_68b ( ) ) . badSink ( ) ; }",1
public void GOEKR11 ( ) throws Throwable { goodG2B ( ) ; },0
"private void C50ZI0XG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void OGBVOUQSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__listen_tcp_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void GFXSBAKG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__listen_tcp_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void IINK799 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__listen_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void U3NC54B ( ) throws Throwable { goodG2B ( ) ; },0
"private void F2R7Y8NG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void N9GAR9DSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void C2N0E97G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void JXMGNEQ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 6JZPEPK ( ) throws Throwable { goodG2B ( ) ; },0
"private void LENMTH3G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void 82YEB1RSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void BQZFC3VG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 4P26VPP ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void LAEDABA ( ) throws Throwable { goodG2B ( ) ; },0
"private void 73ASF9CG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void Y9NL0Z8Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 80H3UZDG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void DLOO3E6 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void FH8L72C ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6GG5THUG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 3JMD2OBSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void BVPPKPAG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 7D3SNJ8 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void L27NMWZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void P0UW0NVG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void EZSVKSXSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void OTZ6KGXG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 4XR1FYG ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE23_Relative_Path_Traversal__listen_tcp_81_base baseObject = new CWE23_Relative_Path_Traversal__listen_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void CYXD6JF ( ) throws Throwable { goodG2B ( ) ; },0
"private void JMYBCQ9G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__listen_tcp_81_base baseObject = new CWE23_Relative_Path_Traversal__listen_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 7I5QTNQ ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void NHSSFZZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 873S6QYG2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void K4S4QUY ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void ERNGVO3G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void LC1WM1NG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void G8S2AC5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PNP7QDO ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 1S76UK8G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 6HJ1PGEG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void BC8G14Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KDD7O06 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 9CRDUI3G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void Y3V200SG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void QXPO6GT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void L7CSU34 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void VUCZXCGG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 0IR6N2LG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void N4RLX6P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3JPDEN2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void IYANPMKG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JQIRKPWG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void LRBGFIP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 681YME8 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void NNQSUWZG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void ZWJURPWG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void U6E3UNV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MRHGC5C ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void BU9MGJ3G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NFPYYMHG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 7IWL795 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SF1FYNE ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 0DJNFAAG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void B8YA91AG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void CYMULZ5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OEI74DW ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void PR97W1OG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void AGOWSF9G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void RF9XTTR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HELYRRK ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void J1ZJ5KWG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void IDFVGDGG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void ORSC7HB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4LDIO52 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 18GZXCQG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void V6B2IPV ( ) throws Throwable { goodG2B ( ) ; },0
"public void LY2ULZE ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 4XAD7ZZG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 8OM3B42G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void SN9TPEO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7LIP9JI ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void IALBGREG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void JNO8RRNG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 3FTRCD7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EWV03Z9 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void CM3RVSMG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void V6SVGJSG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void Z357GCI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0H0XKMD ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 2AT0LKFG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 91L4127 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 625JF4T ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void XKY9LTQG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void AXR4SZD ( ) throws Throwable { goodG2B ( ) ; },0
"public void KTBRESX ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String TBBVTQY_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void TFZR3ZN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void IIWTYWCG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String LCCTU4SG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void F0ZSI6RG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String H6LOHTZG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 5IRCQBP ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__PropertiesFile_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void LTVAEZH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void EJJFVGAG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__PropertiesFile_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 15ETXTGG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__PropertiesFile_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String E3ORR6HSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__PropertiesFile_22a . badPublicStatic ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String HXM8PT4G2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__PropertiesFile_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String FNMTSIAG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__PropertiesFile_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void Q4631GH ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void 9BSLB72 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FKVJC5CG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void 5IGNRT0Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void JSX5O4W ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 67YNR3K ( ) throws Throwable { goodG2B ( ) ; },0
"private void E001M38G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void FMAUA0KG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String GBVHQG1Source ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void R6BAJUC ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 238UI71G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void EZ0C0NCG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void XKBVUUZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1ST9Z8OSink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void V6RT3VU ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 72O2HGH ( ) throws Throwable { goodG2B ( ) ; },0
"private void LD4DK3GG2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 15AAN35G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void JZUAQCU ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_51b ( ) ) . badSink ( data ) ; }",1
public void IST5Q65 ( ) throws Throwable { goodG2B ( ) ; },0
"private void XFTREZ7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void ESD3OK4Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void SPZH8LCG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void E57JNAL ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_52b ( ) ) . badSink ( data ) ; }",1
public void KUV8IXU ( ) throws Throwable { goodG2B ( ) ; },0
"private void QE4039VG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void CKVGLB8Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_52c ( ) ) . badSink ( data ) ; },1
public void GG7RC1LG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void BTXR63ESink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void B1ZY6X8G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void YYJL6U0 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_53b ( ) ) . badSink ( data ) ; }",1
public void 5LBGW81 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3OTA4PAG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void G9WXIO5Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_53c ( ) ) . badSink ( data ) ; },1
public void BFRMZZ7G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_53c ( ) ) . goodG2BSink ( data ) ; },0
public void VPFL5S0Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_53d ( ) ) . badSink ( data ) ; },1
public void FIA0PBPG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void ARBQRG1Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void G9Q4O11G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 1UTIP67 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_54b ( ) ) . badSink ( data ) ; }",1
public void RURMD2Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void IVEFTVRG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void SBDY6GPSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54c ( ) ) . badSink ( data ) ; },1
public void X1Z0QGWG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54c ( ) ) . goodG2BSink ( data ) ; },0
public void VLMMI2ESink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54d ( ) ) . badSink ( data ) ; },1
public void XQZXA8UG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VCRGE2FSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54e ( ) ) . badSink ( data ) ; },1
public void 8ZA78NRG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__PropertiesFile_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void 266EQ79Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 97QITFSG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void SR5CCVK ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__PropertiesFile_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void T51P1AG ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1GZJDQOG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__PropertiesFile_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String JLM78P2Source ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String 5922DLEG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 0K700TW ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_66b ( ) ) . badSink ( dataArray ) ; }",1
public void U9PQ1ZW ( ) throws Throwable { goodG2B ( ) ; },0
"private void DBALXBPG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void CL8OUF1Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void IH1U72IG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void SVWUPAX ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void QCHFC59 ( ) throws Throwable { goodG2B ( ) ; },0
"private void B2OOSDYG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void CH0SNNSSink ( CWE23_Relative_Path_Traversal__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3IUBY5FG2BSink ( CWE23_Relative_Path_Traversal__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void A20482E ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_68b ( ) ) . badSink ( ) ; }",1
public void O47U2QP ( ) throws Throwable { goodG2B ( ) ; },0
"private void BLNLPG0G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void QOBWQ27Sink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__PropertiesFile_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 9A71F8JG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__PropertiesFile_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void ZP6CUGK ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE23_Relative_Path_Traversal__PropertiesFile_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void E0DMPJV ( ) throws Throwable { goodG2B ( ) ; },0
"private void XMGVKD6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void IUY8ATPSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 6S3DPSFG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OQYH2SK ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_72b ( ) ) . badSink ( dataVector ) ; }",1
public void UFW9290 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FBBW2L8G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void NJ2QZKLSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void QJ2CXVLG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void YCC9TQT ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 9V9LPBH ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8LI72YCG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void 2ER3S4HSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 2JHUXH5G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OCP8660 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void C6K43KD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2GNA8G1G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void Y1NWJKLSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void OV8NXR0G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void OT4GJ73 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void R1C1NTX ( ) throws Throwable { goodG2B ( ) ; },0
"private void N9T5RVWG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 1GHWDT0Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void W1KA7ZDG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void TNXZZS0 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE23_Relative_Path_Traversal__PropertiesFile_81_base baseObject = new CWE23_Relative_Path_Traversal__PropertiesFile_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void M950MUD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6BNYQBXG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__PropertiesFile_81_base baseObject = new CWE23_Relative_Path_Traversal__PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void RP812ME ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 0ZYU1BS ( ) throws Throwable { goodG2B ( ) ; },0
"private void XOGTX3MG2B ( ) throws Throwable { String data ; data = ""foo"" ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void PK9EWXB ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void CVFNTPFG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void UXJ9Y9QG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void UQMZ74X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FZD7W2W ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void Y99VS09G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void VLMVAPQG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void GO84E60 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void P7XAG3I ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5206XGJG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void QMB3QQRG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void GG8R1N4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EBNMPJ2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void D3V5BY3G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void MPMQFCHG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void OW2VLZI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J4VDEWL ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void NL5CBWSG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void RQRRD5BG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 3EA7C4U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UE52DQ6 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void L8ZZQITG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void NNM5U9OG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void XAFZ4H0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KDMSWET ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 1E5XPT7G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void 62086S3G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void X72CF81 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MEEE3J4 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void G38TQUTG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void U5GCK9TG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 8OZUV6U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N6N0GZV ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void VW8HME5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void KUDBFDCG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void MXC5QSO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T3DKPGZ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void P6PD1TZG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void LPV9YP4G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 8H4TZ5U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YZZW8BY ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 0GF12TTG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void ZYKR2OA ( ) throws Throwable { goodG2B ( ) ; },0
"public void 259IC84 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 5K2X8M2G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void BBGRO7HG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void YXMTQ3S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YZ1PK8S ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void 48CQSS0G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void YITQDZ7G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 2PNSE7Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 92B5FDP ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void EF41RW8G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void AHOZZHVG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void PRJ8KUR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V41NT6P ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private void LTQ90JPG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void R30VONZ ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZVVU2BI ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
"private void HINY60BG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
public void 6T8A7ST ( ) throws Throwable { goodG2B ( ) ; },0
"public void J9EW7RJ ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 0W0WKEM_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
public void C4I9W4W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void CPRMHEVG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String PGOUO77G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void QO7Q43ZG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private String 3L38KB9G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 62Z2HUB ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__Property_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void 73AHEWG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void T2VZS1IG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__Property_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void UXVXNROG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__Property_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String V6LV9EOSource ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Property_22a . badPublicStatic ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
"public String Y7CAXLSG2B1Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Property_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String VKWNFJTG2B2Source ( ) throws Throwable { String data ; if ( CWE23_Relative_Path_Traversal__Property_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void CYE09L3 ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",1
public void LD3Y0B0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void B2LG4ILG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } }",0
"private void AY56XGQSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void QKMAR7K ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void 4JIUADS ( ) throws Throwable { goodG2B ( ) ; },0
"private void PIC669LG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void XF5MLS5G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String 1NR99FMSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public void NE1W6ZF ( ) throws Throwable { String data = badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"private String 959HXXEG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void EMNI6KHG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void P23TBCD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0T41P6LSink ( ) throws Throwable { String data = dataBad ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void D7SQ75D ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void ILYINNB ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3K8VQK5G2BSink ( ) throws Throwable { String data = dataGoodG2B ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void SEIKQHPG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void CGKVL7B ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_51b ( ) ) . badSink ( data ) ; }",1
public void GRI1WBL ( ) throws Throwable { goodG2B ( ) ; },0
"private void J2HA2LCG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 7HQ4BRFSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void QOLF395G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void W49LZNJ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_52b ( ) ) . badSink ( data ) ; }",1
public void 1OX1MON ( ) throws Throwable { goodG2B ( ) ; },0
"private void GXOTFWDG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void DG2UGA4Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_52c ( ) ) . badSink ( data ) ; },1
public void X7UW2AGG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void LQI60YKSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 0DI6WB9G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 158CB9E ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_53b ( ) ) . badSink ( data ) ; }",1
public void 3QADSKH ( ) throws Throwable { goodG2B ( ) ; },0
"private void VJANQ1QG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void BKHX365Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_53c ( ) ) . badSink ( data ) ; },1
public void E499G2PG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_53c ( ) ) . goodG2BSink ( data ) ; },0
public void OR5LUDSSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_53d ( ) ) . badSink ( data ) ; },1
public void 4ZQB338G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void XA9KF30Sink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void XAUO98PG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void GM5A56M ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_54b ( ) ) . badSink ( data ) ; }",1
public void WU84NI0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LT9NEX6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void A4QB0DFSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54c ( ) ) . badSink ( data ) ; },1
public void 4LPJQ9YG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54c ( ) ) . goodG2BSink ( data ) ; },0
public void EH1IKYESink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54d ( ) ) . badSink ( data ) ; },1
public void KP1757NG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 2DVHQH7Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54e ( ) ) . badSink ( data ) ; },1
public void 07AEPPEG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__Property_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void G8FEK6PSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void E9NXDKLG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 6PPPWQQ ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__Property_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void R8WTHUJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0626IZZG2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__Property_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public String 9EZIO4PSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String KXY7OF4G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void Z0GAW9M ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__Property_66b ( ) ) . badSink ( dataArray ) ; }",1
public void WQR3SCW ( ) throws Throwable { goodG2B ( ) ; },0
"private void M4R4DJDG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE23_Relative_Path_Traversal__Property_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void O7W5UAESink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 8FWX2FDG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 1V7QP82 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__Property_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void CEGU3JT ( ) throws Throwable { goodG2B ( ) ; },0
"private void G4T83RNG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE23_Relative_Path_Traversal__Property_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void Q7ON3ZESink ( CWE23_Relative_Path_Traversal__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 1I9M4S3G2BSink ( CWE23_Relative_Path_Traversal__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void FZ1XBIE ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_68b ( ) ) . badSink ( ) ; }",1
public void IGMG9A9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void WXM72QMG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void EAVLER1Sink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__Property_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TMUKBEWG2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__Property_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HHQZ5GY ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE23_Relative_Path_Traversal__Property_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void UIC8W9T ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9B192NCG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE23_Relative_Path_Traversal__Property_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void NAHPFNBSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void RMJN7ETG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void W13CDS9 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_72b ( ) ) . badSink ( dataVector ) ; }",1
public void ITFCI6I ( ) throws Throwable { goodG2B ( ) ; },0
"private void 11DC91WG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void SEEQIV4Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void CEAW4LGG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void G4Y1TMU ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void UMTDYDA ( ) throws Throwable { goodG2B ( ) ; },0
"private void OZNFQDQG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void BVI5WO9Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void X0AXPHZG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void TMDI0JB ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void B1ZFKDB ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8NPIRU0G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE23_Relative_Path_Traversal__Property_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void AZKOYNOSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void AMTJMBDG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 6BU4LHZ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__Property_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 1O0MDXE ( ) throws Throwable { goodG2B ( ) ; },0
"private void T74ZLQSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE23_Relative_Path_Traversal__Property_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void K32GOTJSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5T1P1UXG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void K0E5QAC ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE23_Relative_Path_Traversal__Property_81_base baseObject = new CWE23_Relative_Path_Traversal__Property_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void EO8V5KA ( ) throws Throwable { goodG2B ( ) ; },0
"private void D2ESYR0G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE23_Relative_Path_Traversal__Property_81_base baseObject = new CWE23_Relative_Path_Traversal__Property_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void I0WYZ6V ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__URLConnection_22b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void SMXUKEC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void YVY2YG6G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE23_Relative_Path_Traversal__URLConnection_22b ( ) ) . goodG2B1Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"private void HWMNBKOG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE23_Relative_Path_Traversal__URLConnection_22b ( ) ) . goodG2B2Source ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void KHKAYOWSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void OERKVIPG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void XNBCIQ8Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_52c ( ) ) . badSink ( data ) ; },1
public void K6F7OO4G2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void UE4XWEPSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void AE7JBQGG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void E3E6GQISink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_53c ( ) ) . badSink ( data ) ; },1
public void EM7EA9JG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 53FE7B6Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_53d ( ) ) . badSink ( data ) ; },1
public void BWFJ0MHG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void MVMS66XSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void F1CZO0YG2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
public void 6USDQ9OSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54c ( ) ) . badSink ( data ) ; },1
public void ZSZOPRNG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54c ( ) ) . goodG2BSink ( data ) ; },0
public void G5YAVG5Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54d ( ) ) . badSink ( data ) ; },1
public void OBOL9JIG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54d ( ) ) . goodG2BSink ( data ) ; },0
public void W3R0PU7Sink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54e ( ) ) . badSink ( data ) ; },1
public void 783IK1ZG2BSink ( String data ) throws Throwable { ( new CWE23_Relative_Path_Traversal__URLConnection_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void QHVJEIPSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3GVQ0K2G2BSink ( String data ) throws Throwable { String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HA7F79S ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__URLConnection_61b ( ) ) . badSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
public void I9AX5C3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void XTZ69W8G2B ( ) throws Throwable { String data = ( new CWE23_Relative_Path_Traversal__URLConnection_61b ( ) ) . goodG2BSource ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 8YMBECRSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 97WA6CUG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void 1372TUHSink ( CWE23_Relative_Path_Traversal__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 5SOONGDG2BSink ( CWE23_Relative_Path_Traversal__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void Q42JC1JSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__URLConnection_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 3L0HQ26G2BSink ( ) throws Throwable { String data = CWE23_Relative_Path_Traversal__URLConnection_68a . data ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void ZCA4B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void IJPDBO0G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void HU1482GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void 4IQPAZ0G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void QRKR7VDSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void TZ1V4ZLG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void I257729Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",1
"public void X17MG5RG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } }",0
"public void THSLO4ZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 10Q83BQG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; String root ; if ( System . getProperty ( ""os.name"" ) . toLowerCase ( ) . indexOf ( ""win"" ) >= 0 ) { root = ""C:\\uploads\\"" ; } else { root = ""/home/user/uploads/"" ; } if ( data != null ) { File file = new File ( root + data ) ; FileInputStream streamFileInputSink = null ; InputStreamReader readerInputStreamSink = null ; BufferedReader readerBufferdSink = null ; if ( file . exists ( ) && file . isFile ( ) ) { try { streamFileInputSink = new FileInputStream ( file ) ; readerInputStreamSink = new InputStreamReader ( streamFileInputSink , ""UTF-8"" ) ; readerBufferdSink = new BufferedReader ( readerInputStreamSink ) ; IO . writeLine ( readerBufferdSink . readLine ( ) ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBufferdSink != null ) { readerBufferdSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStreamSink != null ) { readerInputStreamSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInputSink != null ) { streamFileInputSink . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
