input,label
"public void O4SDMCN ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 4F6PPRZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void BPLTLD2G2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void PZRDEHC ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CH3LKSIG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void OIIWEQRG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void AG75K99 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 151HOMQ ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PUU5A7AG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 87KBPZWG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void SBHWSXI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4ZQMK59 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DSV0KFAG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void PC3KQDWG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void SCGUDKS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JBEW2K4 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void RL3F7SBG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 03K4KFVG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void VVTAQ3X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H0HVV9W ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void R6S3HVYG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void RVMD5S3G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void EBLPAUQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZRBF7MY ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void V17AE0YG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void YYJVS1NG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 46GC5T2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3L74WKV ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void W9WJG62G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void V8X1MCAG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FXOO97R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LJUOH1N ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void U8AZ3PXG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void YR31TCJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 2ME4TPA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1S9675G ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 3Z5T4HMG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void O5RLAO1G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void AJZKW87 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SOSW9IK ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void SYBOD4ZG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7T8HIDNG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void QI5PBCW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C7KV50Z ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 9RB360EG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void QS994RR ( ) throws Throwable { goodG2B ( ) ; },0
"public void SLWN0JM ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CKI5KB9G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void TKJJISEG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 7VWN6YZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5UTIXP9 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void Q3WOBLUG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 2OLDKMLG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 3HTTAVK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CT2SD15 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void MYZPS9BG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void XWUBQT2G2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FKCY2TX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TSZ1161 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 7U63EJRG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void Z7SP1H9 ( ) throws Throwable { goodG2B ( ) ; },0
"public void M6YQS8G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void EGCEILHG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void P9AUFUV ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZJMYE08 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String B2LXTB9_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void PJQP0HF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void RIDB6TKG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 40HXKGOG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void GK98NC9G2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String GKXGLJ3G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void GNXUIIU ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void VV08IK1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void VVUD3YSG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void M12DLD7G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String FTO82PXSource ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22a . badPublicStatic ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String 3F9GVI6G2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String UA3TEG4G2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void ZV6QVFA ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void E9Q9JRL ( ) throws Throwable { goodG2B ( ) ; },0
"private void XPL7SDFG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void LPRCM06Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void DQO1EWI ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void MOMUWLA ( ) throws Throwable { goodG2B ( ) ; },0
"private void NW71URBG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7W4TGRPG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String XF65OM6Source ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public void 1MEDVFU ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 29IMZY0G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void K1RSCUTG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FA0BFJQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5FC9SCFSink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SVAXVP3 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void EYKHIKA ( ) throws Throwable { goodG2B ( ) ; },0
"private void C1ESSJGG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void NB3AET4G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void YVYQ4QP ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void T5TMLQM ( ) throws Throwable { goodG2B ( ) ; },0
"private void R3CVIBSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void P78HYZ3Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void COH69GMG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void I60G1BF ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void 5BUHLVY ( ) throws Throwable { goodG2B ( ) ; },0
"private void F708OHXG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void WPM4SSXSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_52c ( ) ) . badSink ( data ) ; },1
public void QNGRJSMG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 5E4YCASSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void R828JSNG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZY77PAE ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void AL1Q5PQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void QEJXSIEG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void 7RJQM5ESink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53c ( ) ) . badSink ( data ) ; },1
public void BOQBYXDG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void TLENUQYSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53d ( ) ) . badSink ( data ) ; },1
public void L09ZFFCG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 0012KAVSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void Q4VAXHFG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 08BSPAH ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void 3LXUNXK ( ) throws Throwable { goodG2B ( ) ; },0
"private void F6WEBV6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 3J55BTZSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54c ( ) ) . badSink ( data ) ; },1
public void Z9TJ303G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void MTUWD1DSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54d ( ) ) . badSink ( data ) ; },1
public void XZYWRSCG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 9A3E4MWSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54e ( ) ) . badSink ( data ) ; },1
public void BB8500DG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void SQAHD5LSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 0GJ6JMVG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void AS2XR2M ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 3GQOL00 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9ACIBLDG2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String NRAQ9ISSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String K6IIVCQG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void V5T6722 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 63ILP2V ( ) throws Throwable { goodG2B ( ) ; },0
"private void TP4JAP2G2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void XLHMNGTSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void IPJ79U6G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WL9NZYX ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void J3MGS50 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GNY4KH0G2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void NIQO7CISink ( CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 35R6F3BG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void D5MTEL0 ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_68b ( ) ) . badSink ( ) ; }",1
public void BYPOBRO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3WK89SOG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void GX72Q36Sink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 1001T9ZG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void VBDFI1P ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 7DLRR76 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LX227M1G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void VMHD13ESink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void OSYV2QRG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 4D680RY ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 3D6HD82 ( ) throws Throwable { goodG2B ( ) ; },0
"private void YBO2153G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void CU5DTUOSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void GAKHQJHG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BPNPPKH ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void VUQC91S ( ) throws Throwable { goodG2B ( ) ; },0
"private void CG3R2WHG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void 0DR9E7VSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void QHCALU1G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void V0YBFQL ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void PXXHZQQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void USWGLC7G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 742KBV4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void EOTWYQ4G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6P7M1WN ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void LGZ5WU4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void YCL01JMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void BR7E1DWSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 0RQR4A0G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void MGTW953 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void ZI7APIM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8X4NR90G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__connect_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void FF77LIE ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 0QG5XGQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9Z7C05MG2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void RNB3N3L ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void BMOEV97G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1GECVFVG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void CU68N3G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0IP8VGF ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PJNUEA1G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void G4B79MCG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FLQT02I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EABR0TB ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void NMUNI74G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1ZHJ40HG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 3SHLKJK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FOUN5OP ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void FCKKRFLG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4V8014NG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void IW7IU1B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2G4Q8BM ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void KS4D6YTG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 5ZSYUV4G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void RY9UBVB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O8ARO3T ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void NTAY4LIG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void HFU8DNKG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void WMMPIJ6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YFRX0G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 6Z8JXBNG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void FPPGJTUG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void XLT06KP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void T3FQYYZ ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void HWNQ3J6G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1WZQMFJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void BYU29UI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 35QPQZ9 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void N4UOFFTG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QQG16T3G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void F4VLAYC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WEVO52M ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 5KVKIQ1G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void ZBHLLBRG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 406Z56C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HKDQNE7 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 4QQQRJMG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void GQ5X8KH ( ) throws Throwable { goodG2B ( ) ; },0
"public void XCX42EJ ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 5JSDAN4G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void I0KQYX2G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 9GBW2ZE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0EXA57T ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ENUQF1RG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void K1WQZ0RG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 5ZRISN9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HYK0M68 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 6T3CZLPG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4PXLWALG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 2YEXUUB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A36Y7CO ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GRX493JG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void J12KLVI ( ) throws Throwable { goodG2B ( ) ; },0
"public void HK7HD4Y ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void Y89MJ68G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void FGCH6WD ( ) throws Throwable { goodG2B ( ) ; },0
"public void QPIEA2I ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String TRUSYW9_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void QYZM5DN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void HB9PNTEG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String ODI98Z4G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void UV3SWIBG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String JNYODQXG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void NF2E4IW ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 889PE8R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void I3163JDG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1M09BPPG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String HZ57YV9Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22a . badPublicStatic ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String W7D38AQG2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String DCST8Q7G2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 4MPBMWU ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void 2S57D3P ( ) throws Throwable { goodG2B ( ) ; },0
"private void TCIQ932G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void JM5E2PBSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void Y236STC ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void SB24P89 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1WNT2GWG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 338X4WPG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String DFXHLLFSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public void IU3GXNK ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String A8Q8F5IG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void XYK8T45G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 1PWT27L ( ) throws Throwable { goodG2B ( ) ; },0
"private void WB0LBDTSink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5OOYDPF ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void SUWQM7K ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8C3BXXYG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void H0P9H5RG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void HJRS97R ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_51b ( ) ) . badSink ( data ) ; }",1
public void 5Q0426I ( ) throws Throwable { goodG2B ( ) ; },0
"private void U94GLEDG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void JK4PVI6Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void D8PCRTUG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 1MGD2SH ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_52b ( ) ) . badSink ( data ) ; }",1
public void KEP1CZ9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8872Y0JG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void CX3B6Q3Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_52c ( ) ) . badSink ( data ) ; },1
public void 8715O6RG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void P8R75L4Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 97IXXEXG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void NYXVK0E ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53b ( ) ) . badSink ( data ) ; }",1
public void 3R2FOGH ( ) throws Throwable { goodG2B ( ) ; },0
"private void O4MWFFUG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void CA9CY3XSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53c ( ) ) . badSink ( data ) ; },1
public void Y151THBG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 4DNTL80Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53d ( ) ) . badSink ( data ) ; },1
public void NE1RN8XG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void CGD9A09Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void HMOV1D6G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void GNI967B ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54b ( ) ) . badSink ( data ) ; }",1
public void 029MWHK ( ) throws Throwable { goodG2B ( ) ; },0
"private void WHP5P0DG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 5O8TBR4Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54c ( ) ) . badSink ( data ) ; },1
public void XH5QGWUG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54c ( ) ) . goodG2BSink ( data ) ; },0
public void M7URJCSSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54d ( ) ) . badSink ( data ) ; },1
public void E0UB4OAG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54d ( ) ) . goodG2BSink ( data ) ; },0
public void HCFI6XISink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54e ( ) ) . badSink ( data ) ; },1
public void B28T7MCG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void YB5UGXJSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void G9ENZS8G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XREGW0K ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 7UX4K4N ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1P6ZJ56G2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String P50MOV9Source ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String V43EOHAG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 48TEDZW ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_66b ( ) ) . badSink ( dataArray ) ; }",1
public void RIJ0Z0L ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0PJ0QBNG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void NU970A0Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 3SA83XNG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7Y30B03 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void BGLGQDH ( ) throws Throwable { goodG2B ( ) ; },0
"private void MORQ941G2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void U5RHJQESink ( CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void VKAD32ZG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void RKENUSP ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_68b ( ) ) . badSink ( ) ; }",1
public void 4953EMH ( ) throws Throwable { goodG2B ( ) ; },0
"private void QGMBDJGG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void QUJH7CQSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 4M6MFD3G2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 082VIOR ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 5VRQW83 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GUPWBYTG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void KD53QJ5Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void C4AOWPBG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KX6DRAS ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_72b ( ) ) . badSink ( dataVector ) ; }",1
public void OPN8TKD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1976DFJG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void IIMGZAASink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 6B29JTGG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 8JFBP3N ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 7ACHJPA ( ) throws Throwable { goodG2B ( ) ; },0
"private void L8FF2CFG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void JY217M6Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void CRRNESCG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void JYAFAAP ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void ZQNDVGD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7JD7LZ3G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void GNNENKVSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void POGJVE7G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void K4EDMW2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void LVD99OU ( ) throws Throwable { goodG2B ( ) ; },0
"private void RK6JN0HG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 7BI3VFGSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void DEOANU6G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void HK808TB ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void CHC2RLJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void Z65D8SNG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__console_readLine_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void ZMXAZRZ ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 59KALK1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void OKIDJV1G2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SRFF1DC ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void KX89DRVG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void FRI3D4EG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void E3YXXTK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SSL6A5P ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GVKVF9EG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void INKFVHRG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void H34LVM4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K3N1TAP ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void KGCYMAKG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void C4QXY9UG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void C1IY8OD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V3DWPRY ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void J55R9NBG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1HAMM1WG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 2FM6ANL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3DS51S5 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void N3087CWG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void CTYHX7ZG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void OZF2HE1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AQ5X004 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CDHTUI6G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void PH6LJQXG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 546XR1D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NZ335W7 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 1XTP727G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 51IVAZ1G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void BAUI52V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PW8666W ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void SMSA10JG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 192F4PLG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 8TD88SV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WIO14XR ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void P5WSII4G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 6UUX3R1G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FCA8YZT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M27O7QI ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void QPIFE8TG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void WUZNMU7G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void ZHPFGS3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JWETB5V ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void TOFK9XAG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void QBBK4RZ ( ) throws Throwable { goodG2B ( ) ; },0
"public void EVXOBRP ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 0KGY0J8G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 9RMHO8FG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 06A2ANO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BEZTATX ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 3JV9CI9G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4E867MBG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 1RZKG4P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I56CVWI ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 0J1HNMIG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void E0ITEYYG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void ENMA8A8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WBV9353 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void K7LC72DG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void ZIE119D ( ) throws Throwable { goodG2B ( ) ; },0
"public void Q1IIER8 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void ZF9FXATG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void JQGI07U ( ) throws Throwable { goodG2B ( ) ; },0
"public void Y26FK3E ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String FDP50TQ_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
public void GGAL69Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void YQLYJMPG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String YDABHVSG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 9QG7PMJG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 4FUO1Y8G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void HFQQC6M ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void HJQUUBO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 5EIGNF0G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QLJF3HYG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String GHC6JNVSource ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__database_22a . badPublicStatic ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
"public String RN4OFJHG2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__database_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String T8R3LK3G2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__database_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void HCJ66OY ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void 4N1OAJY ( ) throws Throwable { goodG2B ( ) ; },0
"private void OYD7OC3G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void D1HO1USSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AECL1B8 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void RORGS9R ( ) throws Throwable { goodG2B ( ) ; },0
"private void VM30O8JG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 6B6Y9O4G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String 1JKOV75Source ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public void NAF89V6 ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 2IU3MLLG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void H8QJQ0BG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void TDJHEIH ( ) throws Throwable { goodG2B ( ) ; },0
"private void MRK146FSink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void HV8QDFI ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 4BU87MC ( ) throws Throwable { goodG2B ( ) ; },0
"private void JL16YQTG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void DBU5CSHG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void DEMS91H ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_51b ( ) ) . badSink ( data ) ; }",1
public void 870HS2M ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3M4JEMMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 96PZW13Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void WEY7XD5G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 8E7M6P6 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_52b ( ) ) . badSink ( data ) ; }",1
public void KFTQMNR ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9035FRKG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void YR3ZLJNSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_52c ( ) ) . badSink ( data ) ; },1
public void NWRVP3TG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void OU4DE9PSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LUCWZ8FG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void RGFZAR3 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53b ( ) ) . badSink ( data ) ; }",1
public void 5564GMM ( ) throws Throwable { goodG2B ( ) ; },0
"private void FLLTFADG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void VYGJWE4Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53c ( ) ) . badSink ( data ) ; },1
public void R9PF3AZG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 8W61A8TSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53d ( ) ) . badSink ( data ) ; },1
public void DBJFD9BG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void K8DV9RPSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SDCGIXTG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void H0MREGL ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54b ( ) ) . badSink ( data ) ; }",1
public void 6HN8FOI ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7WSISTEG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void U9UC0VDSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54c ( ) ) . badSink ( data ) ; },1
public void K4HXGV4G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54c ( ) ) . goodG2BSink ( data ) ; },0
public void T770GJASink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54d ( ) ) . badSink ( data ) ; },1
public void X7ZCPMYG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54d ( ) ) . goodG2BSink ( data ) ; },0
public void A42RJ7HSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54e ( ) ) . badSink ( data ) ; },1
public void EBZOIQDG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void JBUHAEGSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 369KJT2G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void TMVPUBY ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void PCIN4BP ( ) throws Throwable { goodG2B ( ) ; },0
"private void PZS0JUKG2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 871AGPUSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String EDP4UWTG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 16AWSVL ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_66b ( ) ) . badSink ( dataArray ) ; }",1
public void TT4ANYM ( ) throws Throwable { goodG2B ( ) ; },0
"private void H25PZPYG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void WOZK7EVSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void KS151QDG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5PDCOUP ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void Z9Q4XLT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 16W6Z65G2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void MJO2MUGSink ( CWE15_External_Control_of_System_or_Configuration_Setting__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void V7W4QF9G2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WJHM9AW ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_68b ( ) ) . badSink ( ) ; }",1
public void M1GW5UM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 418PDFFG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void BMLEHR7Sink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__database_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void HH65T4IG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__database_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SDFP5NN ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 11WYRF6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void VKUNM9SG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void OR0PQ4JSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SRN34WKG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void HY2QJFP ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_72b ( ) ) . badSink ( dataVector ) ; }",1
public void FG3QUZ9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void D0EIIPVG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void FJGLIAXSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void J7OK0I7G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7XWUTGC ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 1R942KF ( ) throws Throwable { goodG2B ( ) ; },0
"private void XFHHDDGG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void FFWLT2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 9XSRPN0G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BI4IFG1 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void M4TWDD4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void ASN99YDG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void H9RK8UVSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void Q8UVYD7G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 9FPM730 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 5288QIH ( ) throws Throwable { goodG2B ( ) ; },0
"private void O5OJQ0IG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__database_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 2F0W6C7Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void JJFG9O4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void A8ZM96A ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__database_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__database_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WRZ3Q53 ( ) throws Throwable { goodG2B ( ) ; },0
"private void QK2QJ19G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__database_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__database_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 3IA3O99 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 794Z2AH ( ) throws Throwable { goodG2B ( ) ; },0
"private void SRWCGNBG2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZK1XUBE ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 8QMOO94G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void ES3QP81G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void MIX2R23 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CW04W4Q ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void BQUOJHHG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void CJZP55LG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void N07IJMN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CLYF5OM ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 7BXN6R9G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void RQK81CVG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 1QBNGJ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I230P8H ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 2LJ9EA5G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void OAOVV4KG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 6WM4GI5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JXQ8LLJ ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void KZER9UCG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void S8ZZJ2SG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void WA0MD12 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MNT72QU ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void U6RBDS5G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 8BEV879G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void QYZ2OSV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N5II2OU ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void WTQKEZFG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void O8VY116G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 96TDD4B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MM9F83A ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void FFTVUHWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void PO7ISDOG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void VBM0M90 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZZWBO5V ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void VDXMQGCG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void TJ60S8AG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void JH9PGY4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MEBSA4Q ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void YZ7KQDFG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void NYDKKL6G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void BG6AS8A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MGUWVMK ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void B3I202JG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 4LKRV2R ( ) throws Throwable { goodG2B ( ) ; },0
"public void BQCQ9MC ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 3TR9SQ7G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void E25JSE5G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void RQEBIA0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MWGTR5C ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 2DHSYH7G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 71X97XMG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void VPY3V00 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4Y2VXJW ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void L0PFFI1G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void O64XXWBG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 158HX0F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1QOR18F ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 2IHKHI8G2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void KJ1ZFZ3 ( ) throws Throwable { goodG2B ( ) ; },0
"public void N2RTV2C ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void 747DWIKG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void 11YLLII ( ) throws Throwable { goodG2B ( ) ; },0
"public void 5M8872Q ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String RJFAG3S_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
public void 8QV61G2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void U91E7IVG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 3DXCX64G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 39APBILG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 2U8SRRHG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void D86RPPU ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void ZMVK16M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void SJYZSG3G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 2GVNN2AG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String I7Q8HUUSource ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22a . badPublicStatic ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } return data ; }",1
"public String T3APOC5G2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String SH8HZTRG2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Environment_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 1MDU7FI ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void F83IJ47 ( ) throws Throwable { goodG2B ( ) ; },0
"private void BWX0HE4G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void VFUKEIESink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LBJZV53 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void WCDLZ65 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1CFVN9PG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 6LMH02JG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String LULDQE7Source ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public void 6HI8UN4 ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 7BNCKK4G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void Z0RD9FNG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FY3YZ6B ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1P67JHGSink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 7SDEF3W ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void IASALOW ( ) throws Throwable { goodG2B ( ) ; },0
"private void STMMCAXG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void LBDR29CG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void FDU4366 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_51b ( ) ) . badSink ( data ) ; }",1
public void PAK6W76 ( ) throws Throwable { goodG2B ( ) ; },0
"private void WEHXQS5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void CAAZTZVSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AH1REGJG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SA5UAP8 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_52b ( ) ) . badSink ( data ) ; }",1
public void J8Q68UR ( ) throws Throwable { goodG2B ( ) ; },0
"private void CUY8V0BG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void O2QG8K4Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_52c ( ) ) . badSink ( data ) ; },1
public void Y2W0SFIG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void AE28TV0Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void FPI6S53G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SPU6J85 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53b ( ) ) . badSink ( data ) ; }",1
public void HT4L508 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MXBXEC7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void B199PNKSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53c ( ) ) . badSink ( data ) ; },1
public void XYZTDDEG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53c ( ) ) . goodG2BSink ( data ) ; },0
public void N6HAGIUSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53d ( ) ) . badSink ( data ) ; },1
public void CQX2J1QG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 56NDI04Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 1AMBGOMG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZFDZWDV ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54b ( ) ) . badSink ( data ) ; }",1
public void V719XAJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void JSBB7DSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 7GL0IKKSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54c ( ) ) . badSink ( data ) ; },1
public void EWLXI6IG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54c ( ) ) . goodG2BSink ( data ) ; },0
public void S2T7FVYSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54d ( ) ) . badSink ( data ) ; },1
public void SWANN1FG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54d ( ) ) . goodG2BSink ( data ) ; },0
public void PO38V75Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54e ( ) ) . badSink ( data ) ; },1
public void YNAKUTHG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void 4JB1WASSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void TPJ16M2G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void GF2NY4P ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void OHFVBM3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void IQJSYY1G2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String F4TO9H3Source ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String 66OHNEZG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void YTULNFX ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_66b ( ) ) . badSink ( dataArray ) ; }",1
public void G9ZSIMP ( ) throws Throwable { goodG2B ( ) ; },0
"private void L6W14L3G2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void DVYH5APSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void YTQ7ORIG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void DP9NRZT ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void I0J2Q16 ( ) throws Throwable { goodG2B ( ) ; },0
"private void IMON0JPG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void I8A1SFPSink ( CWE15_External_Control_of_System_or_Configuration_Setting__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void BT247F4G2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 62X96ET ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_68b ( ) ) . badSink ( ) ; }",1
public void U39UVVE ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3IYTYOLG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 2E022X8Sink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__Environment_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void JBJWWOAG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__Environment_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void JYYI7XG ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void E6UUIML ( ) throws Throwable { goodG2B ( ) ; },0
"private void CVVX5TCG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void 9OAZIBVSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 10V7TX1G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void D6W5TXT ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 8SE0TAF ( ) throws Throwable { goodG2B ( ) ; },0
"private void CMTIYO9G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void HZG5X47Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5OULWPYG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KHGXFIO ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void XGFV0A2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 811S8W7G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void S5DX3AFSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void IK55A9CG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XRGWT3D ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void P8RBQJS ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9H2WBPNG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void C72EI7CSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 4NVEPT2G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void QNI07AG ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 9Q6U2RU ( ) throws Throwable { goodG2B ( ) ; },0
"private void DS9RDSLG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HUUJLIWSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 2OAYIFOG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 3ABIV9X ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE15_External_Control_of_System_or_Configuration_Setting__Environment_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 3LL0ETK ( ) throws Throwable { goodG2B ( ) ; },0
"private void 15QWSDFG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__Environment_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__Environment_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 2GXCQTO ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void F5MLVBA ( ) throws Throwable { goodG2B ( ) ; },0
"private void 76P3Y8NG2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 0A1FQM2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ZO6UUJDG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void T4VJELRG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void DTQ56VN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YU6SMGN ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PMETBCSG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void PG7LV1MG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void FNGAW70 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FKBTD0A ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void EK1ZCE7G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void FAOQS4ZG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 9R07RNG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PWPHNXC ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void MZG2SPMG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 047TN19G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void V1UW4LY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UUPN03M ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PHDC164G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 16PUXBBG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 2E1KRT9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DKWSDN4 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CD4IIEFG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void XVOYJ3YG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 5EVXPOB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9B6E0ME ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void RKQYJGSG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4M1DZ6WG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 5F03577 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UU58H0F ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GO8CRE5G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 25BPPXZG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void QM5GL8Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G60P6BW ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void WH2EYT4G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7K7OYYAG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void XTZ53Q5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8UM1ZFF ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void XHSEYLZG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void E3PROXDG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void E3B4779 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DBKOANS ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void BDFWJ5WG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void AX21ZKW ( ) throws Throwable { goodG2B ( ) ; },0
"public void AXRG9UO ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 0QQ41TWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1OD75O5G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void W74HK15 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G1MX4SU ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void QFN66LQG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void URKT6FAG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 3CXFPRL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7OC32JY ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void TUC0RMJG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void HA5MYOJG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void SRUC1MB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NIFVFVQ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void XF69PYPG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void T543CBE ( ) throws Throwable { goodG2B ( ) ; },0
"public void M6YB2L5 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void 5W39Z41G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void 88RWOUU ( ) throws Throwable { goodG2B ( ) ; },0
"public void ID4LN9H ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String YU98YJC_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void 0NJJN2T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void YBAZT6JG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 0L5T0FZG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 4C2SUC1G2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String RAJEO6SG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void CBF2084 ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void J7W95MD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void GZG5BH3G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void JW1AEUIG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String L3XDUT6Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__File_22a . badPublicStatic ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String AFXF08FG2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__File_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String 0NXJ22QG2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__File_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 0HUJY1S ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void TG7O8K7 ( ) throws Throwable { goodG2B ( ) ; },0
"private void T4MGSXLG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void O9IVIS8Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 53LTZ70 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void LKPDVWS ( ) throws Throwable { goodG2B ( ) ; },0
"private void KGJ98R4G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 2KGXAJHG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String 3BRTWO6Source ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void PDK9M3C ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 39QPFDXG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 6RPUW86G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void VZC1OYI ( ) throws Throwable { goodG2B ( ) ; },0
"private void GTTQ0OLSink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void JJWXUU6 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void BJT5D2C ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1Q9Q2JSG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void XDTDA40G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void 64B7236 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_51b ( ) ) . badSink ( data ) ; }",1
public void Y4253JO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1D9LBB1G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void A2I4M5LSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void MLPVWEVG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 2MBADPX ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_52b ( ) ) . badSink ( data ) ; }",1
public void E7QG3XX ( ) throws Throwable { goodG2B ( ) ; },0
"private void FH8LFOHG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void J98UDUHSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_52c ( ) ) . badSink ( data ) ; },1
public void GC1NRR3G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 2M39JXOSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SET9ZBOG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void A4PAS8E ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53b ( ) ) . badSink ( data ) ; }",1
public void 09WXZ7T ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1SR4KM6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void AIIJ9OCSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53c ( ) ) . badSink ( data ) ; },1
public void IPT4TLRG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53c ( ) ) . goodG2BSink ( data ) ; },0
public void E4C8M0GSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53d ( ) ) . badSink ( data ) ; },1
public void 1ZOONK1G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void 2AM1M9TSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5GCLZ4GG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6B3ADF5 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54b ( ) ) . badSink ( data ) ; }",1
public void VRQPKV6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6329RJZG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void RF4JDO2Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54c ( ) ) . badSink ( data ) ; },1
public void D9Q8GRIG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 88TKJQ9Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54d ( ) ) . badSink ( data ) ; },1
public void 9CMWPPKG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FCWFD5ESink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54e ( ) ) . badSink ( data ) ; },1
public void 153DFO8G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void VO7RWH9Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void RJ291PCG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 9018QX4 ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void R4IU78Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void N7CTFO7G2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String Z8GSHQXSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String 3SBXEALG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void NZ4402R ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_66b ( ) ) . badSink ( dataArray ) ; }",1
public void HI1B5QK ( ) throws Throwable { goodG2B ( ) ; },0
"private void LITHW4HG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void 3G9DDITSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SRBJYAFG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 3S4GBK8 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void ZRA2L06 ( ) throws Throwable { goodG2B ( ) ; },0
"private void VYYA6HUG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void OW4ZEU3Sink ( CWE15_External_Control_of_System_or_Configuration_Setting__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void ZN4W5XUG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void C9YCK7Q ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_68b ( ) ) . badSink ( ) ; }",1
public void EZ0K1UO ( ) throws Throwable { goodG2B ( ) ; },0
"private void P6QQWUXG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 24D0ZGXSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__File_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 1G7IYLFG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__File_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 01AG725 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void U11R9A9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CLNU12PG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void Q1W5UBISink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void MV9QEVLG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5B60HF7 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_72b ( ) ) . badSink ( dataVector ) ; }",1
public void PHB84AM ( ) throws Throwable { goodG2B ( ) ; },0
"private void L3EESUJG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void 48SSUJ1Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void KDE0SYNG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void E7W0GEW ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void INC8YOC ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8HFWDVIG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void JJV8875Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void R6ETXOTG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void NTSGAYL ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void PCT95LE ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8GPAGDPG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void RIJ49A6Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void W6XARSOG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7M7JJ0L ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void S5C3240 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 817IOKSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__File_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void KPN321XSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void S86R7YHG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void GF1PYNP ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__File_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__File_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void DBWHKGS ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9ODD8Z5G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__File_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__File_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 13QGY7U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void PGCJ2CG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 55R974EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void O01CV5M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ZS10XUQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void BI4MJHIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void DG4509E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AJL587L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 8ZNLGY7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 93VK3PGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 313A4OD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NBOPBTO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CBXCRJFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 5CV02QCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void YFDSHYJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 56ZGVTH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 6UG1ITOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void FAI8L3AG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void IQ3PSO0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WODIH6U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PEN7H91G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void DX72J9ZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void FI96JX5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void S2EXT53 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void JIU1NQYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QUR29ANG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void LA75PY7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void A45A3F6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DOB331VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 55MD3P4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KKA5MWI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6E5M3XY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 82WLWI0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void XSIUNN2G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void UI6MO76 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void S8EC8NG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void LUPKRGQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void G3XYSJSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 1194YBP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 96RR9ZL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ZCL2OYNG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void SSLRJX9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void MKH49X1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 497EU28 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DC0PNRRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XC2HRYP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void UNNXTH4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 1LZ81R5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void OC0PLRUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void K4AHLKI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AXG33DR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DXXQJ0HG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1CR6FRBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void X9EGWV9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void M8BHDDG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 8YLWY0TG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1447025G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KFNQCBH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ES2YXNE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 4CJHS1YG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 89T8FL1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void GPPLLRR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void AK9UYHBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"public void SU57YO3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void W6M4R2L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String UZZ0IWH_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public void 4G0RFAP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void A80RZ0VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String TZA90XRG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void UFEKD0MG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 3CBQDP3G2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void P23KKBM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void EQ5AZQH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void HW7SUU7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4RXUHZZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String GO06HRWSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22a . badPublicStatic ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public String KJSB24SG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ZZ33IP0G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void FBSUP4K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"public void Z4I4NFT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 88V5LDCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void V1G6UO6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 6UFRD4C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badSink ( data , request , response ) ; }",1
"public void RAVO35A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void M6MZFX4G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void SVO2QRGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String W483C02Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public void XMJHF47 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 7GGAOEYG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void C33SE0KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BSKRFU3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 17M37NESink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 3X0JP0B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void HNO57QU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YWQ7KTJG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void Z9XSAQNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 7TORGV7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void A3YCR2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 30IPNV5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void OPJ89SGSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5H5MHXAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void W2QC99Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void EPW4Y9K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HR95FHYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 54KB1E8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void YE80K57G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void RY68R4QSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 08O0TECG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void OTCAIME ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LU0G8GG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 13F6N7IG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0ZSOSJTSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void DT1ZZ7BG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 1XVJODRSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4OPVPMJG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ZJLDIDOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AE6Y83TG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7KATT2X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void V2X7CA6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MWCCPSPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8I9XMZ6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void C259DPWG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TVNP4FISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9SAVQS7G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CV4VZT1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void H8SK86UG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KR2MB3LSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void EGQAWPDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 4C3LQNA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_61b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LZ87Z3Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 28362LLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String HY65C3ISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public String 9GLKDHUG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 1U37SG5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void PHUL63I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QILFQJ7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void GN8MTUHSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 50ARKJ4G2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WLOJNT2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 065DUZZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void A5K7L2AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 4KW25RFSink ( CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void C0X9N7NG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void JK50W9A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void S03PSLE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VENZ91EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 589XBZGSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void WU08NOZG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void X9WA8MH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void QPNQE7R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RXQWP74G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void LQV3FDQSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void KKZ62L2G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void P51LO1V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void H5HAMC7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void M4JY2W2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 8D2LAIKSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LZ8QKK0G2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void Y1LS0IN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void ZE0Y7TV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DDSB6QGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 21RBRKASink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 7OK2YI0G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WYVR3LH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void UHLXG56 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JDBJIUHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void PT6ARBDSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void L5ZN7D6G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XAR8844 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void QBXZ16O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2ZRVGIYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QEVH7DDSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 13HJPJCG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void CR8V8MX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void CUP53LI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Z0SB580G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getCookies_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void D3OFQHM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void WDPLYBM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 07K25DFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5JZ1FIW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void Q27E63DG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void J731WPYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5UV9V1A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 26X3XGP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void L9LNPVKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void E858S8NG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7J7768G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VG523SM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void P09R3S2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void J8NM8PHG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 9SIC5UJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4HJMSJE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ACZ7GVEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void UQ4WP24G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void T4VE7LQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1X3M34K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GDOFL5GG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void VGIL79GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 1DL1BSF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WQQ3MUW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 3IYUAVLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QQ3PUXCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 0FM0VWO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RTUHTCH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DSZLWILG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void U8NIXXIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void V8OQW05 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YNF653N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 01LFFPVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void MFGQP9GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SROND61 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 44C7GLU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DDJE5BXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void JB1T04ZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void NAVK4JO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XXEKZEE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void T056PWBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void JRK4SJJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XNSWN2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7IMZH3V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void LXHKXXGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void L2F7XRD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void JBCY1JQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void JPYQYEYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 3WY3MN0G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 3QRF3L0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WLA4QJZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void NY9R9KBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 2T0M5G4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void UD47GHA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void L5WS1QB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 49AAWQRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void FUGAGLFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6EA6S61 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NBIN9I2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void STVHCXEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void OC0KS5E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void F0PWHNW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void QJ80R6KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"public void 3K80ZJP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 8ZVQOGC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String OKLXR58_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public void 5SHA2CK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void LW6CLPUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 9AU52N2G2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void RCD5LX5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String VG0XHI0G2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 6DTPO5R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AS6N946 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void ZYPTY4SG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void OZZ3GFAG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String FT1G9R8Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22a . badPublicStatic ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public String G25U3VMG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ZMPE6RDG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void N4IXZSI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"public void RHN6D7Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MD0YQRSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void QXGFBBVSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void O413O44 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badSink ( data , request , response ) ; }",1
"public void G4MEYOT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3X4OTB9G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void C6V5KL5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String DDXEL3ISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public void S3YFGB3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String U7K15SKG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void LJDEQ6PG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void VATCYKJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9Z4EOMGSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 9JR5HC0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataBad = data ; badSink ( request , response ) ; }",1
"public void 6VVA3L8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KVCE2ZRG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void EYKREP0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 3RBZ1KD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 49XP4D1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4HFK076G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HWGR948Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void UV2AAFSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void VC98ENJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void WJR1MGN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void H5B3EZIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6AXMP5ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void DB97UNHG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9XTV0J7Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void OID92CAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 9B48626 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LIHMXQJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BBPGHQKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 1KKLCP0Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void W7CZZIJG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 2R4CC6JSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void UQEFF53G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ULNP10HSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 0RQYYZVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void J4206JK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void IOZGZRQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FKAAZKRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IYRRM7ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void C2AS0GDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 3P1DIK4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9ZGPOKEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YHP4YODSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7PGMVONG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IK99MU6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void O8L6XRDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void H5S8UE8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_61b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void YBUA8S6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KGESXQRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 79SE8OVSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public String O01EFWEG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 9EE3TMB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void V5YJ5Y1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OCTQCUCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void FH5HP3OSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 0CME6BVG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6LDANTI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 9JAK6DA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 79VLO2NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void R6OJ1N7Sink ( CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void MH0S9W5G2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ACNSVEZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void E7QD037 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7UGEQTGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void HYRZHXFSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void V041M31G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void R9OL7KM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void GJJVDF0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EGTB4V7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 2FV5J7SSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SE608FNG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZPID796 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void GRT2XV9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4ZPKNHRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 0M8HNHGSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AD6JJKPG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void LQQQ2HK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 1B9X49M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void LGUVQCZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 8DS71QASink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LFJHKFWG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void AV7KCJY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 8B3FC85 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 02VXFHCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void JL64WZXSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void KJGT4DRG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void JZWXCH8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void V32XQCM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8L8NAVSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void T3831INSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void IF83CUDG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void V97VX0L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void TG3A1IZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2TBG83LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getParameter_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void H8KAG9K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void ZKZ8V30 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ULPVZP1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void PHNFHTY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 2I9Q899G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void M6IALOSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void RFYZNLD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XQJAUQK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 92FEJDQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void MAFB7PTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void HK1EOMX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void CQ6GR5J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void YAQKGCLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void JT1JRQQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WIPE6M1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void P35B671 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void P2LT55RG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void TH4P490G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void L0FR17N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void KJIP3U1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void FGNLROYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void G8QWNAOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void LG6O5F4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NU05KA9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 7VVCAK3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 3SI1OP1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void OZJ3NA9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FLLKIIW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 517WZKBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 50L71KJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void CIZTD7X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void B1WOXJ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 7GSYHK4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 0AQA7WGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void B3AQ73S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SXD5U4B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void O5EHQWWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void WPPOAZFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void LCUCSEZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TBI3XKX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void QMAMPXKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void ADPI5R9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void R8BF35I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3II721G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void I46GX05G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void DPXQUPS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 4RHQHRL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void RSRR0KPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void MNCL0YAG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 24UTBUE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VH9SQBI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void YF7HNNFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void HPIUYLXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 2LNNQQU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4ZSUBHM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void TK1SIH2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void XIZIW45G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void EVY0CKU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YYJI4SY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void H6IR1ITG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 54MH8YP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void VMNSUGQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void VHJSWHJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"public void YT4QQXC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void KU08TXB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String YD80L2W_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public void W38ZKN1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void WG64Q73G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String NPJQWLKG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void XKYCX8GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String F0GYU8VG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void FPI8UWC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void EED1Z1G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void AN9LXTLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void C3C04UPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 7VFVI2HSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22a . badPublicStatic ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public String LL2CC34G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String 1XICWFMG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 1Q24B4U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"public void GUWAVW4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KT5XVKCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void UDEW8GOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 4P1CMGM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badSink ( data , request , response ) ; }",1
"public void ODV8PYI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GRS6T48G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 6OG3QYWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String P59QD83Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public void M1GU920 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 3A3CLD7G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 7UM375GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BKY4MJY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VEJPHKGSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void FACV68M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void HPFCAL4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VC5FQ7RG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1RUKW0MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void IIEHL9N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void ZHAH0JQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void D584XW4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PX8V845Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 4WMWQ8KG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 8LPOCZE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void JML61MP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 88H328XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 1O3TQDPSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void DZ2B16BG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YOVR8T9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void EOJEV0HG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void MPE2REO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void VL4CY15 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OYOSSFPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7AQVTQ0Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void GS48FFAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void RIZZL4ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void HI0XTPTG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void T1CBJSOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 08OMNDTG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ML03YT8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void E9O577L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SH2TOO3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NF80QT9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4RJ53ZVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void J6I1EEHSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void BUBVWKLG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Q97KHYOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void JXJLO31G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SDXIFUQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void R2YOBVQG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 4QNC98F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_61b ( ) ) . badSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void S1PRT0T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FTQC9D5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 5EDXD71Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public String DXWIEDPG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void QF6TK5P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void DVO2U0K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void E5MBIDGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void K45GAO2Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void FN4YGPHG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 72CZY0C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void NSAAKD3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1FF6386G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void AB3IYDMSink ( CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void AQEDAESG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KIYRZNP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void LMCN0K2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0JOJOWVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void NNJXGUTSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5HI96YUG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void T8Z7RFH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void T252WWP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7OEF4EPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 2ICEP0VSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void C702GSSG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 2M6L30Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void LLFJ757 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1GU913XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 0A9Z550Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void ZA1IQ8RG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6JYTKHC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void U855VHE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8HFMG3AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void VI1SVLISink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void YH3XJX4G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void FYEQLP6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void ENYR09V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MVLQVH9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void NYGOHPMSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void IJ55S3GG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZXQVUHC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void KVTH0EF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7AZVRGTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void V4PU0MPSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 0SHM8CCG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void NDDJZDO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void FWEQ7X2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BH3VUSBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__getQueryString_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void V0UG82U ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void KA1B0R8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void TMGMDQEG2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KKFYY0L ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void X5D9IWAG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 4XV1AMUG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void VNF7D6A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U6TWB3G ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void WR0E82AG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 9DJ5JLRG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void GUQ57MB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RNDQ38J ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PD20OP1G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void RX0MKM4G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void YRB3MN7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4H79LO8 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void CIRXGGSG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void TJKQAQHG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NMWPJ7L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KV0AG2W ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void OUTGUH6G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void P2IL5OWG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void V0IVUM0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DY18PKW ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void OTQ6C06G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void C7QMHVJG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void PYPUBUC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0U3GZT7 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void OIHT6WBG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void BKQ6BGYG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NWNPM03 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MX2IW47 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 75C43DLG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void OAA2KWKG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 350QK4L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B4K3RI6 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void W090RASG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7LZXP0IG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 1XG3TQ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8V7CPCH ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void QAT2RJNG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void PL9CPDFG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void UO4OCQB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3K1213K ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void WN1QG9NG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void WN9YK5U ( ) throws Throwable { goodG2B ( ) ; },0
"public void AOIG9BW ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void RUZQR5AG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void SKF5R0NG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void UT623AU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ENN6IPP ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void LITB8DRG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void NGS93RPG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NU20UXX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5TGJBT8 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GG8Z7B1G2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 27U5QHAG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void CEPN3OQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TDVF6GQ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DSGXTCXG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void UT3QKE0 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 24GJW4V ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void SQ1WAFJG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void 6RD3K1K ( ) throws Throwable { goodG2B ( ) ; },0
"public void ICITAZQ ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String WALB6RE_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void 7QF2OX4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 7JF4XPRG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String BM108H2G2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 2URJXX6G2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String VVKK1DFG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 2XQSOR5 ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void DNJ2QEJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void IUG0Z15G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void D55JF9IG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String R7M0RNNSource ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22a . badPublicStatic ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String EQDJUQCG2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String M5DREQZG2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void BNCX9M1 ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void 6BZ21YS ( ) throws Throwable { goodG2B ( ) ; },0
"private void L3SKN1UG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void VBHOXP4Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void HG1M16F ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 0AGQ9M6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2W0WGE6G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 6NBDAY8G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String MMDKZYKSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public void K41Q3FA ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 0WXVYMLG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void H3Z1NE9G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 801ZMRK ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8SYM8Z0Sink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void ON6IB2E ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void MQYMDIR ( ) throws Throwable { goodG2B ( ) ; },0
"private void 91MIDA5G2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void C8DMBEDG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void X1DAF0X ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void U89TZLF ( ) throws Throwable { goodG2B ( ) ; },0
"private void 68N696EG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 9FO09ARSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void VH43YGWG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 07U8OWM ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void Z93IVPU ( ) throws Throwable { goodG2B ( ) ; },0
"private void DUDCNBTG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void 3PHDA0ASink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_52c ( ) ) . badSink ( data ) ; },1
public void TZGNOZEG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void ZWDU4I1Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void PKT8YLNG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BOV1X6T ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void 16GWG33 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CR99VT2G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void YUBEFH1Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53c ( ) ) . badSink ( data ) ; },1
public void VODCWT5G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void GB3VBFYSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53d ( ) ) . badSink ( data ) ; },1
public void T46EM6YG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void FL2IVP9Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void T2GA4VUG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void R8X7S91 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void JDR0WYP ( ) throws Throwable { goodG2B ( ) ; },0
"private void R492A7QG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void 4JYSQ0SSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54c ( ) ) . badSink ( data ) ; },1
public void Q958UKFG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void NTYCKABSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54d ( ) ) . badSink ( data ) ; },1
public void G8OE736G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void GXKBDCUSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54e ( ) ) . badSink ( data ) ; },1
public void 6N7NKT5G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void N1C0PBESink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void B45SUVYG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void K7X18D5 ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 91LPTVU ( ) throws Throwable { goodG2B ( ) ; },0
"private void IZHXS88G2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String JED3A6XSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String BOEDX7YG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void HD1I5KX ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void WZMMXTA ( ) throws Throwable { goodG2B ( ) ; },0
"private void T36HQXSG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void J79BHFUSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void IOZWFTWG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void OLOXW9A ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void NK1EJXV ( ) throws Throwable { goodG2B ( ) ; },0
"private void OYAJ7SBG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void CA8WSVRSink ( CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void XD3QLIOG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5AJG7PA ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_68b ( ) ) . badSink ( ) ; }",1
public void ZHEKOQV ( ) throws Throwable { goodG2B ( ) ; },0
"private void EHDNVGBG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void K81MPQ2Sink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void HW4BTXLG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void UFOY8VC ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void HBN31A5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9KCJAPDG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void 3YCW3G2Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 755MGM5G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5QN9YB0 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void NQKAKHG ( ) throws Throwable { goodG2B ( ) ; },0
"private void OX0P6R2G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void FSVV67QSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void QN694YRG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SW41Z89 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void EL6ZIER ( ) throws Throwable { goodG2B ( ) ; },0
"private void JBJXQ61G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void J32NFBASink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void U0FZHS9G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 7AVQ7GF ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void WCOTSKY ( ) throws Throwable { goodG2B ( ) ; },0
"private void OTI6LRXG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void C5RLGHXSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void C46GT1PG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void RXTJV3M ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 56P8Y5Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void ST87JZ7G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QH652PDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 4AT2G2EG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 84CSLPD ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void CFKDSZU ( ) throws Throwable { goodG2B ( ) ; },0
"private void SXMM58WG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__listen_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 4V7W9QB ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 9PQ9MMS ( ) throws Throwable { goodG2B ( ) ; },0
"private void WSU0W5OG2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 6C7QNQE ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 7ONBRLUG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void F1GOOVSG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void M3MDTSW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5BX486G ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void K00CP1OG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 53RT0D8G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 2XNSVK0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JNZ9PYE ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 3GLO7T7G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void BF53UMMG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void SZ5DHCL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RPO0NEP ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void PPG3P31G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void SR8RVF6G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 9EFJ578 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QACPW92 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void EZ0M0Y2G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 1KRZ9YTG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void IA3CVX1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F0KQ4HW ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void GH8RLAIG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 117OSU6G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void OG0EZGP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SC9FNUS ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void U78N7WHG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 5X9ZRNXG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void KRR40ZS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J2KRBRG ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void DF41UKVG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void LQCGYOSG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void MGCPPOB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M90YV7A ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 89YHP8PG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void G78K1T4G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void A3DVFBB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q07PABQ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 0J1HD0BG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QBXW38BG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 078NQ9F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C9FTK5M ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void NLW5S07G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void JJEKBLC ( ) throws Throwable { goodG2B ( ) ; },0
"public void WU9WOZM ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void LKGSMPIG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 20YPEUWG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 4PG38XP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SHHY5KH ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void E7FDDWCG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void EIWP0LKG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void UVDT4WF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LOYYADM ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void HEIFHAJG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void KRQED8IG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NZJUHA4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XWE97VJ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 9Z5ULWTG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void IJE664S ( ) throws Throwable { goodG2B ( ) ; },0
"public void H7BN2QD ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void NPFXPFMG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void XK0D2KI ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZC5JK04 ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String LK41JIB_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
public void SP48HA4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 5F7SY1NG2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 0G4PM1GG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void RB8X31GG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 8DS7L5XG2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void AB4NZ7M ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void NDX2HYD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 0OPP8BMG2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7RBCCJ2G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String VLIWD5ASource ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22a . badPublicStatic ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String D4VZSB5G2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String 1ROT5H7G2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void HBGO6SX ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void TMD8DNM ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7UJA9IWG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void 8BAGF0HSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void NYQF4ST ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void DCNTFHZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 200BTMZG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void IGPQ89FG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String B85L1KBSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void WIRE859 ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String ZRZ03A8G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 9448MWJG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 4FQOI3S ( ) throws Throwable { goodG2B ( ) ; },0
"private void MMZIJ89Sink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void NZIIIDF ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 8SNVGY5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void RIMKU91G2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void WKMVANMG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void HURVBC1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_51b ( ) ) . badSink ( data ) ; }",1
public void 5HJNT66 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FT3XCA3G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 90B8GKWSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 95EALJQG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void ZDIW8BX ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_52b ( ) ) . badSink ( data ) ; }",1
public void LQIESMN ( ) throws Throwable { goodG2B ( ) ; },0
"private void CZQYNLBG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void FEF2H6NSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_52c ( ) ) . badSink ( data ) ; },1
public void T8OHG1KG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void SPXQORKSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void RTLQXI1G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void WMGVBOS ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53b ( ) ) . badSink ( data ) ; }",1
public void 0CGQ8JT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7MDICISG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void U2WMX49Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53c ( ) ) . badSink ( data ) ; },1
public void 8IW5IL6G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53c ( ) ) . goodG2BSink ( data ) ; },0
public void QG5MGVLSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53d ( ) ) . badSink ( data ) ; },1
public void WYTUVIMG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void X1EVIENSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void PX4KSP6G2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SLY5F6J ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54b ( ) ) . badSink ( data ) ; }",1
public void R8QDU4S ( ) throws Throwable { goodG2B ( ) ; },0
"private void QC28HTJG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void SQVIHKLSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54c ( ) ) . badSink ( data ) ; },1
public void KV7WSJMG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54c ( ) ) . goodG2BSink ( data ) ; },0
public void ID8E9KFSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54d ( ) ) . badSink ( data ) ; },1
public void EKWJPWLG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 1GI1JBUSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54e ( ) ) . badSink ( data ) ; },1
public void 90AONNQG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void DU7V5G9Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void MRSTZWIG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 2PVAOWB ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void 39N66DX ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3PV5337G2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 86A4TPBSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String BCUVZEQG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 9KPM92D ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_66b ( ) ) . badSink ( dataArray ) ; }",1
public void JZ1FY0A ( ) throws Throwable { goodG2B ( ) ; },0
"private void P3OTYMKG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void C3Q9NBWSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 1SJGCYLG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void UZPHCKL ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 9XXACIW ( ) throws Throwable { goodG2B ( ) ; },0
"private void 332SMHWG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void 02K7VFBSink ( CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void SWRTO63G2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void JKIH6ZS ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_68b ( ) ) . badSink ( ) ; }",1
public void K6TBI9U ( ) throws Throwable { goodG2B ( ) ; },0
"private void BNE6JGOG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void 7YKA1PSSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void QNX6U0FG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 57WX072 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void U7MWUM8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void UZAJYAKG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void BPHKY8TSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void TQ5MOT1G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void D7ANWGD ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_72b ( ) ) . badSink ( dataVector ) ; }",1
public void Y9MY6BJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5WBKY0DG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void MSU7UTKSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 69TXS2YG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 0SI6R8U ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void VJ2TVCN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2WO75NFG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void 9504Q9USink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LCEAX50G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BBJXJMR ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void SXO5390 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 543HGUYG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 35T3YSLSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void CP6U88ZG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void BFOM13C ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void UGCQKPB ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7ZHV6GIG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void NHRTIPCSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void EORVQ8BG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 4TTS8HA ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 8NO5OG9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void WFD17R4G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void 6VP69T1 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void SXG1UAJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void H1ONUV9G2B ( ) throws Throwable { String data ; data = ""foo"" ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 0BCJ27S ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ES8QYHIG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 564D5ZXG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void RKP5KVP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KL5SSHW ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 9S3QJVVG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void UO312ADG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void U6IG7UY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K0WAM0I ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void V6G615XG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 0Y5HB48G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void G6US66Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RBY57BO ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void ILKQ0PNG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 86LALGUG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 5CUIUTQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IPHTSFO ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void TY3HXJ7G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void GI9R9RHG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void C6RA0LM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I5AK8DB ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void I7G4DXRG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void HXCJL7KG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void I8RGORN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XZNL7XG ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void YG46THXG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void QNUTQZ3G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NE83M1G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TH23NSR ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 249UASWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 7GEKJ6FG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void U7BID20 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VDWEDM4 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void WO5V4R1G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void CCAT5PRG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 399AMPM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AA15N7T ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void 53RKJK1G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void U07XCGAG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void C9RESKR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M1R41LH ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void TEWSGKBG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 9S153DT ( ) throws Throwable { goodG2B ( ) ; },0
"public void 7RR6344 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void I69H8BKG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void NNCMSBRG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 11JXH5J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4H9E1TW ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void STQ1OH3G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 8WQOXKHG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void 32X0104 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5WQTAAP ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void II4DYIHG2B1 ( ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void S6J8VUUG2B2 ( ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void MDAGM2M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KQ6X1Z9 ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private void OYENUKLG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void NHU552Z ( ) throws Throwable { goodG2B ( ) ; },0
"public void SI7NZ2B ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
"private void ZVWUQSCG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
public void 0Z18IJ6 ( ) throws Throwable { goodG2B ( ) ; },0
"public void KRQI2CL ( ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String 431P93E_source ( ) throws Throwable { String data ; if ( badPrivate ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
public void 0KDH3PZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void M2KU6J1G2B1 ( ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 54K04LVG2B1_source ( ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void U63LBHDG2B2 ( ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private String 7YNKQW1G2B2_source ( ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void QBY1P95 ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void YFEVWSP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 58WLIY6G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 08YNV7PG2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String 7ROH645Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Property_22a . badPublicStatic ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } return data ; }",1
"public String BX5DTKQG2B1Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Property_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String 6AJJUGQG2B2Source ( ) throws Throwable { String data ; if ( CWE15_External_Control_of_System_or_Configuration_Setting__Property_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void L4DRRDO ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",1
public void D47H21K ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1LLUARJG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } }",0
"private void U3YEVE8Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void TPUMHRH ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void IBKZQZC ( ) throws Throwable { goodG2B ( ) ; },0
"private void PWJFB3XG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void DPUMJ0PG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private String MS1YS8OSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public void EHHAMDQ ( ) throws Throwable { String data = badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"private String QAGALOBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void TEOHGEXG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void X84YHIR ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8TO3TH6Sink ( ) throws Throwable { String data = dataBad ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void F6PO240 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void 35OGWJ9 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LM224PSG2BSink ( ) throws Throwable { String data = dataGoodG2B ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void 8J69016G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"public void LSJSU79 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_51b ( ) ) . badSink ( data ) ; }",1
public void ALM0425 ( ) throws Throwable { goodG2B ( ) ; },0
"private void JSGUQWXG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_51b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 5Q3X3SBSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void PDSMHDHG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void YCW66DW ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_52b ( ) ) . badSink ( data ) ; }",1
public void V5JP5B4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GCCPGZLG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_52b ( ) ) . goodG2BSink ( data ) ; }",0
public void Y444XVZSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_52c ( ) ) . badSink ( data ) ; },1
public void 59PHG9VG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 2Z6CKARSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void BC36FHAG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 57WRZ48 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53b ( ) ) . badSink ( data ) ; }",1
public void 0LWNUJV ( ) throws Throwable { goodG2B ( ) ; },0
"private void GJEFOASG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53b ( ) ) . goodG2BSink ( data ) ; }",0
public void IXC9DABSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53c ( ) ) . badSink ( data ) ; },1
public void UK8EFK4G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53c ( ) ) . goodG2BSink ( data ) ; },0
public void FOMZKMZSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53d ( ) ) . badSink ( data ) ; },1
public void J8KDRUKG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void GCNWX22Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void YQG49ZHG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void N7X0PUR ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54b ( ) ) . badSink ( data ) ; }",1
public void 5U8A9U0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void AF5YSX9G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54b ( ) ) . goodG2BSink ( data ) ; }",0
public void FF07MBASink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54c ( ) ) . badSink ( data ) ; },1
public void 0ZD6SBHG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54c ( ) ) . goodG2BSink ( data ) ; },0
public void HCSKYD4Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54d ( ) ) . badSink ( data ) ; },1
public void 6H65SWHG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54d ( ) ) . goodG2BSink ( data ) ; },0
public void CCNAILYSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54e ( ) ) . badSink ( data ) ; },1
public void V9XG98ZG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void AZFFFZ7Sink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void MDT1CSFG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void CJ3NMBP ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void Z4Q0XFE ( ) throws Throwable { goodG2B ( ) ; },0
"private void XQV6Z2YG2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public String Y0U6XWOSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String ZIZVXXUG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 35QYKUQ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_66b ( ) ) . badSink ( dataArray ) ; }",1
public void L4KT7P5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8BO724AG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"public void RT89O3BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void D00DGRUG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 37KAPHD ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void U30HRWQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void MD04XUHG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"public void MHFC11BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void O18PODSG2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KDA9VI5 ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_68b ( ) ) . badSink ( ) ; }",1
public void WD4W4T0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 8H6KHBWG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_68b ( ) ) . goodG2BSink ( ) ; }",0
"public void A4RYQKOSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__Property_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 5T6V1V6G2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__Property_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void KC006EL ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void L9X9PYH ( ) throws Throwable { goodG2B ( ) ; },0
"private void XO2UDFHG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"public void 3GYQT0GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 32112FTG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5K6DOE3 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_72b ( ) ) . badSink ( dataVector ) ; }",1
public void O0PS3Z5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void N9FEVNZG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"public void W18MB6ASink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void X7B1HMBG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void W5MIKIG ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void JMS3K5H ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9BW2MCJG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"public void 72AJV0GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void Z1I8W3UG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 86ETKN6 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GFPNPCH ( ) throws Throwable { goodG2B ( ) ; },0
"private void GTP2UBIG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 2KMEOZSSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 4XUI6QRG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void SBXIAHR ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void FO4P3AO ( ) throws Throwable { goodG2B ( ) ; },0
"private void XJXS5MYG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE15_External_Control_of_System_or_Configuration_Setting__Property_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ZFRRUTXSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5SY7ORIG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void MAJIMEZ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE15_External_Control_of_System_or_Configuration_Setting__Property_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__Property_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void GPILYDI ( ) throws Throwable { goodG2B ( ) ; },0
"private void UOANAVBG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE15_External_Control_of_System_or_Configuration_Setting__Property_81_base baseObject = new CWE15_External_Control_of_System_or_Configuration_Setting__Property_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"public void P37M1YE ( ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_22b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void CLEBBRY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"private void 24LDN70G2B1 ( ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_22b ( ) ) . goodG2B1Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"private void ZG17BR3G2B2 ( ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_22b ( ) ) . goodG2B2Source ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5AZHHYHSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void TXRGR5KG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void T46MBU3Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_52c ( ) ) . badSink ( data ) ; },1
public void 24183WMG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_52c ( ) ) . goodG2BSink ( data ) ; },0
"public void 3FDIZSZSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LH0BAMMG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void KKQD113Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_53c ( ) ) . badSink ( data ) ; },1
public void OQYXF78G2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 1REIL12Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_53d ( ) ) . badSink ( data ) ; },1
public void 0E9LA6IG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_53d ( ) ) . goodG2BSink ( data ) ; },0
"public void MJWV16VSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void PMQM35MG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
public void HHNQU00Sink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54c ( ) ) . badSink ( data ) ; },1
public void ADTW16CG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 5KAAPWWSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54d ( ) ) . badSink ( data ) ; },1
public void T0UF3OUG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54d ( ) ) . goodG2BSink ( data ) ; },0
public void R7TSVPLSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54e ( ) ) . badSink ( data ) ; },1
public void 9CGE4DIG2BSink ( String data ) throws Throwable { ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_54e ( ) ) . goodG2BSink ( data ) ; },0
"public void 1UXFA1NSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void TD7UPSNG2BSink ( String data ) throws Throwable { Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void Y893W4A ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_61b ( ) ) . badSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
public void AIV8XMI ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1AKU6XIG2B ( ) throws Throwable { String data = ( new CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_61b ( ) ) . goodG2BSource ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void O92CCZHSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void US633RHG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void L41ER8BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void WFWBWB2G2BSink ( CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 88IQ5IVSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void 53P687NG2BSink ( ) throws Throwable { String data = CWE15_External_Control_of_System_or_Configuration_Setting__URLConnection_68a . data ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5K7QTX2Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LRONB8ZG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void X52I2J9Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void LA9K32JG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void XUA8Z8CSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void BMW04I2G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void HVSD9Y4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",1
"public void BD9F941G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } }",0
"public void 5XJ5B0OSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5HH4A3SG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; try { dbConnection = IO . getDBConnection ( ) ; dbConnection . setCatalog ( data ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error getting database connection"" , exceptSql ) ; } finally { try { if ( dbConnection != null ) { dbConnection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
