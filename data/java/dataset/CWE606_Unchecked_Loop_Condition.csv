input,label
"public void 26533RZ ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void D8XOP1G ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 64J7BING2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void PN5H4ODB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void UNAFNX4 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 1G9FBWRG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2GHMXTSG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8QIVTYGB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void VDFKOKTB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 8QMWOZ5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SAV67UI ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void NNRXFKVG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HHDJ7B5G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NS6P5JFB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 6I2DPNKB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void X1EF5JM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void P5ULAXR ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void QQR7FK2G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5GNUPFHG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IVS0R43B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void QWNLLR7B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void AY96Y2R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WGUT11Z ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void I1OH2VIG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 02HQMT4G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void TPTOP70B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 2P4OVVSB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void LH82TMH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X0KSK2L ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 8L2RNCDG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void F8UXLC0G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZU3O8KKB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void HRW7ZDVB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void ENF5A3C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void OY2CX9X ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void BM19QLJG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void N21KZEBG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 6GBBV5FB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void XN56YI6B2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 6W8UAD1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MXLZ1WS ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void A82UV2HG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void X86I98SG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7M1M23EB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void AQAMZPWB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 7MWF9HB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CJJT9HM ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void DK54LDKG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void P4KX3WJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void B9L6KAJB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void R4KSH8ZB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 5VLR8L0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 7JOEMGC ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void WG33VMGG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JCJRWCQG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 72FHU20B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void OMMPICBB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void G5UGWKM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QDEE36R ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 1LD8TLDG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BWOP3M5G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2ZRD77PB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void HF95DI2B2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 478QOIX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JLLPZYD ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void 7AJVKJXG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NQ22Z4EB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void TH3B52L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 9ADUQYV ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void GKGLAA1G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8LEI2RGG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ROI32PDB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void E67MC9FB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void P6E2ATB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void APRB4IC ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 98XEBYMG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IMBDSDNG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NPI2KU3B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 5RIGWZ4B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void M8UPCG8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MP5TE0S ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void V4781D2G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void D3CCQKOG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void CW0A85NB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void 3NQ9IVMB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 02VNFAI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void Q5NWU5Z ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void J0FP2KXG2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void WSNORW7B2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void CFGIVUX ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 5B8E5GA ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 5V2LTAMG2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MVB95R0B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void YWRDITV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void PBC52O2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void XUB1US9Sink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void I4X2UJK ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void JNQHKL6B2G1 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void F0U40PSB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 28BQQ6CB2G2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void KYCTVNRB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DB1DNE2G2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void JBSVLASG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void HEM7KEN ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_22b ( ) ) . badSink ( data ) ; }",1
public void N4JJ9FQ ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void PALJ3WBB2G1 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 2UFZ19LB2G2 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void E3YHYIRG2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void BPTKT47Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__connect_tcp_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void K4XIR7DB2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__connect_tcp_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void ZNZZ1J1B2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__connect_tcp_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void PQ99HGZG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__connect_tcp_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void E3CQS1R ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void BJC7XMO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QR8KW1YG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Y1EA157B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3NNKV7LSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void N8T4K30 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void FO4WU5S ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void T1TDQLPG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void A1BQA1MG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void G7BAS4WB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IZYMVSIB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String Q0QZMO3Source ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public void 4M74S0D ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String 2RD5WUGG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void J1MB79DG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String GJLMZXBB2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"private void NMYXUCEB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void 7JJFY5O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 87UOEKUSink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void RJWDU3A ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void A1Y2Y2O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void NVZIA7QG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void EU1JDYOG2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void TSDAEHCB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void THKZ15BB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void WCOSI1D ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void QB7RVMX ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5XTNFLSG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void IEC5795B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void JMBWZ75Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void WH6Z9AMG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JU0ERJIB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void A36ZZN6 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void 3C62HOR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 001S6ODG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 2DXP846B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void RI3R7LJSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52c ( ) ) . badSink ( data ) ; },1
public void 6JVWLLDG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 4UPF7SEB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void 4FPCP57Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FDCEKDJG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void N0JY08CB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 1YT7LNC ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void QXSJ9UW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 71C1A6DG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void JWJN3EJB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void ICL6JZHSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53c ( ) ) . badSink ( data ) ; },1
public void ODI0J6KG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RYJIR09B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53c ( ) ) . goodB2GSink ( data ) ; },0
public void ZUJ6R93Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53d ( ) ) . badSink ( data ) ; },1
public void YLE8IU6G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 5UEHMUFB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 2GYPTBMSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FTLYK6DG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 1EYXGWIB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3P97E9T ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void 2ASSPZZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZP5UZQ0G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void CBNWZMVB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 80K5TFYSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54c ( ) ) . badSink ( data ) ; },1
public void IZ41AN8G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void MPFNV58B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54c ( ) ) . goodB2GSink ( data ) ; },0
public void R8ON95DSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54d ( ) ) . badSink ( data ) ; },1
public void 39HNS7MG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VHIQHUJB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54d ( ) ) . goodB2GSink ( data ) ; },0
public void JYG1NUMSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54e ( ) ) . badSink ( data ) ; },1
public void 99GPJVMG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void ADU5RY7B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__connect_tcp_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void F4E6VGYSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 3O4RCQ3G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 98PB6RFB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ULBSBNT ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__connect_tcp_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void 6JW9MAI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O3IP13UG2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__connect_tcp_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 5TFS0KKB2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__connect_tcp_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String 5I3P3Y1Source ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String AZIUQWWG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String XHOPQYQB2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"public void LSSNUWW ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void VZDXDYW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TN230N8G2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void N65JZ78B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void 8K7CE3KSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void OPDUC5DG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void NXWJYRLB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3Z6D7CO ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void L5YFI5L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4HO89TWG2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void KB08SUKB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void YSWDBYRSink ( CWE606_Unchecked_Loop_Condition__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DILBDG5G2BSink ( CWE606_Unchecked_Loop_Condition__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZFFTL8HB2GSink ( CWE606_Unchecked_Loop_Condition__connect_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void WTVPNML ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_68b ( ) ) . badSink ( ) ; }",1
public void 757NRW0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KYXKVUHG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void U181AUWB2G ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void R0QRXDTSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__connect_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QKHRXVSG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__connect_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void EAS0QKSB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__connect_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 9F2S163 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void OH24SSR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YC66NQ5G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void XWLQH9RB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__connect_tcp_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void QVC39K5Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DYH8AFAG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 1NPHPHIB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void G7PI93F ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void OPIBGGR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 64XS0DNG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 0QWYFQ7B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void MDI5HEDSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void KRPPIR7G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 71E5Z6DB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3YJXQZT ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void U821H87 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5S0DXRFG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void R24CNVQB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void 39GC02VSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void JLWQPNTG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JOABOIUB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void R5IHYP1 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void Y2R51N5 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3AZ9JC3G2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void CH1DIGZB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 1PCO6K4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void EILY01JG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void W22ELPFB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void L7FIFJC ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void YSNQSUC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 23MNIVYG2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void E18L1TGB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__connect_tcp_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void UTU2ZXRSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 0IQ1BM1G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JPH4MLVB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BD5AFMJ ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__connect_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__connect_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void NCYX71J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YILXF2YG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__connect_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__connect_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 8AIGNC6B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__connect_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__connect_tcp_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void TD35A8D ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void PN10ZBE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OKJ2ADDG2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void XNY3NQ8B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void YY0I87J ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void P9E0ARJG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void TWMY4OFG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9SJV51OB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void PXX636LB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void S7J0FNY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1QGJXGQ ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 1PF8VXEG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WTC6UJXG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 79DMCP3B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void JIVC2L4B2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void FOKX8IH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WOHZIXX ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void RKG696SG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9860HHJG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7FP1XP7B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void W9XK85OB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 14Q4J0P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S02JBIJ ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void NMGCGHGG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void KL38VVBG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 88Z6L7PB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 7L6J3DQB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void YH1T02Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void IVY3ZA2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void ERYQ5V5G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4AX6DD5G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WK10JFCB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void HD3HSKMB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void EJ0ZOIX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void IGVCHSP ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void IYFHH8UG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void TYY92XWG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void U8FULNEB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void IK33FRZB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 041DCH9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RPD2HEQ ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 4GO8CSDG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QUOF2PWG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void RXWBFFQB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 8W39G1PB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void XS3GXOZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S34O04O ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void CLGIUOWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WZ8YJ1KG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9WF1TCIB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LZI8FIYB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 8XCNS8W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PAKEBU5 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void K1PNATJG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 72EYVHMG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 6EKPK69B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void SFS54ZVB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void S30UQSD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 7ZV6RN8 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void KOGXFY8G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4GF675JG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void AQ08JIHB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void CTEQ7XOB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void FQQGM2O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ZKSGMVR ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void HXZH2LUG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JACFGUCB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void JUBEYMA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void PRY0G6T ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HC0QLR2G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0PGR3RRG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Y3132GZB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void EXFL4NCB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 3M9ON6Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 3XWSE1H ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 4I9BPQEG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9OTHOAHG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BBFV5FOB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void RHT3D6XB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 0TEO5VX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ANQBG3U ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 8RCK2B4G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void ZUB36KDG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void QZJCINMB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void 8S818VVB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void FGYEGI1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void XNP540V ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void 1GOYEUFG2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void RU1YVBZB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void VE87ONM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void ZH1QUP5 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void BJQS5R9G2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void SV1SKNQB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 09BMZBA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void O9C197F ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void ZH7NKFXSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void J059S00 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void FC2K4USB2G1 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void UPZYP1BB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ZOCKQUEB2G2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void Z9V11ZTB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void QD8SEWRG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void E0LUCJNG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 8YV5REL ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_22b ( ) ) . badSink ( data ) ; }",1
public void E6EYY5R ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void JHA1ISNB2G1 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void YH5WYG7B2G2 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void MC5YQUKG2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void QQMJGW2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__console_readLine_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void E7WWORSB2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__console_readLine_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 257LYBRB2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__console_readLine_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void OACVSZPG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__console_readLine_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void WJKL8Q8 ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void U807IF4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void S44RDBWG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8GX7XR1B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void URH9MPQSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0J7O1XK ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void DVTBWXD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void D9F132IG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void UJ1AH0WG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void SG5DZPHB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BZDTJ63B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String JGW37IOSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public void DJ32NQL ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String XSP2UCZG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void K8OFYLTG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String JUBBEU8B2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"private void IHNUJXXB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void 4YKRKDS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PRARV7FSink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void J7RQWIL ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void HPZQR87 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DBB20LLG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void LC6MPKLG2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void K8D4XJ0B2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 26HZOJTB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void GXFVFU3 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_51b ( ) ) . badSink ( data ) ; }",1
public void 3ULDBTU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ILD55R8G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void YHDK41FB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void EJFWZ4BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 270FU6YG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void TKPVY4XB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void SQ2ZB3K ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_52b ( ) ) . badSink ( data ) ; }",1
public void MFWW3W2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6XWMHUWG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void KRI7WILB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void SK2KSOASink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_52c ( ) ) . badSink ( data ) ; },1
public void SBB8MAFG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GDUP108B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void VWWKW1MSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void HJNTXCAG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void XO2FVNFB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PAS9OK5 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_53b ( ) ) . badSink ( data ) ; }",1
public void GG3IP3O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HYLGEV0G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void AFO1151B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void ZKRXDQOSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53c ( ) ) . badSink ( data ) ; },1
public void QS586UWG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53c ( ) ) . goodG2BSink ( data ) ; },0
public void KX79SZIB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53c ( ) ) . goodB2GSink ( data ) ; },0
public void DNJ8M3SSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53d ( ) ) . badSink ( data ) ; },1
public void 0T3ROW6G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53d ( ) ) . goodG2BSink ( data ) ; },0
public void XC0HFY1B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 9GGVTRJSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void N1DR3K7G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void LW029DMB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void KUJVNAP ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_54b ( ) ) . badSink ( data ) ; }",1
public void G8TAQ4Z ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OZPR66HG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 97ECAPFB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void LJ07DMXSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54c ( ) ) . badSink ( data ) ; },1
public void ZWU514DG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54c ( ) ) . goodG2BSink ( data ) ; },0
public void PZC28ZSB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54c ( ) ) . goodB2GSink ( data ) ; },0
public void IETVP1ESink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54d ( ) ) . badSink ( data ) ; },1
public void OX5P1I3G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54d ( ) ) . goodG2BSink ( data ) ; },0
public void NXLAVV6B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54d ( ) ) . goodB2GSink ( data ) ; },0
public void ZFQB2HKSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54e ( ) ) . badSink ( data ) ; },1
public void IP1CU2UG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 6JQJRTLB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__console_readLine_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void Q3BINM5Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void OBSKEHFG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 5L2X0ZYB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ZKPGH7W ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__console_readLine_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void Q0ZLS7B ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JWV59XXG2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__console_readLine_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void FR3XKC9B2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__console_readLine_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String ZVKPIKBSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String JDNPW63G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String EQ0H2NQB2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"public void JHH11MA ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_66b ( ) ) . badSink ( dataArray ) ; }",1
public void PLV6WCE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1QIEQTZG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void UF3EBZ7B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void 0G0KPOISink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 04M692HG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void FRP5GR0B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void MUL2JFO ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 7VMDSX0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void K2RHF8QG2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void TMVP72DB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void X4910N4Sink ( CWE606_Unchecked_Loop_Condition__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 7O52WB7G2BSink ( CWE606_Unchecked_Loop_Condition__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void UTBLOGXB2GSink ( CWE606_Unchecked_Loop_Condition__console_readLine_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void XIL8MMZ ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_68b ( ) ) . badSink ( ) ; }",1
public void GEH99S5 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void LRLYBSZG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void 4XMYU0FB2G ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void VQHOE61Sink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__console_readLine_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DCM6NAIG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__console_readLine_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void Y9TSTHVB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__console_readLine_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void S91F549 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 4D2H6P7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TDHZQ4PG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void XXHWL2FB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__console_readLine_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void AWGXUY2Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 1CG7Z4UG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void MNWCAC2B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 75FL4TX ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_72b ( ) ) . badSink ( dataVector ) ; }",1
public void YI7D2JB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PRM3QQLG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void S6IUFVCB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void A6ALTO0Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void TZ6ZEXDG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 70NZ5RRB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 0IG2PO5 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 5NFCQ8X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DMS30U7G2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 7FN5OKYB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void YTM4VDNSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void JTZNV8CG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 80KTF10B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void VCY4X9Z ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void B76DV9J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5CXJY6MG2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void ZICGSSXB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void DYZ5R1GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void HVSPEPRG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 2VYP5NAB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 327I89Z ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void E6D9Y1W ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZMSRYMHG2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void G5MBYHGB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__console_readLine_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HAWRF4SSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 83QBUAXG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 2703O5YB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JLEJHYC ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__console_readLine_81_base baseObject = new CWE606_Unchecked_Loop_Condition__console_readLine_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 2P1D40N ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void A0YT09EG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__console_readLine_81_base baseObject = new CWE606_Unchecked_Loop_Condition__console_readLine_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void S862AZOB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__console_readLine_81_base baseObject = new CWE606_Unchecked_Loop_Condition__console_readLine_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void SA85K34 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void JQ00149 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UZYYJJ6G2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void VT8CN1XB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void TF7IFYU ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 2KDMP25G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DVEFETOG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DRRMELSB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void YXEM4LIB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void GFMW4QT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LOD76AO ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void AYXH77KG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Q5V40DNG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VXX0TLAB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 0BYEIUXB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 160EXSO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void E2X4ZGU ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 6DRNJPXG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void STREWNYG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7DGK29BB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 10W7D9CB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void WQW8N8X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 7CX8UJ1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void IQ42JRQG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 84MJ5NCG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5B66TTKB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void OJL450EB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void S8Q1GCY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void H4OA0HB ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void N6EJM01G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 51YKILYG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void UFNFAGUB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void SBFEGL7B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void O9Z73KB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4V5UR0E ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 0C1OI9BG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void T6RBUBJG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WGP6L3JB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 32O1MCAB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 5DKB31T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0MWPNWZ ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void C6Z7MWWG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void YTEYP0HG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4QOXE4NB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void CC4BSAJB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void JBE5MK4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 6W88MQH ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void XP9043LG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QQT10KJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VEKJ46RB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void IJ92E7BB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void JTX2R35 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X10VCEO ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void WI3NM6ZG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NVU87U5G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LGGLV8HB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void FB68IBKB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void T1D3GE1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JXAFB7W ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void MZD6NUNG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2YKXSLFG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void N4TBYXAB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DA4L8GEB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void UJIP2SD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 073AWHJ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void M1WADB9G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4LJUT2DB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void RGF0SJL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 1URXQB5 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 20ELL4WG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4UOF2TLG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7V3ZYQXB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void AEBP5WRB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void Y6G0EKR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 32UCTQP ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void UTYYBUHG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NEVE48FG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HZPU7YBB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void QDILIMAB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 0IXSQL2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RWLULZO ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void XB6CSSBG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void NH6W1WFG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 1EYNBLQB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void JW3XHO7B2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void MXS007K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 6R863OA ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void ZYZPBSQG2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void OASPJFLB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void JPZA40M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 5ZCTJ0L ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HBKOTLQG2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MU60P0FB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void VKMFOUZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void YS8CAOA ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void QC6KXRZSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void O30IWUO ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void H8R8AUEB2G1 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void PMQCE66B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void JZ9WK2NB2G2 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void YMGDTLSB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void AQH7LQGG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void PNESM5ZG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void CIMNC0Y ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__database_22b ( ) ) . badSink ( data ) ; }",1
public void ZBSJD6Z ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void XVK3GU2B2G1 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__database_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void B722601B2G2 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__database_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void U5WUFZKG2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__database_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void A77CEIMSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__database_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void 8NYS692B2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__database_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void GONWML3B2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__database_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void HYE3AZGG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__database_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void HUJ6T2J ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void VMGAQFA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void STAE8HQG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void AVTHOE5B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1QTSR0LSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QOA6UXS ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void L4G6PIE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void LLEPAMJG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 20HTMEJG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void TPNJWYVB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void AYFHKMHB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2GSink ( data ) ; }",0
"private String 3HAUDEYSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public void KETDQCP ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String ZMQ8YUQG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void 6SIXGBEG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String YL6W9BMB2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"private void FC9T2F7B2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void U8QBLT6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1QEF19ISink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void PJMNOOA ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void RV6G9LN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WWAY13FG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void MLLHN08G2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void EF2GSBBB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IIOZV0FB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void H3BKFOQ ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_51b ( ) ) . badSink ( data ) ; }",1
public void T8IEKRC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void SUXB937G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void XRM4Z7MB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void C4LOVF1Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void A0S7MHXG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0AYFG0OB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 63P1EW7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_52b ( ) ) . badSink ( data ) ; }",1
public void S0CBQCW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JXHKGC8G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 09J2MQYB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 0I4CJFNSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_52c ( ) ) . badSink ( data ) ; },1
public void V6I2OWRG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 5A7OH9XB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void 31K60N1Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FD3GTEHG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void L2LM2UAB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void UE955NC ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_53b ( ) ) . badSink ( data ) ; }",1
public void 0TI7222 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0H1RDQ3G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void L6B9TQZB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void K06ZJFGSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53c ( ) ) . badSink ( data ) ; },1
public void RVLBMKLG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53c ( ) ) . goodG2BSink ( data ) ; },0
public void R7EOGSDB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53c ( ) ) . goodB2GSink ( data ) ; },0
public void G18X1A6Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53d ( ) ) . badSink ( data ) ; },1
public void M3C4HESG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 9OQBUL6B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 0DTJJHPSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void SS4OX21G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0C8XAA8B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 10WJZ4Y ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_54b ( ) ) . badSink ( data ) ; }",1
public void XJ0PKLO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void H784WAEG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void WSO9WEDB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 804WZU6Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54c ( ) ) . badSink ( data ) ; },1
public void R11AGRTG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54c ( ) ) . goodG2BSink ( data ) ; },0
public void JIHW7ACB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 59LG28KSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54d ( ) ) . badSink ( data ) ; },1
public void U47WLDVG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YRZ57B8B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54d ( ) ) . goodB2GSink ( data ) ; },0
public void MVG1SFMSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54e ( ) ) . badSink ( data ) ; },1
public void 5CJ3V8ZG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 8QI2TCGB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__database_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void 6TBMNO4Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void YZYYGCAG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void E0HEP1LB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void G6BJHZQ ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__database_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void W2W6DTM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QCO6A34G2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__database_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 6OFN9KRB2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__database_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String NKBKSTYSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String H7HYNQ0G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String RBE1GMGB2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"public void V92TQCU ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__database_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 2OM6E1U ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void G4DMNIYG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__database_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void THQY3YWB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__database_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void 8HQ7UROSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 66JM71LG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void HBUO6QNB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 5E0HWKH ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__database_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void PAR1IET ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0WN1OZ4G2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__database_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void N7HSSY6B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__database_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void CH04IOPSink ( CWE606_Unchecked_Loop_Condition__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void OPLVK3QG2BSink ( CWE606_Unchecked_Loop_Condition__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void NPRI5PIB2GSink ( CWE606_Unchecked_Loop_Condition__database_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void K53TZ8L ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_68b ( ) ) . badSink ( ) ; }",1
public void 5MOOJJT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BOIL0ING2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void Y3U8UI8B2G ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void K0HDDI5Sink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__database_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QAQFVALG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__database_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void NYY9OO5B2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__database_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void EEIIKLM ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void YYKVUIV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void P2CHVFYG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__database_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void XCK61B8B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE606_Unchecked_Loop_Condition__database_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void CSRNMFJSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void ADDM5FVG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void AOR7XJXB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ZIVG5P7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_72b ( ) ) . badSink ( dataVector ) ; }",1
public void U3AQ9YP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WRQXQF0G2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void U7WMWV2B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void 0ZOEWFXSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 4OXI6ZYG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void R92HW39B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void J6MKLY6 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ETSENNY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void W9WYMFIG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void LEO22B7B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void SF3033ESink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void W4LEXHGG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void PEJDR4WB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 6OK1KVO ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 78ZMN74 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void P4Z8Y0NG2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void QBE5W0XB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__database_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 524ZR3CSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void WOZO4X0G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void UMLIX2IB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ADFVE5F ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__database_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 15DF54I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UJDUJZDG2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__database_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void S5HJZN5B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__database_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GRJMDMISink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void IP4YGQXG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 6UP0RO5B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void T76LDFQ ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE606_Unchecked_Loop_Condition__database_81_base baseObject = new CWE606_Unchecked_Loop_Condition__database_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void S2B160P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void XBZPU4JG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__database_81_base baseObject = new CWE606_Unchecked_Loop_Condition__database_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 41F7D8JB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE606_Unchecked_Loop_Condition__database_81_base baseObject = new CWE606_Unchecked_Loop_Condition__database_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void G4GYQPG ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void XG37BYU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Z0R8E53G2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void G83PG3XB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void BC2M9GE ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void NNMJ9R9G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VM70R0KG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZMLRNNJB2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1Z4T5MLB2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void Y23QIEL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 26O6CLG ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 57LQ23PG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5CN46WVG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5JX7A07B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void O2F40JRB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void FJ8IU5A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 6IWBCSA ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void SJRPHOYG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BJIZNMWG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4CPYFUOB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void AJIDD1MB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 8EPOLGF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void Q1HSI02 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void G1UG7MEG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XXV1ERNG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VNJYKK2B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 40GA9OCB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 3X9L4B5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JEURAIX ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void ARJNAQGG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DHEOYK6G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2RFUUX5B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void CSLN4FVB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void HPZJ4IH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void M1VPBKU ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void URFI0AIG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8W7F7P3G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Y3ENWA4B2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void KE9N8WJB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 641OWVS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void TVGO2JC ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void W8A1DFQG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 6U31QBZG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void KXWDCHDB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 5C5B6LGB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void IAI175N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FT6OVPW ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 8R3LDDTG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void SOU2LGGG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PO3BVY7B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ZYR21WBB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 0FCGZFA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RRU0B9B ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void ATKUB2CG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NM6E9QTG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void J60HBTWB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 89T67MUB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void WT7REYF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MVN3DZJ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 5V8I967G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void U1927UIG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void N40C52CB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void KQGCLGGB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void DGBJHL6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JXXMUG4 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void PEKZS55G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void L96BS68B2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = System . getenv ( ""ADD"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void LUJC85M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void S1KWYXE ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void M5PZB0EG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7D2CU8TG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VOK45REB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 019X7J6B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void CK32F3Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9OQ6HCR ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void EKD95LVG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void FVV0MEQG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4WCL6J3B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void EYMGLULB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void QHPFJKO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CY2ZCZR ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void SCY3LWRG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void CUXXRO0G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void BZFSFZPB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void TDXQV0AB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void ZDSU80V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void HHEMYJX ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void 7OLRRO6G2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void 5KTLSO8B2G ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void 1HSLO08 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void XHGNDSQ ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void PLBP0Z6G2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void G7GRKKYB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void XMHUYQ9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void T445FDH ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badPrivate = true ; badSink ( data ) ; }",1
"private void 9QEALVUSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void HHMC2SO ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 098S4CJB2G1 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 2CR0YJHB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 6SJ0C1YB2G2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void B6X4K7NB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void GSA5FDRG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void XKQOWSCG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void C48ZQSP ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Environment_22b ( ) ) . badSink ( data ) ; }",1
public void SNPXOU7 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 04P022RB2G1 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__Environment_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 14EXGCAB2G2 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Environment_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void BQJJWI5G2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Environment_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 0YH7E76Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Environment_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void IYVYRQ5B2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Environment_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void C09YGIIB2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Environment_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void 3L35VXBG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Environment_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void YDOZH2F ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void A8EOY2B ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void FGVRA7FG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZF04FV9B2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void QKLHCDCSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void NYRDNCE ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void AO729AF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Q463K7CG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void WQTHGNSG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void UE3TR0AB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MJGTAASB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2GSink ( data ) ; }",0
"private String X6HQZ3PSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public void CYABXLR ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String 0PQSVB9G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void ZZWVN1VG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String B4MIAT2B2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"private void 2SH1EUYB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void 0O69M3M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DJN2XRDSink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Q20U481 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void KSVOALT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void NOL3ZJVG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void VZ9AA21G2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void 7CV1Y6XB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void U2DBXUTB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 7M2AIQL ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_51b ( ) ) . badSink ( data ) ; }",1
public void Z2GMFNL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TKXMNH8G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 6SGB03RB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void 4O1LUBDSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void HCFFOMTG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void DDOTRTUB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void AJ9IV5L ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_52b ( ) ) . badSink ( data ) ; }",1
public void Q0RTPKZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EMWRVS2G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 4DCL5B2B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void PTLA4KSSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_52c ( ) ) . badSink ( data ) ; },1
public void 95WOSYSG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 595CIDVB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void 4243702Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void N1D0E3DG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0E8XW53B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DL05VYD ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_53b ( ) ) . badSink ( data ) ; }",1
public void 4I1WG5X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KVI92ZGG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void BUMJY1WB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void GO87RVGSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53c ( ) ) . badSink ( data ) ; },1
public void LYI89X3G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 9C2UHMYB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53c ( ) ) . goodB2GSink ( data ) ; },0
public void GMAVU5LSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53d ( ) ) . badSink ( data ) ; },1
public void ZPBCRN2G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53d ( ) ) . goodG2BSink ( data ) ; },0
public void PAX94R1B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 07YDRRASink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void I4LMA3SG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void G87NJI0B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void TN132Y0 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_54b ( ) ) . badSink ( data ) ; }",1
public void 3KD9VG7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GYHEWRUG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void W7BLVTTB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 447ILZMSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54c ( ) ) . badSink ( data ) ; },1
public void W04J2ZPG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54c ( ) ) . goodG2BSink ( data ) ; },0
public void T3G5U9SB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54c ( ) ) . goodB2GSink ( data ) ; },0
public void DTA7IAGSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54d ( ) ) . badSink ( data ) ; },1
public void W9VG89WG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54d ( ) ) . goodG2BSink ( data ) ; },0
public void CPERJ42B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54d ( ) ) . goodB2GSink ( data ) ; },0
public void FPLBPB1Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54e ( ) ) . badSink ( data ) ; },1
public void LRMC6D2G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54e ( ) ) . goodG2BSink ( data ) ; },0
public void TZVM880B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Environment_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void EEKCB22Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void EUOQ1IVG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void LREZB53B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void A2VHDOU ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Environment_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void MJAHX3X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8HPMZE5G2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Environment_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void HBGJKSQB2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Environment_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String OR5W9MZSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String XEKRDLTG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String P0D4H35B2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"public void 5907JWA ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_66b ( ) ) . badSink ( dataArray ) ; }",1
public void KOIX1I4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void MZ56AGMG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void YTA8CKUB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void RC7MSI5Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void WFMVFMCG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void MTIIKQVB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ZG4VP14 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void TZXD61S ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HNRNDYRG2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void RZOA01VB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Environment_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void Q0INKPWSink ( CWE606_Unchecked_Loop_Condition__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QVKIURAG2BSink ( CWE606_Unchecked_Loop_Condition__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 8L39UNEB2GSink ( CWE606_Unchecked_Loop_Condition__Environment_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void YTWV7DZ ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_68b ( ) ) . badSink ( ) ; }",1
public void APKPWQ2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 820E4DKG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void Z0KZMT5B2G ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void FOTFPCASink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Environment_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void OBAZZKRG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Environment_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 1ISG5F6B2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Environment_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 97T748B ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void XUA16D2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZTNNVIUG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Environment_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void ADA9D7YB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void 1ZHUU8ZSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void C49JEIJG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void QY276MEB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void Q7MGMID ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_72b ( ) ) . badSink ( dataVector ) ; }",1
public void I9I0C6O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void F9CDJ6JG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 14F0IK3B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void 8WQFCWOSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 4J6CKK5G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 5BO7L6FB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DW92GOK ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 8YM8XGI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E5KUMD7G2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void V7JN29UB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void OYW7XJHSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void T4S0KI6G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZMU7EMAB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 0LQVLV6 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GM6GFLY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void L0RPMO0G2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void CN9RX4CB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void KVF5YXXSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void V7WMJ76G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void NKRSGX6B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void Z6ACJJU ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void JUKK0X4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1I2DCC0G2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 6FLM5GQB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Environment_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void XAFARQHSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5EJOCTSG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VYZ2L2FB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void WAH9SW2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE606_Unchecked_Loop_Condition__Environment_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Environment_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void S0C7NYU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7421XC0G2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__Environment_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Environment_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void JJ9RD3FB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE606_Unchecked_Loop_Condition__Environment_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Environment_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void 1F1HUAN ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void 9YUGR6X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WP6HVL2G2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void GLFXIRCB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3GIP9UA ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void EB1M9THG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 51EIAREG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DN8FLCXB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 9QSPJV4B2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void IYC3SIH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QRUXY0E ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 1SR7D2AG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HYIPUFBG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2Y3D3PDB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void AG3C4CAB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void OY06Q1Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NZ7852S ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void XP0CGDHG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 55ZIF7KG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9HT3JTAB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 24TO49TB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void VIXC5C1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0L5NQLB ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HZZ1FDFG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void KQJLFALG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ICRVDQPB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 082XQOYB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void LPDIF8T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UFQ4S44 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void DXL6W1NG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HN2213YG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VC5K7V9B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void JOLBAY8B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void FE6LB6C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void H13RP04 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void S87NJGJG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LVESHHUG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void I5SKOCYB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 7RAUS8QB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void TRIXM3I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1EET92V ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HGSJM33G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void D7B6DQ5G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void OKMWMQTB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void J6RHQYAB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void DB60A8K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DFEZ6RS ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void GX8GA5IG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void N9FR7A2G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 3JNY4C1B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void B1LW9Y0B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 3JZGFW2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void XZILS6K ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void QXNGQFHG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8ZEOURBG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Z9OR1Z6B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void EFTI212B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void IR1L533 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void E5K2XAR ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void JG6RPB3G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8LO96E8G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QLQT185B2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 0EEW1WDB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void YDJ17KQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WHYLCBE ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void TLACNV2G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4XLB5RVB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void RFWAT9H ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 2I0ERCT ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void D73I8HEG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void I8WN4HSG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void GES651TB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 327QAHVB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void ZVVVHOL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void V0HKJO5 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void FQ1UUXGG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void T8TSHE6G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void P1CP2HZB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 6PAWCTEB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 6F0BM2U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FDRA0Y4 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void TON7EGXG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void QHQ88E7G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 7EKFGGGB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void EZ4CDBFB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void YUNEZD7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UV3BU97 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void KGUFF4GG2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void 40I81TXB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void 1BE5QFM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void Y37UVO9 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void JPH47FYG2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DOL5Q9JB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void UFTYOKQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void HC5UQW9 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void VI8MR93Sink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void 807ZS7J ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 4CWRQMKB2G1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 0W17FOCB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void EY5WY52B2G2 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void LTVBO6RB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void B02GSSCG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void 7JJRYQRG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 1V2IN37 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__File_22b ( ) ) . badSink ( data ) ; }",1
public void VSDRKBE ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void MTK04LFB2G1 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__File_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void MC8XZTKB2G2 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__File_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void XMZ0IDZG2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__File_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 6XZO6WOSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__File_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void NG2UCU8B2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__File_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void I1V73A4B2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__File_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void MJ7BKYMG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__File_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void 4ULKZNX ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void YIHYWZ2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1TOKBABG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void D6SZ63LB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void FX8SHR6Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 8PXZLZE ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 7V9G9Z7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9N83GH7G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void FZ2K09NG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void 17TN2CPB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MHBWIIDB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String XICOK7ASource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void FN5TKDZ ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String 2UWLY3SG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void YWPRPE4G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String RLPKBEAB2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void 09LIX73B2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void OI69NH7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void H0JZ4S4Sink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void YKBHX3E ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 8V1UMQJ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 93YEJDNG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void ZCV9OF8G2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void K0Y2ZDNB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 54DCCMHB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void RJL0F6D ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_51b ( ) ) . badSink ( data ) ; }",1
public void JCHYBUP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void P4SBUQ6G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void QQSIDMQB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void K7S6KMWSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void C1RRSJ1G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void SBCITL0B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void GINY7CJ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_52b ( ) ) . badSink ( data ) ; }",1
public void W7JUNFD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6TJ8IU5G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void LZNZR71B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 4ABDK4USink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_52c ( ) ) . badSink ( data ) ; },1
public void ZUKCXKBG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_52c ( ) ) . goodG2BSink ( data ) ; },0
public void QAO0ZR1B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void EW4IZIASink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 3BZBGSZG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void PR4BC3CB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 6PEQXZ9 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_53b ( ) ) . badSink ( data ) ; }",1
public void 0YQ191M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RIV9AJMG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void Q7F1T8AB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 2MFAD9PSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53c ( ) ) . badSink ( data ) ; },1
public void P6AHH22G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53c ( ) ) . goodG2BSink ( data ) ; },0
public void T3UN7Q5B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53c ( ) ) . goodB2GSink ( data ) ; },0
public void P8GC6TJSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53d ( ) ) . badSink ( data ) ; },1
public void IOYTWDBG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53d ( ) ) . goodG2BSink ( data ) ; },0
public void R63JUYSB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void WBOAL5HSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void WOZG8QMG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JK43LHZB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 2OVCFMR ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_54b ( ) ) . badSink ( data ) ; }",1
public void IF6IF39 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1DMEGNNG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void K5XCKAIB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 8R1FQUYSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54c ( ) ) . badSink ( data ) ; },1
public void 4QV9ZL0G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54c ( ) ) . goodG2BSink ( data ) ; },0
public void AJX9G7FB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54c ( ) ) . goodB2GSink ( data ) ; },0
public void CILLC0DSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54d ( ) ) . badSink ( data ) ; },1
public void ZUPT9R7G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 4F2QAQSB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54d ( ) ) . goodB2GSink ( data ) ; },0
public void S5J5I3SSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54e ( ) ) . badSink ( data ) ; },1
public void I81LQ3IG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1M4EPTYB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__File_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void SSCIT8HSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void D2AETK0G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void C3AMMROB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void TRBKFPX ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__File_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void A940B52 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void G99YN8BG2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__File_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 30WYAXZB2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__File_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String L3NJJ6DSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String LMFTRFGG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String I7SQSALB2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void DHT49RR ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__File_66b ( ) ) . badSink ( dataArray ) ; }",1
public void AJT9CBK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void W1TAIAEG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__File_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 2CGAYD6B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__File_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void 0Q54UPJSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void VAYOI9YG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void PTUY5B6B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void F5XC3BX ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__File_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void T6DCFUG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void FKXZIZXG2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__File_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void ZUNYAH3B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__File_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void 4H8VISYSink ( CWE606_Unchecked_Loop_Condition__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void W8LF21MG2BSink ( CWE606_Unchecked_Loop_Condition__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void FO7YCCHB2GSink ( CWE606_Unchecked_Loop_Condition__File_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void QAGDBP7 ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_68b ( ) ) . badSink ( ) ; }",1
public void OFR2Z0Z ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DFSTKRBG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void P65NQCLB2G ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void HVTFQO5Sink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__File_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Y0AREP5G2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__File_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void AHZ13FYB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__File_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void T0EG1PZ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void Q3P1Z4V ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1OEF9RQG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__File_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void C62UYB5B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__File_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void UHWBH52Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0HIRIQYG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void HBRJEAHB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void IS3ULJS ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_72b ( ) ) . badSink ( dataVector ) ; }",1
public void R23HRXC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void I29EE5DG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void K0FTCOTB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void GPAMABISink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void THRWWE4G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void KOA0DWRB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void LOYO89I ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void KXB8605 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E9862ZHG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 03HRNF7B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void G0RFDSUSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void BIYEBXAG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 2ZF43KKB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void KKGT60A ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void BEDF8WV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JV4MECOG2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void FFB6Y5YB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__File_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void YDXH7D7Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void XX79QD0G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void YQ8R0DWB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PJ00PIV ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__File_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 5LXXZTP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void U33OB51G2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__File_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 0T1FEQ1B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__File_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void L867CPQSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void Y4NAENNG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 4EKITB1B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void TYZOREW ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__File_81_base baseObject = new CWE606_Unchecked_Loop_Condition__File_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VRSNAAV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JK3AU6XG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__File_81_base baseObject = new CWE606_Unchecked_Loop_Condition__File_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void YVCZ1CMB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__File_81_base baseObject = new CWE606_Unchecked_Loop_Condition__File_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void P20LLP7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0U1MM73 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void SBD80OBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 1PT1ET6B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 7DDYUFN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 5ZF8NDKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VY3TANNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void S77LTTCB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LWNATECB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void VSHSZBH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void YQTOBEK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void H3B8VVJG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void KV4TJ7ZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 3IMUT9WB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3P3H57FB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void EFX93DT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void H6REM8C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void Q8Q0URCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HTJUP6GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CY7M0ROB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void KA65JCVB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void HIFXU1X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 2EMC7VZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void LT0XRCHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WUKEB87G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IGCQSW5B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 7LCF9T1B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 7RLAVBA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void KJIJ0MI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HS0UGQXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A3EN3TXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WTWP92EB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LI1DNBFB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void ZO0A17U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 4VRCXYQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void UZYKGHZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void K72MIZ7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IK22V22B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 4R5IOELB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void MKMCEAO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void K9G520C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void BXG9DRWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void U32Z60LG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void E7WZUGWB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void B1CNV0MB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void FGUOEK8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void JS9XOZQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void BYVG1AMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ED5B637G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CTFU3W5B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 0U8IBKJB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void XFDPCQR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void XB7QX5D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void H4SWBDWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5Q4PKU6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZH8RPQ5B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void FZTZ3FWB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 9JIREJF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void Y66IX3R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 4FFLRH0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void H2WXJFYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4BRDLWEB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void RX58IKUB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 13FPO8R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 84UNF2D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void XO0GF73G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BRYB3O7B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void LHV46Q0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void QB9SNHB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void PY8UJDHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0705UZIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void H0YGADGB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void U46LLVDB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void SN5M0SB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void XHX3AGQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 3S64Y6YG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PXEZA1PG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QG7F04VB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void OOOJW6CB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void R2FZSVX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void NW4LMBG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 1IVD9QQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 7H7VRDQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 4F28YAIB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void KATOHXKB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"public void IX6825G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void U5YIYY1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void IU7ZUZKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void 1BYDO6CB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"public void DVP4RV9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void VM0S42D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 788UP9UG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void POTQFQNB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void YCF5MVL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void LO5WVPY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badPrivate = true ; badSink ( data , request , response ) ; }",1
"private void 50F0N2FSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void 1RZXFAM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void PS2ASDSB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } goodB2G1Private = false ; goodB2G1Sink ( data , request , response ) ; }",0
"private void DHFA5YTB2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void VASQ6D2B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } goodB2G2Private = true ; goodB2G2Sink ( data , request , response ) ; }",0
"private void HV0FVASB2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 8SB2AHXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data , request , response ) ; }",0
"private void NOWRMAMG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void LEGUU87 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22b ( ) ) . badSink ( data , request , response ) ; }",1
"public void KMET8W2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void 37SQRN3B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22b ( ) ) . goodB2G1Sink ( data , request , response ) ; }",0
"private void FB8BS5XB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22b ( ) ) . goodB2G2Sink ( data , request , response ) ; }",0
"private void CJHO53AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NR513SLSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void TQ33P9QB2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 33V1BN6B2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void 8C4NW9YG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void FK7DGJ4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void 047DB9U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 70UPD9TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZB1WDDRB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void TCEYPEJSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void ORANBTB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badSink ( data , request , response ) ; }",1
"public void 5CA46AS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void T8GTFECG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void IJFNTN5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data , request , response ) ; }",0
"private void 53P7Z4KB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Z3RN6DTB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } goodB2GSink ( data , request , response ) ; }",0
"private String X90G5MOSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public void EOS7RQ4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String LJBTXPXG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void OJ907VQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String 8C2GXLCB2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",0
"private void I02VM0PB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void VVM3D3U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void RHTS82ZSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 4AR0ZLT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void 9DER3YU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void S94NS40G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void R3Z5F01G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"private void 8BE5EEYB2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0MYL2NWB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataGoodB2G = data ; goodB2GSink ( request , response ) ; }",0
"public void I4BEZKM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void E5BKGVH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 87WQ1FKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void VBT458RB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_51b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void CJ35DZESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void CUVKM3LG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void RRADCI6B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 867CPB4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void QCZ8FCF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void XFI9RXJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void A5QLT33B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void EEP7WNASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void RYX3DUNG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void U0WAIHJB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_52c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void TBF4540Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void XH0EQ8QG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void LXVPWD5B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 5R5POSE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 05YATS7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void QMRJMAAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void 4RRFEYAB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 424FF9OSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void T9JI8JHG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FFL0PUKB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 3V5JVV3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void Z5V4618G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 93RZVG6B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_53d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void FBXQU1BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 9O7MKIZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void X862YM0B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void MUI01M0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6ADR5F0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void UGQ4XS1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void XVS14A4B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void BEGGT73Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void CP89AWHG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void AAY0IYUB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void MRLWOM5Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void R5UE5KAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YWTKTEVB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void QWMRO2MSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 47CMF1PG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8FRINBDB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_54e ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void BX79ROWSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void XS5Q7VTG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void F6L015VB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void STKBOOZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_61b ( ) ) . badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void HCA09H2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void GUTSYTCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void ICC5H4IB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_61b ( ) ) . goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String JZZMV26Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public String ERJKSWUG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String MPZ9ZK2B2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",0
"public void 9093VM0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void NL9K0EW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void WMTII3HG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"private void H9G8KLCB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_66b ( ) ) . goodB2GSink ( dataArray , request , response ) ; }",0
"public void 1MCSZ15Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 8YYUVXIG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void SWM8B12B2GSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void JEG5OHN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 3V7OJFQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void RGBX6ZNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"private void 0RGATZHB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67b ( ) ) . goodB2GSink ( dataContainer , request , response ) ; }",0
"public void VAR4E4ZSink ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 2FB3MIQG2BSink ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void X7M5CWCB2GSink ( CWE606_Unchecked_Loop_Condition__getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 99AIQX2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 4EO14IF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void DX6LXLCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"private void T31ZT2YB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68b ( ) ) . goodB2GSink ( request , response ) ; }",0
"public void YH6DCENSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void VEBMCR8G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 3OJIIFJB2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getCookies_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void CBGYFAK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void Z7CFNCV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 7TGQW0KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"private void 272ZCTNB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_71b ( ) ) . goodB2GSink ( ( Object ) data , request , response ) ; }",0
"public void AI65YV6Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void RMP7JEFG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void D0HFRDIB2GSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void ZUPRPC1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void PKIUN67 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void S5KT22MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"private void JMOZ1ZMB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_72b ( ) ) . goodB2GSink ( dataVector , request , response ) ; }",0
"public void GDS5O21Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 43XJTWKG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 75VX906B2GSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void B1RZZJ0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 95NG0IA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void INCFRB4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"private void GBJZRKZB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_73b ( ) ) . goodB2GSink ( dataLinkedList , request , response ) ; }",0
"public void IKPUO9KSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DU04CHUG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 5FJEJPFB2GSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void D4SD20F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void L0ONKO1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void V0XVLLLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"private void D0NFSIZB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_74b ( ) ) . goodB2GSink ( dataHashMap , request , response ) ; }",0
"public void CEMH0N4Sink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 85INBI7G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void PM0DR8QB2GSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 5OURT46 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 1OYZTEA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void HT5RTM6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void X9P8LXVB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_75b ( ) ) . goodB2GSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void L02PV23Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 2TJKSKMG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void GZUX0OQB2GSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void E1XR2A7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void MINXM6S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void IK2DUHNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"private void 1LYE5A9B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getCookies_Servlet_81_goodB2G ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 5WMT7Z3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void V0WC4K1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void N61VHQNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 1DEQ3I3B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 5FMC4R2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 2FXZD3UG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PKJ6Y3AG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8EX0TIIB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 036ABHXB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void L0P3H1L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void NV5RH6G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void TPXSRUVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 6S7W9OBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 3U4DJ6WB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LXP66VDB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void U2QVNHM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void HZO7G5E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 066V8J7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 16O9GY4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JZO5PDNB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LO3DSTZB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 6EWS59G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void MGBW5VL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 8AYS9UKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void OG5V1QPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JOQYLNTB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ATXNUQPB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 4KVDPHI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void NROCGKN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void VVCQ1QRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BKDLX1ZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A005DIVB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 8ZMUFPGB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void RBX8EFR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 9CYDN3O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void U35L3QNG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HZHRTC3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 49JIOLDB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void L8K1CIPB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void H1XNU5F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void HDTB8SY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void KEWZOPUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IQRB6CIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void WRQN71ZB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void JPHFWHGB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void QPT3NC9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void QH8M5E7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void WSQKLNVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void O2Q0BLOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Q41YKDCB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 9W56NCCB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 8LAHB56 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void AW2G35S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void ME1AE0UG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DAETCVGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A3E85TWB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ARX50FGB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void IJKT5JT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void HLAXBLA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 0YF2PC7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void D9KJAYSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void W1BOWJGB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DFROIADB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void W332GH7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void LVKIVQH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void VN41MC7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void N2GOFVKB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = request . getParameter ( ""name"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void KVEP9C5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void OPU68BU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 55E2RIJG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void OVLXJT3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XJQJORTB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void L1GJJWHB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void HHORTC6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void WBDM6C2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void PUOCPB2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void FPT8687G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void UHIWXNSB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void M5SVLZ8B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void VNPQL1M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void OYLPGX0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 4AFE05KG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 3T2FW2KG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 9TQIJFUB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void GBCK0NMB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"public void RTSIIHX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 3YGHUAT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void 1GO6E4QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void 5C81ZMSB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"public void N4IJ545 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void ML2XVCQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void BD8N75LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void SJMFINSB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void CBURUBC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void M3MVPFD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badPrivate = true ; badSink ( data , request , response ) ; }",1
"private void HTRN1QHSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void X8XCBQG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void 7W7IQW2B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data , request , response ) ; }",0
"private void CTWMN2TB2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DQ4YHPRB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data , request , response ) ; }",0
"private void OQ3L16ZB2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void JGBUP08G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data , request , response ) ; }",0
"private void BRWTPZCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void I7BG3TW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = request . getParameter ( ""name"" ) ; badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7F19DIJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void O568PIYB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = request . getParameter ( ""name"" ) ; goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22b ( ) ) . goodB2G1Sink ( data , request , response ) ; }",0
"private void S9AZSTHB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = request . getParameter ( ""name"" ) ; goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22b ( ) ) . goodB2G2Sink ( data , request , response ) ; }",0
"private void E3T2V5TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 329XUHTSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void EBMTNW3B2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void YTTB871B2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void H4WVCB2G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void GWB0CLQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void VCGDF37 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void FIFN37BG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IR2XQBCB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ZW2QGNISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void KJQ9XU1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badSink ( data , request , response ) ; }",1
"public void M5EAQN7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void DFPQXBIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void MV01MT3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data , request , response ) ; }",0
"private void OCRAITSB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void L73ORTAB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; goodB2GSink ( data , request , response ) ; }",0
"private String 7UWDYYPSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public void MOLG7AK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String RX6498DG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void S2Y77MLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String ZSEMJVQB2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",0
"private void N13ESIMB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void GNC5KTJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 6AJLR5JSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void XVIB77U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataBad = data ; badSink ( request , response ) ; }",1
"public void 03ZVR6N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void W6G0DQJG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 8FZG3YHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"private void OESEIYBB2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2EN0OTQB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataGoodB2G = data ; goodB2GSink ( request , response ) ; }",0
"public void ZFEQ8CI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void FHAVZLC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void LT84FMFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void VIU0CI6B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_51b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void T3GVMMKSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void HTNW3IDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0DP6G0VB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void B3YMI4P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void Y9MCDTI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 7XTESEMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void EIKQ5BLB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void SXKKP54Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void XBK5EMFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CA3GC7NB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_52c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 9LE3UF5Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 9W7EEVEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZKO0UYXB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void LX3W6OF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void IV7LK1G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void EGRRXJLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void HZJ311ZB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void DRBDQS8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void WL4O3YUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YRU7HPPB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 3P9Z57USink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void DIOJVUFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WCA7MAVB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_53d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void YRRBQK4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 5H35BF6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 81MRAF8B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void LFIPSBZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 8DYINZS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void ONDEWOJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void 617U1VDB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void CPYQLD1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7UQTGF6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void I1PIZ6LB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 1BE7UI2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6GW461JG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7NAVANSB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 35C27U2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void KD3WTX7G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 3TP0TD7B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_54e ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 55WCRUWSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void H50HJGLG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 4LK7AHCB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void WABYMG7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_61b ( ) ) . badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void X1R3UM3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 43L4X2XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void EPJ8EF9B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_61b ( ) ) . goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String 9FXB1PYSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public String 2V9FIFMG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String 8IEEL5WB2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",0
"public void KL0Z8MJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void RTRTY06 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void KNS4BH0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"private void RBD6NYEB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_66b ( ) ) . goodB2GSink ( dataArray , request , response ) ; }",0
"public void 3431UEMSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 9UK8GVTG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void O8C1FKJB2GSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void QC2W1M9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void VJBV4YI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void T74I6OLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"private void AWS6N8TB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67b ( ) ) . goodB2GSink ( dataContainer , request , response ) ; }",0
"public void DTHNTV1Sink ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 785T0DNG2BSink ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void I98DZJGB2GSink ( CWE606_Unchecked_Loop_Condition__getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void R9S3SB2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void XL3WMMJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void U9GFVF0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"private void JDASORTB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68b ( ) ) . goodB2GSink ( request , response ) ; }",0
"public void 5TUGGFLSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void KOCIHB3G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void UCUKKJ1B2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getParameter_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3CYARA6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void PB6D4R6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void MKR4SNUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"private void PW37CEQB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_71b ( ) ) . goodB2GSink ( ( Object ) data , request , response ) ; }",0
"public void 9ZXNQAASink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void JH58OTJG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 6SBFEFRB2GSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void HDX77LB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void VXFTD8L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void OC59QG5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"private void 1TMLGJ9B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_72b ( ) ) . goodB2GSink ( dataVector , request , response ) ; }",0
"public void SIHZW6BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void UHRCBQZG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void GGFUL9SB2GSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void B26V3WP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void HKVB1TQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void HFMUOGSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"private void PR7EUBOB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_73b ( ) ) . goodB2GSink ( dataLinkedList , request , response ) ; }",0
"public void GU7HVUJSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void R7YKPMMG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void TYQK8QCB2GSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void R7BLS9M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void QHXHBPG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void A82L1W5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"private void JEDZGKQB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_74b ( ) ) . goodB2GSink ( dataHashMap , request , response ) ; }",0
"public void QS3XQ6YSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void TSIWMEZG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void DGYA2NWB2GSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DTCJ6GR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void SU4OREX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void Z2LFWAHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void BTTL16XB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_75b ( ) ) . goodB2GSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void FR8NMCCSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void D3VDXHPG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 5EAZ9BTB2GSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void ISEPO3B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 0NQDGT4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void VAC0UXCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"private void APIRCD4B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getParameter_Servlet_81_goodB2G ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void N36E5E4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 9EUADO2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void XKYRNUHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void TFURJ9UB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void HH24TDO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void RGE8INLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QS0NS93G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void R9UB95CB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 6J1YZSOB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void MR9G0TM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void AHXUCQU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void K289ATTG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void O176ZLKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9KY6IMYB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void QBQK56HB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 0PZ99KC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void GI32NNM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void P8TZLLXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IAP56FOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BHDXSM7B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DHQBPM1B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void ONFC281 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 7GD591Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void MBRPUGGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ADAYQT3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VBX1VK4B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void K8IH4MPB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void AM9O5H9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 8NQDPUX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void CUERN0ZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 36MX9TTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VY7CZUYB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void I5XQHJ9B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void MWMV1CW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 45YQ81B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 2OJGRFUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A6AMNY9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Z4K04QLB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3018NK0B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void FZZX1BC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 2ODZL6A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void VHZY5IFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 79EV71VG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void TC28R40B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3FFGB04B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void FYJ4WQA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void 705JB5Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 3BXTGX7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DC5C1LOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Y1UKGMQB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void XMFD4C1B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void LDB1OLE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void BPJDQ35 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void WJR03Z5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MJKIS6XG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JV5ARE1B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void SNYHPHMB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 3843AG0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void IRFO9BB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void JVW01HYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CODNAL9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 06POVLSB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void V8FK8C7B2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void FE2Q683 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void OMC1GZY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void N77O0ICG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void UZ6ZG8OB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void OY44MKX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void H59NWLN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void N85WCT5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MOEEADGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A5UN9CKB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void LFWVHGIB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void ALBMKTN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void JVAA17Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void UVMOM06G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void KJ1GRZJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 495MH2MB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void X34H9NUB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void AGVS40M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void H02Z106 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void BRH06JKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void OKHOXQ3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void ZJU7SUNB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void 5TSM1AVB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"public void TJ01KUI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; }",0
"public void HDSE85U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void 3QWM99HG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void DZZN2HEB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"public void HFGWTCT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void UOD49GS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void CUGPPFMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void EKVYHRMB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 3AP97BE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"public void X2OHZQP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badPrivate = true ; badSink ( data , request , response ) ; }",1
"private void UD0QVRSSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void NLHX5NX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void 1XDY2M0B2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } goodB2G1Private = false ; goodB2G1Sink ( data , request , response ) ; }",0
"private void EAAPM7NB2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void UOB4K0VB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } goodB2G2Private = true ; goodB2G2Sink ( data , request , response ) ; }",0
"private void 8Y5X210B2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void PDVK63NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data , request , response ) ; }",0
"private void 2AAE000G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void N3WXV5I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 0W00Z3D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodB2G1 ( request , response ) ; goodB2G2 ( request , response ) ; goodG2B ( request , response ) ; }",0
"private void SYWED6ZB2G1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22b ( ) ) . goodB2G1Sink ( data , request , response ) ; }",0
"private void O9YU8ZAB2G2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22b ( ) ) . goodB2G2Sink ( data , request , response ) ; }",0
"private void TNOYGM7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 58HM3PISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void C2KXH2NB2G1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void YWPOWQGB2G2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void V5R7ZN7G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void 47O9HFM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"public void HU9XZ1R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 8C57WJTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void P3Z8RPBB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1J5VEGZSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void BVRW1ZI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badSink ( data , request , response ) ; }",1
"public void QWIOECD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void CJCIF0TG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 2P3LWEEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data , request , response ) ; }",0
"private void 0TOFJ71B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void V3JLNHBB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } goodB2GSink ( data , request , response ) ; }",0
"private String L9JDYYISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public void NMCQE8I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String N915T54G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void 53BGSM4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String XKZCTJGB2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",0
"private void B7R6IPLB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void KH7FT9D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 5XBU52TSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void A2ZLPT4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void Z8V1RD7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void WVQJJKAG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 8B91ACSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"private void I08DBOKB2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XIJI5OTB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataGoodB2G = data ; goodB2GSink ( request , response ) ; }",0
"public void 145T8UH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 8JSHB49 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void ORZ9BLWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void ZF4LEYJB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_51b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void FNYIYJZSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void B5SJU6GG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 8HGMEXPB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DIQSOFI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 68J4CH5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void BCJ0GD1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void 72J4LVDB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void DB33SV0Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7A9D3R7G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4UAKTE4B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_52c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void FJJPT7HSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void YKRCNFZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void C7FAX9SB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PT7586M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void CMPHG5B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void NE8YX4NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void C1JE7NTB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void KGV5I6ISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 123MZ8QG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6FTQCQKB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void FNU8NSOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void YCRFMHKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8B6W4IDB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_53d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 8PVUNB7Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 5SB0W1JG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZWSGUWPB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void SFXIPL4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void EHS5RN3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void FSS48YOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"private void R6US8Z3B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54b ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void 454JV2DSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4KOJN4WG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HLV85UHB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54c ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void RDHVQAGSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 88G4Y0XG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 2HFH6KHB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54d ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void GVXYZVBSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4VE3U8SG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0G87PQ8B2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_54e ( ) ) . goodB2GSink ( data , request , response ) ; }",0
"public void GLAWZE0Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FT3LZXCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void Z9SN28YB2GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void Q30Z0XJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_61b ( ) ) . badSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0L13OO9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void SNYWCO2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void PLW8PJ4B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_61b ( ) ) . goodB2GSource ( request , response ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String OUX0ILRSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public String G4ABRC3G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String TPBPXANB2GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",0
"public void 1TXT085 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 55UMF6I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void U3VU3V6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"private void 6S2Q7EFB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_66b ( ) ) . goodB2GSink ( dataArray , request , response ) ; }",0
"public void IU6NA8SSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void RNTPZKKG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 8KXE8CDB2GSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void BZUHRIA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 4E9R1OT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void UZ9R1PUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"private void FVL3EK2B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67b ( ) ) . goodB2GSink ( dataContainer , request , response ) ; }",0
"public void XHEHOB4Sink ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 362SO8UG2BSink ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void TW2KVARB2GSink ( CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void MARD41F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 393HF0E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void M8K2KMWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"private void 2DBXCPLB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68b ( ) ) . goodB2GSink ( request , response ) ; }",0
"public void 87LOEDUSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void TTP1RS9G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void RMZJG9RB2GSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void QDK24BK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void OR4AC7K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 3NB08U2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"private void 07JEVC0B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_71b ( ) ) . goodB2GSink ( ( Object ) data , request , response ) ; }",0
"public void SEAOQEGSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void UXKERC6G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void S8QXJ4VB2GSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 21TOO0A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void NZEX2KL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void LK9P0M4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"private void O7FNXFDB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_72b ( ) ) . goodB2GSink ( dataVector , request , response ) ; }",0
"public void OKZX0VOSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void B20LFQ0G2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0MUPWXIB2GSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void UD9VJDX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void Q52MWKO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void E7WMLBKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"private void 6IHA5GIB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_73b ( ) ) . goodB2GSink ( dataLinkedList , request , response ) ; }",0
"public void BB6RU93Sink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void RFRRSTVG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void KRATX9BB2GSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void FTNEVAI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void U2LHUMY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 7KFVYNMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"private void OURPCTEB2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_74b ( ) ) . goodB2GSink ( dataHashMap , request , response ) ; }",0
"public void 3OIP09DSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void AZ20LXLG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void IE20Z8VB2GSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 1SW6VNF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 6SSLGLB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void 7RUSS0SG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 1WR4217B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_75b ( ) ) . goodB2GSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 4BOYE6ESink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void C2MQRO3G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void QAKZCVEB2GSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void SER7RBA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 8RIELFS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; goodB2G ( request , response ) ; }",0
"private void LK6A0D1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"private void 693YMJ7B2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_base baseObject = new CWE606_Unchecked_Loop_Condition__getQueryString_Servlet_81_goodB2G ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void Z35E9UE ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void P5E26X9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void MS6P1RYG2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void RBN1YTSB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void YIRHHJL ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void CU4QC0IG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BLAZX53G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void YH9BOVSB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void U484T6JB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void LSTEUVG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MYG7COV ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 7ZNVIPVG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void RAJRWUBG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void RKPB3Q9B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 9XJJ2YBB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void O24W573 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9R5LB4L ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void IAS7GJQG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZKD7T1XG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 30G5Z4XB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void FIUWM2ZB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void Q6M7XGY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void K8DYIYM ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 0F0QGMJG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void MOT6T8BG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7RWEL8JB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 5ZZ6Q5GB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void OT8EGNX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VYDQCCC ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void R0YO3NZG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 48ETB49G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JKZ1KI4B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void BADBK72B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void YRD9Z3I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BL41O98 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void PCLR0MOG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5WK6Z86G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2SNSHOXB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void SEF0QE2B2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void A478236 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PJBUMVH ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void X805BGQG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QB2BR9TG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZQ5Y288B2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void DNFC66HB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void QUZVDYW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 17UH3OE ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 3W87ILAG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 1YU4F6OG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CJO4M4SB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void UDL8GGYB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 7C97BTG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LALTO14 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void KS6OZOGG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XLVZ65SG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void Z21HSXIB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 4FVXN96B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void BCNY8ZZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void Z6ST96L ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void Y8B19HPG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0U1YHQ0G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ZAAP1EGB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void WDEP5ICB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 4MUEBS8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 14J9OTT ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void XTE3QLJG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void RUHQV5FB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void SJW14BK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 388PEM0 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void AIZUD46G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void GPSS1HCG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void HJWU4KQB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ZJPGHR5B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void VOS9FJ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DBL34WA ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void J1TIIHBG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 6XGZQYSG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void RM6TS7JB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void NYY3GKUB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void GFGSREV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BLSA3LC ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void V5YEKNUG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void Y2U1LL5G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void AL9WCYTB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void 17LFXDVB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 7M7B2QD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void J49HBSI ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void PVKP7D7G2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void HKLNP7KB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void TIXEP3D ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void XPKIGDR ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void T4ISQSRG2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ENDD54JB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void IMA0Q5E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void YB8A35L ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void HUHIRMCSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void 8QWKBAN ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void Z8IPIGHB2G1 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void K7O4LZ5B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1XEG88JB2G2 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void 2XVJI1CB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 8Z51RCAG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void 8YHLIGMG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void FL3USZM ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_22b ( ) ) . badSink ( data ) ; }",1
public void 1MS04GN ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void GE3N3T6B2G1 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 8FKID41B2G2 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void CE5W3G1G2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 99ODVE4Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__listen_tcp_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void FCMR7U2B2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__listen_tcp_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 5O43895B2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__listen_tcp_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void 48G00AVG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__listen_tcp_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void P80V3UG ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void VJE7LM2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UKAQPJQG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8QNFTW2B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void MUKQZGXSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void TBTWF7P ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void HOTVGQF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O6KUJLQG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 6HSUGCSG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void DVWG1Y2B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IJ0S30CB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String UGSTQU9Source ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public void US84HMI ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String TTNBHG4G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void 1KINX26G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String Y2OV2EKB2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"private void YAH2ZSGB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void W7XBKGO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0AELWUJSink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void UG2QOQ0 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 1DELAFM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0DYYH1UG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void HFJ5A7LG2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void CQSHUD6B2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PH4JFHLB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void QTQWKUI ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_51b ( ) ) . badSink ( data ) ; }",1
public void 9GIL4VI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DEG1P9UG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VBBW0ATB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void R6S7O42Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Q2ZJYY8G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0ZOJ15QB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void B4LXN8Q ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52b ( ) ) . badSink ( data ) ; }",1
public void GDVAHTH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void FPQZCFIG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void BGFXSNRB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void G4C1Y2YSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52c ( ) ) . badSink ( data ) ; },1
public void JT4DSH2G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52c ( ) ) . goodG2BSink ( data ) ; },0
public void KR540KRB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void L91MVVHSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 99LI33XG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZN7D5BNB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void GE51OS1 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53b ( ) ) . badSink ( data ) ; }",1
public void 0FVHBNO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DDCTZ5DG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 0GIV412B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void IQGAJGYSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53c ( ) ) . badSink ( data ) ; },1
public void E5ER9HTG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 7FEU89JB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 4G36I7YSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53d ( ) ) . badSink ( data ) ; },1
public void KSH3357G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53d ( ) ) . goodG2BSink ( data ) ; },0
public void FT48YDDB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void KP5SR4MSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 7ODTKEOG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JZJWMZQB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void GXCW86H ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54b ( ) ) . badSink ( data ) ; }",1
public void OWUF32M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void J0YAEEPG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void FT4KQ66B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void VOZDQEASink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54c ( ) ) . badSink ( data ) ; },1
public void S86N78ZG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54c ( ) ) . goodG2BSink ( data ) ; },0
public void HMV1YEIB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 9JG6CALSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54d ( ) ) . badSink ( data ) ; },1
public void 1MA33DFG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54d ( ) ) . goodG2BSink ( data ) ; },0
public void MBXP182B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54d ( ) ) . goodB2GSink ( data ) ; },0
public void P382Z7MSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54e ( ) ) . badSink ( data ) ; },1
public void I11R8Y9G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54e ( ) ) . goodG2BSink ( data ) ; },0
public void U4UCZP6B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__listen_tcp_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void YLIH6RYSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void L2HN35FG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 3100VCBB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void XVWQ0FC ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__listen_tcp_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void K080KKA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4IRZ15EG2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__listen_tcp_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void N9GUR07B2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__listen_tcp_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String 0UGS7KRSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String 1XJLFJZG2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String 54ALC5MB2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"public void QVNAJ73 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_66b ( ) ) . badSink ( dataArray ) ; }",1
public void LI36CMW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8PG7H3KG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void CROC2S0B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void AUNTPUTSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void W4FRN1YG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void W8U21OKB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void CTGFV59 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void IOY96K2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Z1W4BEGG2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void VSFOEN3B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void 89DU0IGSink ( CWE606_Unchecked_Loop_Condition__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 85XGMPSG2BSink ( CWE606_Unchecked_Loop_Condition__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void N1BM619B2GSink ( CWE606_Unchecked_Loop_Condition__listen_tcp_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void AZAMQXI ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_68b ( ) ) . badSink ( ) ; }",1
public void H6J0WFN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5FNQ2L0G2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void UQTZY0AB2G ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void WC1SELQSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__listen_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 9V4TV7KG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__listen_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void O2VLVE3B2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__listen_tcp_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void KEHUMG7 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void VGD6D5W ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YP3WKFTG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void HUWCZ6AB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__listen_tcp_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void UCO5SNCSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0D1HCADG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void LCVXBXPB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void G3I0ILE ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_72b ( ) ) . badSink ( dataVector ) ; }",1
public void TOK5GNU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void D6OM8OOG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void JC6TFZ6B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void 09SXVDESink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void GDTZ54VG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void TYGUWMMB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 53TG1PB ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void JIJO6CG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VOAYVSUG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 1S6X23WB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void VMG8716Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void B0K99TCG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void VGEAMDBB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void RA4KANE ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void MO3NC5X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VQAKGY1G2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void 8V6WR8XB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 1T3W1D2Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void O0H6WQIG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 8MC9VH7B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void H26WLNR ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void RAF2YWP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void K0HCAL4G2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void HTBRQLBB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__listen_tcp_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void WJ2YLA0Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void DYQ3TXZG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void UPKPCYWB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 7FBEDOG ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__listen_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__listen_tcp_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void QE81Q3I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void NX8RIIQG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__listen_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__listen_tcp_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 3NG0X1HB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__listen_tcp_81_base baseObject = new CWE606_Unchecked_Loop_Condition__listen_tcp_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void 0ZHI8M1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void B6M7MO2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0XNSJD3G2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void IUSD3SGB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void BGNY1CU ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 9KQBFCKG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QYMCO1IG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0T8YCFQB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 7ZL9BAQB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 8A7UBIZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YZL41O4 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 3FJA8TEG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JJSH0FXG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 4ZQLTTEB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1ANSAZWB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void SPCDBRO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CVIWW7Y ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void CEQ3WRUG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9K93USGG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void EMAN7ALB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1HUO35FB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void E6S2FOR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UB890YM ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 165WHF3G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CKF7J1QG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IQIKXZXB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void IUBCX17B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void MSE6RRT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void R65IRIS ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void X3L38PFG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PXXSC4XG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LZZYJ1UB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 5NREJQSB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void UQ28C3V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void J75AMZD ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void I7VVZTEG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void GM7FXWYG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void EQRB1BYB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 13PWJDXB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 4HSQVOQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ZNRF3DA ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void HWW2LYDG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2SM57G5G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LHWWHLIB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 19HU1UBB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void AYH82J1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PIV8K7B ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void VPHHNVNG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void EZO7K2ZG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5XFYB7DB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 1L7MIMMB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 4DZ0OV6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NTWJZW4 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void KJ44IHFG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ROE5K4RG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void V1YOOCCB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 8R7JR5VB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void H1UUSZV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NB781YD ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 19NYLVOG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void U2X2CW3G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void YMZ802MB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 2ULK0X2B2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void ARYPM9H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 12SONPZ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void TYGUYQTG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CBO60B9B2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void LZJEJV0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void VF4LF24 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void TL0IOAQG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DQWISX8G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 08X19W2B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void MQM3IF8B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 2GJJ92S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void K9F31SK ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void A0PW5LVG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void A8MQI5SG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 0Y0LJZHB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void R3AQX7ZB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void UZEN3XO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VXFQYM9 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void S60JW8RG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 6U8EM4JG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void N3386AMB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void WGIOO63B2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 4QHHVI4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 27EVSM2 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void F2EAAL8G2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void H920C4EB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void OCIY4SM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void CW5Y13I ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 2AFPYR8G2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XK31367B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 3TG23YI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void JWV7YGG ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
"private void H7X3GFUSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void UKJK602 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void W8PUPAPB2G1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 52RIPFGB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void EV2VBHWB2G2 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void B4STJE2B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void H8KEP6GG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void NXP91GMG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void BJKOIRN ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_22b ( ) ) . badSink ( data ) ; }",1
public void DVED4SY ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 4UGIJ9JB2G1 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void JRU98AMB2G2 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void XV92IT6G2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void KLPQ4GUSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__PropertiesFile_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void 167PS2FB2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__PropertiesFile_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void H3VWCAHB2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__PropertiesFile_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void DSXLAKVG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__PropertiesFile_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void IRSR0BK ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void RSTARIV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EK1SWSJG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void YH2U7ZNB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void ZFKNT5XSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Z5IANZY ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void JL0HE2X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VECU1X3G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 4VNK18WG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void 1UXDV9YB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void VG365MVB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String YAWBOOYSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void YP4780W ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String VM4STC1G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void 25IMWC3G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String GJPUGLEB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void 7X41N4XB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void CBEPM4O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void SX2BK01Sink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 2B6EO8W ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void NBZDZVI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 65CI72BG2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void Y5WR1UHG2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void PA1UHOWB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void L4FYOKEB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void C6AHA8L ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_51b ( ) ) . badSink ( data ) ; }",1
public void ZJUGUCZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4WCT7T6G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 5LORTJKB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void 0GOJ74YSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DHKHFI2G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void RWJKBM7B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void HWV4U5E ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52b ( ) ) . badSink ( data ) ; }",1
public void DF6UBZA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JX5OAL6G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void AGLTA8HB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 0E65VR2Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52c ( ) ) . badSink ( data ) ; },1
public void 27E26X0G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 1KWQT1AB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void 6G7LV1QSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void GBILR1LG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void KBWPSCRB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 0ISKAPM ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53b ( ) ) . badSink ( data ) ; }",1
public void 4NPM4HV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OLGM2RFG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void C6217FFB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void MNCQO8WSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53c ( ) ) . badSink ( data ) ; },1
public void 5GC3ZCAG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 46M5O73B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53c ( ) ) . goodB2GSink ( data ) ; },0
public void ZTXVQL9Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53d ( ) ) . badSink ( data ) ; },1
public void 7T34NJ5G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53d ( ) ) . goodG2BSink ( data ) ; },0
public void B15EVDVB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void KQFR630Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void C5STHJBG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void L3ANF4IB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void VBNQFDY ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54b ( ) ) . badSink ( data ) ; }",1
public void UELNBV7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RWSHG0IG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void X109924B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void EPBV4IESink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54c ( ) ) . badSink ( data ) ; },1
public void WF1RUP1G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54c ( ) ) . goodG2BSink ( data ) ; },0
public void YFETDJMB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 0MWPPHXSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54d ( ) ) . badSink ( data ) ; },1
public void 45K9YLTG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 2FJGB3MB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54d ( ) ) . goodB2GSink ( data ) ; },0
public void 83S7KUKSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54e ( ) ) . badSink ( data ) ; },1
public void CQYSGLLG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54e ( ) ) . goodG2BSink ( data ) ; },0
public void NI5RGQ7B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void BX3QTTBSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void XATY5KRG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void ZF6RD57B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DELB6XL ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void JBDRDTV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void AH75X57G2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void JUD0WHOB2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String 7OVXRU9Source ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String R6YT0T4G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String V6TP7MDB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void V834MH4 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_66b ( ) ) . badSink ( dataArray ) ; }",1
public void PVKXJFT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7XXA7X8G2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void D02NU7RB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void KIK4JH7Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Z3H1ERZG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void CAKPKHGB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void A4PVZ84 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void KFM3XGJ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TUFKJT1G2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void PPGGGMRB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void 8V7316NSink ( CWE606_Unchecked_Loop_Condition__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void E26022TG2BSink ( CWE606_Unchecked_Loop_Condition__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JG4277JB2GSink ( CWE606_Unchecked_Loop_Condition__PropertiesFile_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void JUBPHKA ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_68b ( ) ) . badSink ( ) ; }",1
public void 16DNIN2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void XMGZ1HXG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void 8JF1WL3B2G ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void PQQZY76Sink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__PropertiesFile_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QEAP7GEG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__PropertiesFile_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void H9AYV3MB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__PropertiesFile_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PJ4HI6Y ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void A5QTWD4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 11ITRXRG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void 4DC7DF7B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void VHSLARZSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void IZVBXS4G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 24DOSZ1B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PVPPO24 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_72b ( ) ) . badSink ( dataVector ) ; }",1
public void OM500BC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void D8SYS0DG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 2EOZD3SB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void UBO7CNESink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 51RKQSJG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 24L4EWCB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void AXXR9P6 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void CC1HDW1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void IH16ATRG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void FGCDV1KB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void NO1UM7ESink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 31ULSLUG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void SXBDSMDB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void DKENC6E ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 1J8N9U3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void IOA3RSHG2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void IL1NWV8B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void FHY9PNYSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void PMRWFQBG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void IM7AAAOB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 5XQVLGH ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void T5O72QR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void H3QEAY0G2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 5DPCEEQB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__PropertiesFile_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void WUEZH4DSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void WI42QN5G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void YHANFGUB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void UM81OVT ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__PropertiesFile_81_base baseObject = new CWE606_Unchecked_Loop_Condition__PropertiesFile_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void XUCXUAI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EZYOB78G2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__PropertiesFile_81_base baseObject = new CWE606_Unchecked_Loop_Condition__PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 534JHLYB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE606_Unchecked_Loop_Condition__PropertiesFile_81_base baseObject = new CWE606_Unchecked_Loop_Condition__PropertiesFile_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void PCMVLYT ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void IFWR6AH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void P3H66ZRG2B ( ) throws Throwable { String data ; data = ""5"" ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void FYD2VWFB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void NZBWH77 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void SNT3NZGG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""5"" ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8WO264RG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""5"" ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void P6F5J4YB2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void GYU7Q3CB2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void JVHUKT0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ER8IYDU ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void N4TG4FKG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""5"" ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void BQ6SMJKG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""5"" ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void IT67G6KB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void Y2W2BGZB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void L64NPF0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void OBXCOKV ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 6KI8Y3GG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void UFO3G4FG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 8WXDZ5BB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 0MVWLJLB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void Z0G8622 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void EHMP442 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 469CPN4G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""5"" ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void NISLT6KG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""5"" ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void S7Z9O9NB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void YVAL4P3B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 86Z64OV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void HX8C2A7 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void U2YIS0KG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void URAXW7MG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void W4UQZ3LB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void WXUWQ55B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void O808DOA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void Y1CN2QH ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void FX5OXLKG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 7GML3AIG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void JDQLRZOB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void NPUBZ9PB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void JLN05DF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DAYYXOP ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void WFYQ5G9G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void PSM3R7PG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 2YJ335KB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3P4NLAOB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void V4ZUM1P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QSHE6QR ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void 9Y9INO6G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void DXRCEXJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 5GM2VUVB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void TEU03SUB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 48W30W8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void GOHJJU6 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void Q2M6PF9G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""5"" ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void L1RF8PJG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""5"" ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ODY1JRBB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 7NH90HNB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void HTJCYQG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LUC1XP5 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void B9XJGH2G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""5"" ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LYQ1CJ3G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""5"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 43RCQQMB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 3V3SE3JB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 61TPQA9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NO1WH3B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",1
"private void AXQLVTGG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""5"" ; } else { data = ""5"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void LRA0FQ2B2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = System . getProperty ( ""user.home"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void W5HKP4O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void IOCLEUE ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void QM8SVYFG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void SXKGTBNG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ECVVU1PB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void CR0SKTMB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 1L6XKFT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 85J45FE ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void G36U6ZHG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""5"" ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void CZV4ZROG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""5"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ATAWLT2B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 28EA05CB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void 178DP7Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NSX0Y9L ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 3C2PROSG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""5"" ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void OSJ8VVCG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""5"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void TOYG6ZTB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
"private void HWN6H5VB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void PGA1B35 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void XDI1OJW ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",1
"private void T3CWTGCG2B ( ) throws Throwable { String data ; while ( true ) { data = ""5"" ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } break ; } }",0
"private void 32EQNMGB2G ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } break ; } }",0
public void O7HUVKB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 1TC4SZ0 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
"private void TW3AWRFG2B ( ) throws Throwable { String data ; data = ""5"" ; for ( int j = 0 ; j < 1 ; j ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void QFBO21QB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
public void W83VMXQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 5IG5Y6X ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badPrivate = true ; badSink ( data ) ; }",1
"private void GYIF87NSink ( String data ) throws Throwable { if ( badPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void R2G00NL ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 3KUNBB8B2G1 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 5KLW3IJB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 22Q5XTHB2G2 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void R3W718DB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void NJWQTOCG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
"private void J46OIH6G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void PD7UAYC ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; badPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Property_22b ( ) ) . badSink ( data ) ; }",1
public void 20UVHEL ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void N0S782BB2G1 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G1PublicStatic = false ; ( new CWE606_Unchecked_Loop_Condition__Property_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 8TS1HJ9B2G2 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G2PublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Property_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void N7LIKURG2B ( ) throws Throwable { String data = null ; data = ""5"" ; goodG2BPublicStatic = true ; ( new CWE606_Unchecked_Loop_Condition__Property_22b ( ) ) . goodG2BSink ( data ) ; }",0
"public void 43BBM1DSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Property_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void 50E3ZL9B2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Property_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 0HPQMGRB2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Property_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void PG3Z0PWG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__Property_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"public void 52Z9IAZ ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",1
public void G0JBL4F ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 943BVB6G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""5"" ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void XGUI55YB2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"private void 0ENK9BESink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 8HGI3UB ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void 5CUGJK7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8TV0I72G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void JEEL8WWG2B ( ) throws Throwable { String data ; data = ""5"" ; goodG2BSink ( data ) ; }",0
"private void VTWA1PZB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void ES1MHXOB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2GSink ( data ) ; }",0
"private String GGKZ1UFSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public void 221YZ3H ( ) throws Throwable { String data = badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private String 7CBES80G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"private void FGXWBZZG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private String 2WA9ZLYB2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"private void 666JJ0HB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void K13WJSP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VBOJONBSink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void EJVME3T ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void JUXUQDG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6RGJHL0G2BSink ( ) throws Throwable { String data = dataGoodG2B ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void 8XONXSWG2B ( ) throws Throwable { String data ; data = ""5"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void THJXI1MB2GSink ( ) throws Throwable { String data = dataGoodB2G ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"private void 9K5GU6ZB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 07NQV8D ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_51b ( ) ) . badSink ( data ) ; }",1
public void VAE4BS6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HAIF23DG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void MP05ITPB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_51b ( ) ) . goodB2GSink ( data ) ; }",0
"public void JN0O4IYSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 3T6CV0OG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void JK20KSYB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void AX6DBUI ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_52b ( ) ) . badSink ( data ) ; }",1
public void 0P3OUD6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 70VAVYDG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 1RNORSGB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void MN0AU4OSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_52c ( ) ) . badSink ( data ) ; },1
public void 41YOW2HG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 4U6GCFRB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void 56YOL2TSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 6OKLJ34G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void MUUQSLIB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 078DMXZ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_53b ( ) ) . badSink ( data ) ; }",1
public void A3XZLFY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 37JLOXEG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 9J8LYIWB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 3CUVY8QSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53c ( ) ) . badSink ( data ) ; },1
public void 04YFO3JG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53c ( ) ) . goodG2BSink ( data ) ; },0
public void L7WYB4WB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53c ( ) ) . goodB2GSink ( data ) ; },0
public void CAAPMN8Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53d ( ) ) . badSink ( data ) ; },1
public void MKV59MHG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 9M4ZIHJB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 1XSN6DWSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 0MCJD1RG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void XS13T25B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 32Y1M6A ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_54b ( ) ) . badSink ( data ) ; }",1
public void HTIXVWH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void IWX0E27G2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void WPRTT5EB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void F8JISAZSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54c ( ) ) . badSink ( data ) ; },1
public void WTOUKHOG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54c ( ) ) . goodG2BSink ( data ) ; },0
public void M85JIX4B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54c ( ) ) . goodB2GSink ( data ) ; },0
public void ULBNHZ2Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54d ( ) ) . badSink ( data ) ; },1
public void G8PFU94G2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VSIAX99B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54d ( ) ) . goodB2GSink ( data ) ; },0
public void P7CBB5CSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54e ( ) ) . badSink ( data ) ; },1
public void QIYFBZWG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54e ( ) ) . goodG2BSink ( data ) ; },0
public void Q8JU2AFB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__Property_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void 4T3NYE5Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void SSZ5UZAG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 0HNPY8XB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void XYYJN29 ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Property_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void 3COQMGU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KC3K5L7G2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Property_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void VFLZD17B2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__Property_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public String G2AC3G5Source ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String 9IUNHF6G2BSource ( ) throws Throwable { String data ; data = ""5"" ; return data ; }",0
"public String 10W6JX3B2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"public void TMJ3JF9 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Property_66b ( ) ) . badSink ( dataArray ) ; }",1
public void SLABKL0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YB91QOGG2B ( ) throws Throwable { String data ; data = ""5"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Property_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void CILFV1WB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE606_Unchecked_Loop_Condition__Property_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
"public void LJXQD2MSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void SWQW204G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 5UT33OWB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 349GG1C ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Property_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void STQL0TC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Z3GKDQ5G2B ( ) throws Throwable { String data ; data = ""5"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Property_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void QY9KYLDB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE606_Unchecked_Loop_Condition__Property_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
"public void YA9NHCASink ( CWE606_Unchecked_Loop_Condition__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void OVTFHXCG2BSink ( CWE606_Unchecked_Loop_Condition__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void UZMIYPVB2GSink ( CWE606_Unchecked_Loop_Condition__Property_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void RYP9I7A ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_68b ( ) ) . badSink ( ) ; }",1
public void HUSZ06R ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void L01BMBLG2B ( ) throws Throwable { data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void H6VG86AB2G ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_68b ( ) ) . goodB2GSink ( ) ; }",0
"public void I55WEIUSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Property_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FNPE10CG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Property_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void D4APNLZB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__Property_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 3MREJPC ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void IZ20YP3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QEK520NG2B ( ) throws Throwable { String data ; data = ""5"" ; ( new CWE606_Unchecked_Loop_Condition__Property_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void FCYMOYHB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE606_Unchecked_Loop_Condition__Property_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
"public void VNCBQ7ZSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void KDEKQXGG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void XZJZXLJB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void D4BFC4G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_72b ( ) ) . badSink ( dataVector ) ; }",1
public void HK17L6M ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1SF3DPYG2B ( ) throws Throwable { String data ; data = ""5"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void WRKZTJ3B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
"public void FNPL6T4Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void FIOH949G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void BC7HHFXB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void IXN7BB2 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void TXU1NQJ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 057QJ1YG2B ( ) throws Throwable { String data ; data = ""5"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void NTSG8GLB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
"public void WB7BDX3Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void TZ67GW2G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 77KNU3HB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 4X4NCTW ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void P5707OF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PZL3WLCG2B ( ) throws Throwable { String data ; data = ""5"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void AII8XMGB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE606_Unchecked_Loop_Condition__Property_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void MLV69PCSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void QP5TOYDG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void R1GBI8DB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void AS0KUZP ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Property_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 717A2K0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OMPI3VIG2B ( ) throws Throwable { String data ; data = ""5"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Property_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void DN42V61B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE606_Unchecked_Loop_Condition__Property_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 1BZDOUKSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 6CMHRKIG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BWNCOX9B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void U6YO8TW ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE606_Unchecked_Loop_Condition__Property_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Property_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WH1LNV0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 76KNBQUG2B ( ) throws Throwable { String data ; data = ""5"" ; CWE606_Unchecked_Loop_Condition__Property_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Property_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 4YXEMW3B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE606_Unchecked_Loop_Condition__Property_81_base baseObject = new CWE606_Unchecked_Loop_Condition__Property_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void TU66PPCSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__URLConnection_22a . badPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",1
"public void 1STXN8CB2G1Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__URLConnection_22a . goodB2G1PublicStatic ) { data = null ; } else { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } }",0
"public void 647BSYAB2G2Sink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__URLConnection_22a . goodB2G2PublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } else { data = null ; } }",0
"public void 1FPD76OG2BSink ( String data ) throws Throwable { if ( CWE606_Unchecked_Loop_Condition__URLConnection_22a . goodG2BPublicStatic ) { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } else { data = null ; } }",0
"private void KZ4KD3TSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"private void TJRUX89Sink ( ) throws Throwable { String data = dataBad ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 7AALNZ8Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void POB8DH8G2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void AVKG5MAB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void GD5AC7TSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_52c ( ) ) . badSink ( data ) ; },1
public void VRF23MHG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WNBZB4GB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_52c ( ) ) . goodB2GSink ( data ) ; },0
"public void IN6RTDUSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void JH3JTWYG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void H7EBU44B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void YPMI5WCSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53c ( ) ) . badSink ( data ) ; },1
public void N7G718MG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 7M347UWB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53c ( ) ) . goodB2GSink ( data ) ; },0
public void VDX9AU1Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53d ( ) ) . badSink ( data ) ; },1
public void 8N9D6IJG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 4NPVFSKB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_53d ( ) ) . goodB2GSink ( data ) ; },0
"public void 70ES6V8Sink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 474WCVPG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void LVZBYASB2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
public void 084HKMASink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54c ( ) ) . badSink ( data ) ; },1
public void CNJEZTMG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54c ( ) ) . goodG2BSink ( data ) ; },0
public void LYD9441B2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54c ( ) ) . goodB2GSink ( data ) ; },0
public void F7OUCQ4Sink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54d ( ) ) . badSink ( data ) ; },1
public void FU1RASMG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54d ( ) ) . goodG2BSink ( data ) ; },0
public void TNBZMLXB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54d ( ) ) . goodB2GSink ( data ) ; },0
public void EFVGYPYSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54e ( ) ) . badSink ( data ) ; },1
public void RA0YJWLG2BSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1U8LCFNB2GSink ( String data ) throws Throwable { ( new CWE606_Unchecked_Loop_Condition__URLConnection_54e ( ) ) . goodB2GSink ( data ) ; },0
"public void O5RCJHXSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 4BX2HROG2BSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void WT027C0B2GSink ( String data ) throws Throwable { int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void V673FFJ ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__URLConnection_61b ( ) ) . badSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
public void L35B3UF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0F1HWKRG2B ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__URLConnection_61b ( ) ) . goodG2BSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"private void YPJJNC1B2G ( ) throws Throwable { String data = ( new CWE606_Unchecked_Loop_Condition__URLConnection_61b ( ) ) . goodB2GSource ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void VLQ8NI7Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void Q9V67K5G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 72LWVYVB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void D4LCQQ6Sink ( CWE606_Unchecked_Loop_Condition__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 4Z4CVFZG2BSink ( CWE606_Unchecked_Loop_Condition__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 5KHO189B2GSink ( CWE606_Unchecked_Loop_Condition__URLConnection_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 8OB6K6ESink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__URLConnection_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 56URGMZG2BSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__URLConnection_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void 8KKHEEJB2GSink ( ) throws Throwable { String data = CWE606_Unchecked_Loop_Condition__URLConnection_68a . data ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void A097YRSSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void DKCWK6IG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void QBDQ42GB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 9TJW1NESink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 5H2W571G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void QZITPL3B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void LM2V01FSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void ASEHG2QG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void QJOOWOHB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void 2WYNIKPSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",1
"public void 3A3LRJXG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } }",0
"public void BPW1JQ7B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } }",0
"public void NCCG2IDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void UWYIAXRG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void OX0GCXBB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; int numberOfLoops ; try { numberOfLoops = Integer . parseInt ( data ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . writeLine ( ""Invalid response. Numeric input expected. Assuming 1."" ) ; numberOfLoops = 1 ; } if ( numberOfLoops >= 0 && numberOfLoops <= 5 ) { for ( int i = 0 ; i < numberOfLoops ; i ++ ) { IO . writeLine ( ""hello world"" ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
