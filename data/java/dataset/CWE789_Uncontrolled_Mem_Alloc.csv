input,label
"public void RFCV88S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void 83DGI2O ( ) throws Throwable { goodG2B ( ) ; },0
private void N89IVA0G2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void T9KBW2O ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void HTRWCXMG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void M8IKMC1G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5Q77UZX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CM4KU83 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TQ6QK26G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void VCLZUVJG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TR0XQLE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 81A6IGL ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void I1B1PY4G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void Q12WM27G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 7XXVSHJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M2TXMAX ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void BWBZGXFG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 8RLZDLAG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void J0UUMZ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DAN11D8 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void V68KQCWG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void CAW3G6OG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ELU5DPE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 05U6W5C ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void B6QA0GNG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void NCDZEAWG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5SWUDCO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YULWGW9 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void EZ3NRHCG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void E01B3C5G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void X6UA9O3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3EIAMJO ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void DIC1JK9G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void V785Q8OG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void O2R19D1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XA2TH7U ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void DU5GQBYG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WLGSPC9G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void DCKAFH3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GCN0NYE ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void JC8SIWZG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void G9XO30HG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 64YV216 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MMYOEF1 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RNNR449G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 873B982 ( ) throws Throwable { goodG2B ( ) ; },0
"public void WN2KX9O ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 6741JRXG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 9JLIPM8G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void RGIF019 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NBRD7XE ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void ZI2NR7PG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void SJEXGCFG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TQKRFNV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X8RAMIY ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void L51UXSWG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 2SV8F8MG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void FLTDAMS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OTQ2VCF ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 75G8FU4G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void OEIPRQC ( ) throws Throwable { goodG2B ( ) ; },0
"public void EEUMIFJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void VFGZIL1G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void CSXHYEW ( ) throws Throwable { goodG2B ( ) ; },0
public void O4ZYW6D ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int D6HZ0MS_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void CE5KOCQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void GD3V8TPG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int OJWT1E6G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void B4N3GM1G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int RHL9XJVG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void BODUZDS ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 5BSZGPS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 2UINGL5G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void UDUBB1LG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int RUM6Q7DSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int HI5IUARG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int ZAIBAVSG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void WYOM3H5 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void RP506C6 ( ) throws Throwable { goodG2B ( ) ; },0
private void JLBUO8KG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void ON2B9UTSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void H9D1AGQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 743JPK9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 68Q9W37G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void D7WB0DVG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int W856SPLSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void QR6IYVE ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 9J5OERNG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void CTQKSD2G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SX97Y7R ( ) throws Throwable { goodG2B ( ) ; },0
private void 3O991E4Sink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void YZPRE2Y ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void W8BGFGV ( ) throws Throwable { goodG2B ( ) ; },0
private void 5SQ7V2DG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void G1VYMUQG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 6F979PC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void V1J7DD0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0SZA2NDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void JB838K4Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void PV5AABXG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void JHOA1YI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void VK6GME9 ( ) throws Throwable { goodG2B ( ) ; },0
private void IPI6W8AG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 114VSFZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void RAXEREQG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void HSI3R06Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void URY300HG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void AAHC9A6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void PYIV2ZC ( ) throws Throwable { goodG2B ( ) ; },0
private void YQPC17LG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void WANV00USink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void 958XVNEG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void YR8CNFWSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void O52R38DG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void ZTLOMOZSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void ACVJGX8G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void HVQ7FK6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void LYNLCTN ( ) throws Throwable { goodG2B ( ) ; },0
private void F00KXKVG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void VGMLH1GSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void K3L9WJJG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void NJUE6O2Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void XYSL9PZG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void RWM0HLESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void 8N3ZVG0G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 5QIVB0QSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void EYR9A6PG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 32CXXJV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void E4E7FCL ( ) throws Throwable { goodG2B ( ) ; },0
private void E9QF8TUG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 597PA0YSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public int 8DZGDE2G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void J23RKLL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4PEQYDU ( ) throws Throwable { goodG2B ( ) ; },0
private void AQS2S9OG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void NVZ6N0ASink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void PTQFWJ1G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void XQMCQD2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void IHU9UG8 ( ) throws Throwable { goodG2B ( ) ; },0
private void BXMQMW0G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void ROZP40DSink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void HWNKJPAG2BSink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void C5N3E1A ( ) throws Throwable { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void 528BDHZ ( ) throws Throwable { goodG2B ( ) ; },0
private void XWKWBJQG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void 63XH6VTSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VWLEY40G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void S1EC887 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 52GSIEJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 7F1XTJJG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void Z059L2ZSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 5DJ8W7ZG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 3L3OZUT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void SE0RLB4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4AOA7Z3G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void RR4IBCCSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void UAC7N70G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 9J85FII ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void EDIJ34Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void RM77TSBG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void GLCGWVDSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 57LRZCHG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void DJH5ZFK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void E79P06N ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4NJN8JGG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void GYWT3D0Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 51511CTG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void YXPFT3G ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void EWIZZYP ( ) throws Throwable { goodG2B ( ) ; },0
"private void QBTA3W8G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void JPY9QAASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void GDDN0Z8G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void P62ZISI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void C8MX4B0 ( ) throws Throwable { goodG2B ( ) ; },0
private void MCB5224G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void LNQLZAA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void KP3Y9UO ( ) throws Throwable { goodG2B ( ) ; },0
private void NG3RQTOG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void M0KTUT5 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void SDUE7OBG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WLIHKXEG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void NJW0WZU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Z3504MG ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 0OA8NZ4G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void EBKCZ7YG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void RXVWX7C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void D8EEIJC ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void MZQVQULG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 55JER58G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GHZH8G0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HO4GF73 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void JUM547PG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LPEZKX0G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void Z3QI3I8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RVYUVH4 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void NYZXNA8G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 4MPLUPWG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void KVO1OV6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void G08RC5U ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 17E22GQG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void EIZ9S49G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GMW2T10 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DM9EJPU ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void I40QR8SG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void BS8X84SG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 47Y1VX2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 017ET7Q ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 33U40NWG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LN9AJA8G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void B09RCL8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B9GZ0I3 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void LGRI5FGG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 9P0TLQNG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void BID5OCK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O191PLN ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void T9OVTT4G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void PZGOQIBG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 9U85EO4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZKDT15B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void JBP3YQFG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void S8OSDRK ( ) throws Throwable { goodG2B ( ) ; },0
"public void 3VY5UTQ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 5J0DWKKG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ZVNGPLOG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void WBEM7YH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 72JNDX3 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void HQZ2E17G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LKD3OZGG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void BHI4ZBE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9WLY2YI ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void MTPNQKJG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void YBO0XT1G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 32PU7T6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F9XDSUX ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void KCAJYPDG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 2RTVPO5 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 45K85QJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void 3K3VNH7G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void FBV60S8 ( ) throws Throwable { goodG2B ( ) ; },0
public void 9GQJRFV ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int CW29JR3_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 6W29MO2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void KWJYDOIG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 5GI7T8NG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void JAHDQCFG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 41YF1J3G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void C0P5B2Q ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 2OC5JS2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void LIL6J2XG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 338QRXUG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int 49B56ZPSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 88FADCBG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int QTC12KVG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void PZH7SPT ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void KB77X7L ( ) throws Throwable { goodG2B ( ) ; },0
private void L9MEE7PG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void 1LV2DYNSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void 39YJQIE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 27OYX1T ( ) throws Throwable { goodG2B ( ) ; },0
private void 58KW0NGG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void KIC5GEWG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int F0YFF2GSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void F3FEE91 ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int 3VIRHL4G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 85E0RB7G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 4TQVXUG ( ) throws Throwable { goodG2B ( ) ; },0
private void B9S8M5XSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void TYZYV2B ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void OI3UOR6 ( ) throws Throwable { goodG2B ( ) ; },0
private void K361RFQG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 1F5BB05G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void DVOAEOA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void AZXY3NI ( ) throws Throwable { goodG2B ( ) ; },0
private void KGMBLGLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void IIIBKVOSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void FW38FK3G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void K7ZCKPK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void Q7TLFHP ( ) throws Throwable { goodG2B ( ) ; },0
private void FPZLBA9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void T5VPFBXSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void WVJ2TQDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 700E1NUSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void VMEUBY2G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void 10WY1OD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void 2SSULD7 ( ) throws Throwable { goodG2B ( ) ; },0
private void YNNQVIRG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 8W8AG30Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void EAOSUV5G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 1P1Q8O4Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void OAXLJ1PG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void QC8IFR1Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void V1BOGA0G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void K7CLOYE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void TBX88UB ( ) throws Throwable { goodG2B ( ) ; },0
private void 1KRQ8H5G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void CSHL1VLSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void NJS3GRCG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 3YSUN0HSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void GJHLI10G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ORX9KFWSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void DBZG2FDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void E92FLALSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void DDQQ23QG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void O2441IA ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void YD2I505 ( ) throws Throwable { goodG2B ( ) ; },0
private void D47VA02G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int DX3ZAOKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public int PKBQHQEG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 838600F ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void WFA5JIG ( ) throws Throwable { goodG2B ( ) ; },0
private void S4U314MG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void L18BC41Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 1RH3N63G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 4T2MKOA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void AECSAU3 ( ) throws Throwable { goodG2B ( ) ; },0
private void Q6SE7CVG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void NV3RD30Sink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void S8YJ1JXG2BSink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 6FF25XS ( ) throws Throwable { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void 34USWFV ( ) throws Throwable { goodG2B ( ) ; },0
private void VVY30R5G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void 9URQ6QQSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void WHYSQXRG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void NV38ESE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void L03IXYK ( ) throws Throwable { goodG2B ( ) ; },0
private void 5OIX3YQG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void YY4043QSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void ACOXI57G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 3G0EG1W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void Y8EWQZ3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void P6464AHG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 9474HCLSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void Q552OBWG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void AQLNG5N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void K24WC8H ( ) throws Throwable { goodG2B ( ) ; },0
"private void 900WAQCG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void AZA01BBSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 4ZGLPIPG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 7Z6XEUV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 80H493A ( ) throws Throwable { goodG2B ( ) ; },0
"private void YDLE3QUG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void AWOZM45Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void UFA5ELUG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 0861S0N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void O37JBCI ( ) throws Throwable { goodG2B ( ) ; },0
"private void YEF94AJG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void S7GMG75Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 13OYXC2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BRECVT1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WPOZRAU ( ) throws Throwable { goodG2B ( ) ; },0
private void RSPG88LG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 57V8M0S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void FQ6UWRB ( ) throws Throwable { goodG2B ( ) ; },0
private void 2UJFW7NG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 46J1REI ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void D8P4JOQG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 2L3YOBRG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void C5PO341 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3GK4WMW ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void XTH2ERNG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void EGOTOS3G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void PXGKL5H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YWMP0H0 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void RSO0QO4G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void SBTWVBRG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void EPJVI2D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AXRH8XL ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void YYYL1LVG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void OM1IGNYG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void XGL61FL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SZXG2HB ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void SWKNNFQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5N1MUOEG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void FNP1E3L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9QS140M ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8HP6CO9G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void OR9IFB9G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void PFVWVZ4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RIVC68S ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void DY0AR1JG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KMOOGURG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AOY9K7T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J1CYY0V ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void WCGW7B6G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void C0AURIIG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void MEOXCY2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OAYY9JQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void OD89GSPG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void BDZ9R2BG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void SJWFHZ2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HBWMLNN ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 3R03FVAG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void ZNLF6BVG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void A3HV0CH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M7I08LL ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8J1IFEMG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void TGSV7WL ( ) throws Throwable { goodG2B ( ) ; },0
"public void P6GWLLZ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void IAZXFMEG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 60KII4HG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ATO36DA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NGOCW4S ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void Z1YKL60G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void C7BOCVBG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ODVC36W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R79I6UO ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void P7YAAGZG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 0AIIK8SG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UF1WBCM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AQQN2LZ ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 1SD8FSRG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void O8KB3YF ( ) throws Throwable { goodG2B ( ) ; },0
"public void G8C255S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void SHABBTWG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void MEWUA78 ( ) throws Throwable { goodG2B ( ) ; },0
public void G6IT1KF ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int RZEZHXP_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void 2HB9BQ1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void TFE4RK8G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int 5TXICOHG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void NF02JWKG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int 717UFORG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void P5QIGLH ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void KZIXDYY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void DG60FHJG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void F36HP3TG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 8JJQYM9Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int DDWEFS0G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int YT2A9VGG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 50AN3VV ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void S6TC6D1 ( ) throws Throwable { goodG2B ( ) ; },0
private void H75VOTPG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void SLY08WCSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void UUOCLJ6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void PS0P2DU ( ) throws Throwable { goodG2B ( ) ; },0
private void DOUIPQLG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void T83DY15G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int NZNTDWKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void 3YFJO2H ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int LRW6LKEG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void QHPMW8TG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void FWK5IKF ( ) throws Throwable { goodG2B ( ) ; },0
private void ALBQP8DSink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void SUNVAV1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void SUMWF32 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZSWX470G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void BFP0OKCG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void R4D4GFN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void CVXQ1BO ( ) throws Throwable { goodG2B ( ) ; },0
private void VDOQMF2G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void MA1DPMMSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void IWFRI0JG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void J53D94Q ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void II6MVVV ( ) throws Throwable { goodG2B ( ) ; },0
private void EB4PUETG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 6M73J8SSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void 2MJCIQ2G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 7IJASOMSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 9KVIGP2G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void RDBGUDZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void 7XB40YW ( ) throws Throwable { goodG2B ( ) ; },0
private void CXZ9ZGPG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void LT87F5ESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void 0AL1L8SG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 2GKLRXNSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void APU40PMG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void WF4429ZSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 0TUUJZ3G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void YUL4A8Q ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void 25AGX23 ( ) throws Throwable { goodG2B ( ) ; },0
private void TXHDH5ZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 24KRF55Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void 1L8SIMBG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 8C2N9U9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void FPG2RETG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void YYO8JRQSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void 6JOXX8VG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1EAWHKMSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 4I320XLG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void LU929Z9 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void XKAPB2Q ( ) throws Throwable { goodG2B ( ) ; },0
private void RQ58DYUG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int XVHA3N7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public int XHQNN4MG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void XUKP26K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void AL2ZKF6 ( ) throws Throwable { goodG2B ( ) ; },0
private void 23ETXP6G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void VKPWTX2Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ZDIN7UUG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void X9DR3VD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 9MXRSTO ( ) throws Throwable { goodG2B ( ) ; },0
private void NWHHSYRG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 8740YSCSink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void KTE7LQYG2BSink ( CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void YVQ5K5W ( ) throws Throwable { data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void TB0DJYQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 5BEKVYLG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void O2RZ6SKSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void HI7A4FDG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void JYX2QFR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void AXDI4G3 ( ) throws Throwable { goodG2B ( ) ; },0
private void JPV2Q94G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 74JUE9VSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void MGDQ5ICG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void R1ALA2N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void MT7A8AS ( ) throws Throwable { goodG2B ( ) ; },0
"private void TQ2ML85G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void BQF9CDLSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void Y9QS7WJG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void WH58HRZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 326DB7Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void YEAC3E9G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 1M18HBESink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void FYSNGXHG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 91GZ29R ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void AESN86N ( ) throws Throwable { goodG2B ( ) ; },0
"private void FM57KFBG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void THKF3Q5Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void DP8ZDPNG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void X1LYIFU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void LWPM5BD ( ) throws Throwable { goodG2B ( ) ; },0
"private void RB4CMPSG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void KSVHTQZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void FAMLEPBG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JXNCOYJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void U6R3NCG ( ) throws Throwable { goodG2B ( ) ; },0
private void J29LDSNG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__connect_tcp_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void ZDN3G6Y ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void JO4D5N1 ( ) throws Throwable { goodG2B ( ) ; },0
private void VPGJP9PG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void OE75FZC ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void PS9L81RG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void BO78ZZ2G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void CRCQM43 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J3LYJVL ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void MXOLCZ6G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 8F0IYU9G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void W47A6DO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NSGA0ZC ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TUD4GBFG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PSI9PENG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 4Z0GYF1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7KVZEV3 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void UMTENCOG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 9OZDR5JG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void GAG5CHV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H8THWAJ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void L5MSZXVG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void NAJOCBPG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void GUWRHOK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NDCHH78 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 642WLK7G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1UHVBWXG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TPP0LUD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UMN2QPL ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void Y504S6PG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void E404YX1G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void OQHEENQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void QIFKE84 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 79EPJDOG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void DUK1XSZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void RGVEKQF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ICL3P9C ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void T9XW2SWG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void COPGUDSG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 1YG37HZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3260NOB ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 5O0SH7AG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 3I90677G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void K4BNYE3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 33FALCQ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void MNI3J5VG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TLW71BG ( ) throws Throwable { goodG2B ( ) ; },0
"public void J5CS0WC ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TGFGKGCG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void H1RLTD5G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void W4TCEV0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4CQPTR8 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void UJUF69XG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 0FJV73BG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 6233YPE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KH06V89 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TAYSU14G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1ORZTCBG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5IQI383 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EAZ5DJL ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void BOWNPMRG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 3KABW4Q ( ) throws Throwable { goodG2B ( ) ; },0
"public void OGZ7IWA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void BI573MRG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void 6BE8UAI ( ) throws Throwable { goodG2B ( ) ; },0
public void UW94JXF ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int KSNGPD5_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void RIJXCR9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void GIXQUADG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int JHG61W5G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void T8Y1W9BG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int 03H24OCG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void RAEKSTE ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void UBQM1SV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 4SMXEIHG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void RAQPJM5G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 5SW4OCHSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int FV8EEX4G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int U212L6EG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void KIKS99O ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void 5826848 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZU4B7QPG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void 3DOKCJMSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void 116W64R ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 1EVPNHO ( ) throws Throwable { goodG2B ( ) ; },0
private void TIW3A9BG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void EQCVR0GG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int WWO839ZSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void 1QFJMV8 ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 2BN7QULG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 5KIBR66G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void R7VOBXH ( ) throws Throwable { goodG2B ( ) ; },0
private void QHOT0OUSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void HGO3UJ2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void BODHBBO ( ) throws Throwable { goodG2B ( ) ; },0
private void MFDB18FG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 18LJGZTG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void ZJRS9LS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void SE0JI2J ( ) throws Throwable { goodG2B ( ) ; },0
private void D23H63NG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void AUEM42YSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void SNCWQ05G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 2L14KWI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void 2LQWTQR ( ) throws Throwable { goodG2B ( ) ; },0
private void 3ANHI7SG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void LVQIOT1Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 7IWG1OYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void LABL28USink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VR2TBSQG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void G6S4FDE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void NSHN58Q ( ) throws Throwable { goodG2B ( ) ; },0
private void TJDEU65G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void D36O7NYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void 8CW793NG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void BF61DF7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void IH6XZWCG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void PWOW0M2Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void E3XAO5PG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void IM6M4FT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void 08I0JD7 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4XM6ZL4G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 95ZW11HSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void B6GPLEVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void XLEJ52ESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void EHBTL0EG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void CWJ8C4SSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void F6HN7UQG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 1PFRF35Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XY0QQWRG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IBUAJZV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1C3Q7PG ( ) throws Throwable { goodG2B ( ) ; },0
private void 9N6621VG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int W74GCTYSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public int CVMGSU3G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void RFGPKOV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4L30CY9 ( ) throws Throwable { goodG2B ( ) ; },0
private void J5FV5DRG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void QWGWS7TSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 15QQRHVG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void P0L76S2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void O4DPZ8K ( ) throws Throwable { goodG2B ( ) ; },0
private void OMC407AG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void OZEHXXRSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void F4YECONG2BSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void RLCMEB9 ( ) throws Throwable { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void SBBAWMF ( ) throws Throwable { goodG2B ( ) ; },0
private void NTPRLP4G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void PTTI953Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void MX9M39CG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void J4T7Y7K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void O45HY28 ( ) throws Throwable { goodG2B ( ) ; },0
private void A1BV27FG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void O8KYLVASink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void GR1DD5XG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void K6P8Q00 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 1IMKQKZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0OQ0CT6G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void XU3FM8OSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void O4XJGCUG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void EXGEIY4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void RHYUOWQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void O7STMFRG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void RPLYREPSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1QD6B09G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void TV287K7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void TJRST5V ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3ZX6Y5KG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void VN6P2B5Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void IYT487LG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 9OBGOXC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DDMUL3V ( ) throws Throwable { goodG2B ( ) ; },0
"private void G62S81QG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void IXNFLN2Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 969770HG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 97NH7Z4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void SSQDGDC ( ) throws Throwable { goodG2B ( ) ; },0
private void 48OZVO4G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 6OALZUG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void B4P2XW8 ( ) throws Throwable { goodG2B ( ) ; },0
private void BLF5WPBG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 6B8U1LG ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 70264TRG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void DXXYXC1G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GY01QVX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9DB1SN9 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 9EY0HJEG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 4PQRTMLG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 5OH9DBN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7LV6N5E ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 31OHXDBG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void W4XX78TG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void ZK40PCM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EZBVFLO ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void PQW2JOGG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void JV21FM5G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void HGWWT6A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CTIYM1C ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 2CMMTU0G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void URFS6I5G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void B2GNSME ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ISMOGNX ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void Y5SHKNXG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void OJWS7FKG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 8CEQSTJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LKPMYKE ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void YHDWL1YG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 41CA3GVG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void EDQX7LL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AURZP3M ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void IM9EKFIG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void TXPQTVRG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 41HZIB9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UKWJEZ4 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void OQH7A3HG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 9I06EH4G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 78CK62L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B51JUCX ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void Y6ISNEDG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void RC3E75EG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void PVPGZ1E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void W33IZ3T ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void XU3F8YUG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JFY56LK ( ) throws Throwable { goodG2B ( ) ; },0
"public void QQ0ADRE ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void V2NP1BMG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WG5Z6IXG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void X75UVUB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3HA6GBJ ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 243VSRCG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void DPQH5QCG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GF2FDWB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JVPB6CD ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void SN03Q8RG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void E04QQXXG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void A4FJX1Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6R2HTPZ ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 7NWF0KUG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JFV1JO8 ( ) throws Throwable { goodG2B ( ) ; },0
"public void YM7DWWP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void GGWAZ1TG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void ZSU1O45 ( ) throws Throwable { goodG2B ( ) ; },0
public void 2MH004K ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int YA63AGO_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void PZZA01B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void VG6LS95G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 7BVCEYDG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void BRKR7RMG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int IDCA9AMG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void RD4VP1C ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 9Z44HH4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 0VNBX0WG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void PGBPWVUG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int WDC6C8SSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int V2LGGY7G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int QRBHCMKG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void JUYPIC6 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void T8CS4OF ( ) throws Throwable { goodG2B ( ) ; },0
private void MOKEWCWG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void N8NWEDVSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void YUR7PVV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void OOI1SKT ( ) throws Throwable { goodG2B ( ) ; },0
private void SO2SDGDG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void 0AUKO1KG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int OJLMPGUSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void JF4NZ27 ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int FLWBH2OG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 2FV1F5BG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 97MQIFZ ( ) throws Throwable { goodG2B ( ) ; },0
private void HRNPWEISink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void PIEYZE6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void UQFIST2 ( ) throws Throwable { goodG2B ( ) ; },0
private void YK63DKAG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void PXPTTL0G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 770KWY2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void F7AUP40 ( ) throws Throwable { goodG2B ( ) ; },0
private void NFB04F5G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void JYGBY1RSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void MTVF5NIG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void B7II2AH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void SZIKWVV ( ) throws Throwable { goodG2B ( ) ; },0
private void 7VF17PXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void QL3S18GSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void 9BNTPNCG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void YOAYLUUSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 5MAD1G7G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void CMHZP5W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void ZHXKCAA ( ) throws Throwable { goodG2B ( ) ; },0
private void PH9Q90SG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void IS5TDRKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void DIB8BSVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void H6BN1FOSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void NXOYEGJG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 57HX8NHSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 1PIVRDXG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void FR9OUM7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void PAHP1UN ( ) throws Throwable { goodG2B ( ) ; },0
private void 286UEPFG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 9AO2OB1Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void XN9NPNIG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void GRM7Y79Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void PY7CBY9G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 3W7JNLVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void T3E3HBGG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 8G40OAZSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 1LLYGCLG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void MLU8175 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 5KPBM2X ( ) throws Throwable { goodG2B ( ) ; },0
private void ZZZNZ7HG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int JT6VW01Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public int X13I6LZG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void ZN4JLWQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 3Q9WJVK ( ) throws Throwable { goodG2B ( ) ; },0
private void HJ4Z7PZG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 7VSBLRFSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void XCJ3KL2G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void TNENY8X ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void KAKONHX ( ) throws Throwable { goodG2B ( ) ; },0
private void O0CNEJ9G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void LUKGC5DSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void LLZKBGEG2BSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void WNSUHMO ( ) throws Throwable { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void OHI0ZAZ ( ) throws Throwable { goodG2B ( ) ; },0
private void QPB540DG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void JKECGBMSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void L6QVWVNG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void CF7A8CK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void Q6MDE7B ( ) throws Throwable { goodG2B ( ) ; },0
private void I895C5VG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void OL8PO5WSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void A5QOI4VG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void VDFD0ME ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void P0KYLSN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3A7X4ZPG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 0QMHEHMSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void EJXW3ZIG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void N4TDF4B ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 7YWRN08 ( ) throws Throwable { goodG2B ( ) ; },0
"private void D7VLZ0WG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void ZSOT54KSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void P9O9MTQG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void QMLHJAZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 1N08DPH ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1UQ8GM1G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void TK0LYG4Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void G7BEMA4G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void NCE6FIR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void ZWNVT8R ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7EGWW0RG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Y06LOXFSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void YD0IBLJG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void DN391L3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void WEMZJDV ( ) throws Throwable { goodG2B ( ) ; },0
private void PTKJJJLG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void CRKBZ3S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void IKBBYTO ( ) throws Throwable { goodG2B ( ) ; },0
private void R16OA9MG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 5ABB3NV ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void XVTGJF5G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void LBR3UUZG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AOIKK9W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9LN30HD ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void OPCL6RQG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void NBYFZ34G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void R2BYWCY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0N2RYNO ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void GMWIR50G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void RGBG2QYG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void YA1MVJ0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7472E58 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void H4RAMW5G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void ZYJLNF0G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void QCVJRIO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VYWPMF4 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void KYDOKLYG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void TWRFBYJG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void NP9KOZN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RBG8AGY ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void AF3PIFUG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void O0KQ9EMG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void MIO9BLG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5LGQUZF ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void W27PMSTG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5T5LJM2G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 0COM220 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0B8RHA1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VGRKV7BG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 6NOV1IDG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void OBSW9CP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 44ZGU0D ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 47BIN54G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void FW9NI4RG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void NNGLDFA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OEQSDOG ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void Q6VGFZXG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void TA0SDJAG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 89TDK11 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JW0G2NX ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 2O0CSRLG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 1XZIP37 ( ) throws Throwable { goodG2B ( ) ; },0
"public void 7F6DT55 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 92PIF30G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void Q34J4JZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void QQMF5CN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MZF04U0 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VT5MYQBG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 8XSY07UG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AZFH56V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6G9ZCLG ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void NUYXR7NG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void ZTJO0M6G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 9XGN3NI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PO03VAF ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VWMDUKXG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void P3KO55B ( ) throws Throwable { goodG2B ( ) ; },0
"public void JMPNSZX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void R7KSDQTG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void E0JR0AM ( ) throws Throwable { goodG2B ( ) ; },0
public void JVQDBTB ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int 1KFD61F_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void PHVGBJZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 5YPZBDSG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int RPCO2AFG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 68LG8FYG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int EOMUFGEG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 8FTD96R ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void T67OS09 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FZSXAI7G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void T94UA54G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int R7NZ35ISource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 8R9ULOOG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int MFQ75UNG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 3XVGO3Q ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void AU7GF0G ( ) throws Throwable { goodG2B ( ) ; },0
private void RMGEDXPG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void 8Z50ROASink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void 5G95JMF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void Y486JGF ( ) throws Throwable { goodG2B ( ) ; },0
private void Y21JZ8GG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void 397UXI5G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int DJDEFC7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void 92CRBMJ ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int C7Q8G9NG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void LAYC5H1G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void O7Q7Y20 ( ) throws Throwable { goodG2B ( ) ; },0
private void ARR2369Sink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void J2SFLNC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 3O64M6W ( ) throws Throwable { goodG2B ( ) ; },0
private void DBWRZUZG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void BU4TKGZG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 9BUL93Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void ZRRGTVI ( ) throws Throwable { goodG2B ( ) ; },0
private void 7LLKNLZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void E3EXCKNSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void K9NMUTNG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void ND1Z7AL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void JL7VYBX ( ) throws Throwable { goodG2B ( ) ; },0
private void CNHL5WBG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void PI602RBSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void 10135CGG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void RU3BQZLSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void KVYPI8ZG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 5KFGUG5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void MID483S ( ) throws Throwable { goodG2B ( ) ; },0
private void YWCBF5XG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void GJM02V8Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void 3S9XA99G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void A3HEEAJSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void ERSYQHAG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void YH0LSY5Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void HXFHDF8G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void Y29X66W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void A52CZX6 ( ) throws Throwable { goodG2B ( ) ; },0
private void WW6LX81G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void H940AHZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void 9L9VC0TG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void TR1TKUESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void 6RBMGMIG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void Q5465NTSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void KWH655VG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void ZKQNM3SSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void JRZ4VBMG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void LYX7LOG ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void B18ZO92 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0TOUA7XG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 3U6NRG6Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public int GD88OGTG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void MW9X3MR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void S1XS073 ( ) throws Throwable { goodG2B ( ) ; },0
private void UVT4SN6G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void JAK8VULSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void N9DNE8BG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void AL128BC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void A2AUI8C ( ) throws Throwable { goodG2B ( ) ; },0
private void 95NOG9ZG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void NX2MESRSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void AYP3M7UG2BSink ( CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 4VNH729 ( ) throws Throwable { data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void WIGK4VN ( ) throws Throwable { goodG2B ( ) ; },0
private void EMC2XCBG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void RUX75P9Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void C5TTE14G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 8P4AWC9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void ZF9CQEQ ( ) throws Throwable { goodG2B ( ) ; },0
private void BXTZW76G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 0TY8KW4Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 2RZH1BTG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void UKIB77Y ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void MMF6J0Q ( ) throws Throwable { goodG2B ( ) ; },0
"private void 75AOHB7G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 0FZAATQSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 8OKNWERG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void NSLED8W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 8X2H8B6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 36VV6O1G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void W6GCOLISink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void YSYAV3ZG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 22UQRV6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void ZOG49Y4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2M5ZBVFG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void XDXUXSDSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void FSNKYAAG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void F2RNV23 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void X6LOT51 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 35ZUOF6G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ONU1DATSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 49R0LV2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void DCWDGH5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void LZ6TQQ9 ( ) throws Throwable { goodG2B ( ) ; },0
private void KUZPELKG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__console_readLine_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void DDG8QCK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void QXNUUK6 ( ) throws Throwable { goodG2B ( ) ; },0
private void PB5KK0LG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void L64XQ8P ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 5HIF9ZEG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void ZJ6T484G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void J86S0R2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 81S2PC3 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RSKATF9G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 6SPUH0UG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void U0VNZ74 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3BXEWVP ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void MLFA67FG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 8MAMGKFG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 4R4WQUL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4ZR0YQH ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void L4YM7IFG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void M9R3ND7G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void EBJOVZH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M6XB532 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void Z6SYP82G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void YMBBDT5G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void WON8SM8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 78EXFT9 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void C4RXOMBG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void FKWL8NTG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HTUCJT8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DID8MGU ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RLO2DZ2G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void GBJ4DANG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void INNVYYD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HDZTDWX ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 2NG6IV6G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void Y7VSUIZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 4NUUMJR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IF1T5DH ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void OKO0GCWG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void CNWI46ZG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void F0HNEQ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KV2SQCJ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void S3X2NYWG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 6PO1KMEG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ZS6RLOY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VI3TP2X ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RYBXTRPG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void V4YEO40 ( ) throws Throwable { goodG2B ( ) ; },0
"public void QTEUQNK ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void YVSO93PG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 03MRJBKG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 2VGW17C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4Y45LGT ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void CAE09Z1G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1RMTF5BG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void WWQF6FU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B1O7B0Y ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void ZKUQYO1G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PJ8QW0CG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void FAZV2QI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IJAPY7K ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void JDJC69PG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 7687ZNI ( ) throws Throwable { goodG2B ( ) ; },0
"public void 2K1QCQL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void LV58YT6G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void VZV64YA ( ) throws Throwable { goodG2B ( ) ; },0
public void 9T0NBDA ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int JFAAJPO_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void IQ65X6X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void NW6QP48G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int XBWV23FG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void U8VXRH4G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int 4H1IGA9G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void E8TUWMH ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void B6PD27A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void BBBZ6X7G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void NB5E09QG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int DC5DAQ5Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public int F3HXFV2G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int VZFMKYCG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 4MBPS6I ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void MVCFMAA ( ) throws Throwable { goodG2B ( ) ; },0
private void HLYCCUKG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void 5IUJ7IMSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void K20TQTG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void BL95A36 ( ) throws Throwable { goodG2B ( ) ; },0
private void 20CYUK6G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 70TMUY5G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int RKK5TE8Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void PIF7XJT ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 5SIDCQ8G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 934L7QIG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IHKJZRV ( ) throws Throwable { goodG2B ( ) ; },0
private void N1UJ9AESink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void 7DATV6T ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void L5I9WNA ( ) throws Throwable { goodG2B ( ) ; },0
private void V8GN13JG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 6JJKIQMG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 6N73ZAA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void LOW7SR2 ( ) throws Throwable { goodG2B ( ) ; },0
private void G6M12F3G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void OXDB6X9Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void EMYOA19G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void NNJ9ZPO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void RMD4AZ3 ( ) throws Throwable { goodG2B ( ) ; },0
private void DLEZYBIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void F9LAF3RSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 7IPCD41G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 0GBP8H1Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void R43XVDWG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void TZNAK0Q ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void WCMYJ2A ( ) throws Throwable { goodG2B ( ) ; },0
private void R6497EOG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 68ILVZRSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void XC1W371G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void VSRHEIOSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void IDGKDV3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void ITDNXO7Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void H38V9G4G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void J1Y1FKS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void D1Y5XII ( ) throws Throwable { goodG2B ( ) ; },0
private void WM0KEYTG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 7VTEHEASink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void U1TPLD4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void I63FPBQSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void F5HP685G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 2GO4JLDSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void SXSSMIYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void O7LRCVESink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 3Q25FEZG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void F3FYD18 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 865Y7A1 ( ) throws Throwable { goodG2B ( ) ; },0
private void EC18DK8G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int N7HL0I9Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public int 9OUOTIMG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 40LAUWC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void EBXOD91 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2DS5JUQG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void COAFVKRSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 47HNGJ5G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void JQ6MGWL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void PSOJP9U ( ) throws Throwable { goodG2B ( ) ; },0
private void 7FKPH6UG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 16W0WZXSink ( CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 5P3QNXIG2BSink ( CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void PV9RB1F ( ) throws Throwable { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void FO0JN9F ( ) throws Throwable { goodG2B ( ) ; },0
private void 23WP6R0G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void MHUMRKMSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void V0473VYG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void I7NZAH4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 1R4MC0B ( ) throws Throwable { goodG2B ( ) ; },0
private void WLIQINXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void LO1DLPRSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void Z6I2M51G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void NCNJFEK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void GLUXVD6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1QQNLJVG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 8IBNNGDSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void C6ULKL8G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 7TJTQX9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void G62E7FO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2RNBBDHG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void SOK3Z6WSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void J90LR9WG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void ATIGCA0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 0IGL7JT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0SWD6MVG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void VOV1EN6Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void RDTJ0ICG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void AQEN5LM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void WOHV2GF ( ) throws Throwable { goodG2B ( ) ; },0
"private void FV96ZDUG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void SC7R74YSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8Z5HI9BG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VWS4UFV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RLCNKEG ( ) throws Throwable { goodG2B ( ) ; },0
private void 4XBIPEWG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void H5W65TW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void 2YLUKGI ( ) throws Throwable { goodG2B ( ) ; },0
private void 5YR4EFWG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void E6SADW1 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 0WBQZRMG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void JMRGJYOG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JC4MMMR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O9XGPS6 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 7XB3HAXG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void DMNHLPNG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void DN882TO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 56ZEX17 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void CFJ6578G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 49SMZZIG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void L2836PN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VBUXQIV ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void R8SMT8TG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void XP52AGGG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 836UVWG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 56LJ6PS ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void SJ3CLXVG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 09BS2LIG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void DUGX5V3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R6CCYC3 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ZYCBXDHG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 9UTLTRCG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void ZYWV728 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4I0PZ29 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void Q1TQQY3G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void KE12ZK1G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void P1J1F83 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void L3LPLQE ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void S6Z43PAG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void NWNGEFZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void NNWO4D4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5XRYLVI ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void M0KNY5PG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void N8GCHCXG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 2VJVOGV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CF06LKJ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void L573RLUG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void PCBXB61G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 38OZTQS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZS3EEJ7 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void QYYZTGXG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void YMMD8QX ( ) throws Throwable { goodG2B ( ) ; },0
"public void B1L6N0N ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 22KCZYXG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void RBAKY44G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void CYDOPN9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8OG9NV2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 1I9TBV4G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void TPZTN7NG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void UIYADY2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 501XB5M ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void A6BWYC0G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void MB5UL2JG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void SB1WVXA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FW9HMOY ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 83GQGICG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void HCT47OZ ( ) throws Throwable { goodG2B ( ) ; },0
"public void TEPHVOE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void XRERE15G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void AZK3JY4 ( ) throws Throwable { goodG2B ( ) ; },0
public void JSLXCZV ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int 2H0DXC3_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void YT8XWMA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void EZM5BRFG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 8ELT9VAG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void A9DTMOCG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int WTS6ZOZG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void BOPKFUQ ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 65CCMGT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 3A7QPJUG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void LDMWG1DG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int PN9NDE6Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public int CZDXAOUG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int EOMETAMG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QPMIV7K ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void YK8E3X8 ( ) throws Throwable { goodG2B ( ) ; },0
private void QVH21UNG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void HEN9DGRSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void 5RMB99Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void N5JAJ0F ( ) throws Throwable { goodG2B ( ) ; },0
private void XJLTGPJG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void 6ETIWEEG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 3233BJGSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void NXVWJ9P ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int 0AGOQ09G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void B59KNV1G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void VJ7Y4SA ( ) throws Throwable { goodG2B ( ) ; },0
private void K1GVN6BSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void ELISZY8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void FIAVFB2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 47ERA0XG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void TIKVWDFG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void XFB16KQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void UF87VIS ( ) throws Throwable { goodG2B ( ) ; },0
private void MNWW881G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void Q82SXC9Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void QHG25RZG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void 7JT3JCC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void 65FCFGG ( ) throws Throwable { goodG2B ( ) ; },0
private void HCDWVSDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void YI1KZ9YSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void 5D12EF4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 6GOX4DVSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 22CXHZVG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void XRFL1BV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void BLFXH0R ( ) throws Throwable { goodG2B ( ) ; },0
private void 39DVUPQG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 4NIJSKYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void 3M6QD5FG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 40EI1TWSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void OMN1ZYIG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void BGIZL18Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void PY1WNL7G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void YN30N36 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void 7YK6D48 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0V4UHM6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void IZZQ8T1Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void I0LEETIG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void U7EDYLNSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void QE9TCP1G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VVL0AXYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void LRTU0OSG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void L5TFUZESink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 8IQV72IG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void MGC0MPL ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void KEC3RGX ( ) throws Throwable { goodG2B ( ) ; },0
private void T8RGYN4G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int LF6FBXMSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public int TONJ6JBG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 42XUK5S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 9G6A3EG ( ) throws Throwable { goodG2B ( ) ; },0
private void 21HAPJRG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void Q6JYH7VSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void Y0W2Y5UG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void VCZZM0U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 7K26U6I ( ) throws Throwable { goodG2B ( ) ; },0
private void 2SAAWKDG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void W2I24VPSink ( CWE789_Uncontrolled_Mem_Alloc__database_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 63B62UMG2BSink ( CWE789_Uncontrolled_Mem_Alloc__database_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 90OEOEX ( ) throws Throwable { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void S05WFRX ( ) throws Throwable { goodG2B ( ) ; },0
private void GRCG06NG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void ANCK14GSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 3R7TSQVG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 9GDRL3A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 9RPLD90 ( ) throws Throwable { goodG2B ( ) ; },0
private void I2AOSX5G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void KJDK8PMSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void FDBOV0UG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void JUT4N10 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 4S3RGBL ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3Z8FSIQG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void ZM42SR5Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void AOTYD4EG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void SKP3JC5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 31I9ZBI ( ) throws Throwable { goodG2B ( ) ; },0
"private void XR8QCD7G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void NQHWMUDSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 8MYNW2BG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void EG7WV6Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 7IXFDJB ( ) throws Throwable { goodG2B ( ) ; },0
"private void TZQRQZIG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void FHBVMHYSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void DZPW4HKG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void GUKMDX6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void EW3PPNF ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3703I6BG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void AQPYMVZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void CN8QZU9G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void ZDOKIGJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE789_Uncontrolled_Mem_Alloc__database_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void YZBBHCF ( ) throws Throwable { goodG2B ( ) ; },0
private void LRYSUCSG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__database_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 8PI0794 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void 4XWLLDN ( ) throws Throwable { goodG2B ( ) ; },0
private void G72R9XDG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void FB7M6XO ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 0QWDC8JG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void OQBV8MEG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 20FMOA1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6UNB99D ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void EC6PVFHG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void W4XWM7SG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 36VW8XV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VUCEGP1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 0J8FBALG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void TYJ16JBG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void KV5FEPF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F1V707I ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void RV4AMOWG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void FSM61C3G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void NB3KOXU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R8DKR9N ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void LV8E6VVG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5GU811XG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void E420N6E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LKJ4HYA ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void NW4OKFXG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 3CDBT4UG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void H4ISPTP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EO8IRGS ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void E6RXRI7G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void U3C5KPZG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 800GXE0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PSWU78O ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void MXBWIFEG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KZGDUYTG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void KD097FB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TKESWSH ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void EB0VDGLG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void IU17Z6HG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void IK3CAYZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EI54U27 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8GS7SQ0G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void Z7K2H2NG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void I5Y6A3F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TG7IN6I ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void A7GLASPG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void FGIR5IX ( ) throws Throwable { goodG2B ( ) ; },0
"public void 567QN8H ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void KEFGB5EG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 8GOJP6DG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void C1ICWF0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3IV435S ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void FW27SLEG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void CM955WTG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void RV2WO4S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BAFY0JW ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void S9QUDR4G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 4CZ298TG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 9RYSDKC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4FDTUY2 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8DUHXADG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 0NK5MIJ ( ) throws Throwable { goodG2B ( ) ; },0
"public void QQITJP6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void 7GME4D8G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void 1KGZXVA ( ) throws Throwable { goodG2B ( ) ; },0
public void SWKTYYD ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int K30XO8C_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public void VO3WMP0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void EX93DNJG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int PDWWGCHG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void FYSWUL5G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int RLKA73AG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void V2L1W3Z ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void YZBNCPG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void VI20ON2G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void SJIVDXNG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int B9ZWWQ6Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = 0 ; } return data ; }",1
public int 36U1Y1EG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int FDIHKRDG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__database_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void CLL1872 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void 2LZIJL6 ( ) throws Throwable { goodG2B ( ) ; },0
private void PGV4QSKG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void F9KE44HSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void KM1Z4ED ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void 3ZITA40 ( ) throws Throwable { goodG2B ( ) ; },0
private void AWRGY83G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void 1ZUCWD4G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 6SVKXZTSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void 6XOQ805 ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int L7NWYOOG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void GBX6RRHG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void OJP3FO2 ( ) throws Throwable { goodG2B ( ) ; },0
private void YSKWGUMSink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void N6PUY6K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 9QV8E7X ( ) throws Throwable { goodG2B ( ) ; },0
private void YD7M2Y2G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void FGLYB15G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void BKSJ5XQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void BOXHDK7 ( ) throws Throwable { goodG2B ( ) ; },0
private void S8PO1E9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void QJWVDHGSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 6UAL6GZG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void AE3JCF3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void DUWQDNS ( ) throws Throwable { goodG2B ( ) ; },0
private void VO188QYG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void NDVE9LBSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void D655JH5G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 9IDLSF2Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 0YPCEPKG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 8LN42WJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void EKOM4C3 ( ) throws Throwable { goodG2B ( ) ; },0
private void RZT4ZJAG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void XZSSZ8FSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void S8GH0TIG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RDFFQPTSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void D4FM5ONG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0UH5PGHSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void ODB42K9G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void ENP9DPU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void GNGAXWD ( ) throws Throwable { goodG2B ( ) ; },0
private void 6CXOUEGG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void KZEAGLFSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void S6203MBG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void RY5WBLXSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void PO0RNXGG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FCHNAJ9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void GLH4XVEG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void LP9JYTXSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 6JP4BU1G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void TBGJ7WD ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ZS6A3T1 ( ) throws Throwable { goodG2B ( ) ; },0
private void OO402P4G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int IDW0943Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public int MGE6QUBG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void KFCVUZ9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void JWPG9FF ( ) throws Throwable { goodG2B ( ) ; },0
private void N6KMVD0G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void VNKSGFZSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void QTNYYRYG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void DPCS4Y2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void K2IFLNW ( ) throws Throwable { goodG2B ( ) ; },0
private void 871DE7XG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void KQEYQX6Sink ( CWE789_Uncontrolled_Mem_Alloc__database_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void EO6URC8G2BSink ( CWE789_Uncontrolled_Mem_Alloc__database_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void H9EKA5S ( ) throws Throwable { data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void RMGXI85 ( ) throws Throwable { goodG2B ( ) ; },0
private void UWO8TZ8G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void ZJ7RVQASink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void D5YYX4BG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__database_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void EZWY1H7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 4XVD3TS ( ) throws Throwable { goodG2B ( ) ; },0
private void EGY10BGG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 1VROQJ3Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 9MJR3W3G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void VYLN2BO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 7N4T68N ( ) throws Throwable { goodG2B ( ) ; },0
"private void GYVRBXPG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void D87E4NOSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void X4E37ETG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void H45NFBW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void D5SO53G ( ) throws Throwable { goodG2B ( ) ; },0
"private void NVC9AJ7G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 899IVG3Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void RQX6NAUG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void OD0WXMF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 6LO97KT ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6C6IC7AG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 7U0BGN5Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void LC0HUQJG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void D673X58 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void EI8OYVN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0MVSCGGG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void EXEJCLOSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void WXD73XSG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void XLJWVW3 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; String stringNumber = resultSet . getString ( 1 ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE789_Uncontrolled_Mem_Alloc__database_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 32BE3K1 ( ) throws Throwable { goodG2B ( ) ; },0
private void 4IT12IXG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__database_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__database_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void ETUNZFB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void 5778HPP ( ) throws Throwable { goodG2B ( ) ; },0
private void 0FCZ3RFG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void QIBGE7N ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TRR8XCQG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void ORA7BW7G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 2SAGV9J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9DOVTDG ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void HI18B57G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void QFVKW2SG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void JACUH4J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K8SEOWH ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void KOZ2KPQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void W2MT6ZQG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void QPSTST2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WP6WY3G ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void P1VO4SAG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 00132Z3G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void BMIVMN0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2NPHKIS ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void VIFZG21G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void I6YC7Q5G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IY5N3FT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XEALH9E ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 33KSRPMG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void MXMB6YLG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void FMXGV7D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7FWFVHG ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void QOIBPGXG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1LQ4JE5G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void I3F896I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6ITZ4YX ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void J3L39FRG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void BTBNZ82G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void R02GHF4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1CRPLSH ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void TNKQD2OG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 4PHG12OG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void BXF05X8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7CZCG4O ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void WI503ICG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 2OXO9MWG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void XB9EDFH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0BTEKZO ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void QFG2VYJG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 70H0QGQ ( ) throws Throwable { goodG2B ( ) ; },0
"public void 1ZYO85R ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void EEQO2ELG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void USTG7WFG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 341P48K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V1F25HZ ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void ZJPA4KXG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PLGTWBOG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SXQC0G4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6VRY7GO ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 4ZGCMSFG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 7QWO8BQG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 6IIP587 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4YPNQFA ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void VLXSCLIG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void AALT2VM ( ) throws Throwable { goodG2B ( ) ; },0
"public void PG6QO1U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void MZMS7Y4G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void NCD7EZF ( ) throws Throwable { goodG2B ( ) ; },0
public void OXZVE3V ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int Z2HYTD0_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void 0JNKL5Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 9KMJF7WG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int PWVFCM9G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void G8M98MJG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int 1NNVL98G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void BKYYFVB ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void MAJ4IA1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void G96UIHKG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void S7GCO98G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int XP15JGZSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public int TA3LZZ0G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int A5FTBF2G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void C7P9PNM ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void IP1M1ZH ( ) throws Throwable { goodG2B ( ) ; },0
private void FL71MS4G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void 173WW7HSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void EF8JYYZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void 6QH1UZJ ( ) throws Throwable { goodG2B ( ) ; },0
private void GSDH0SLG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void YPZZ136G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int NTK2JZWSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void 4TCY8CE ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 1CN5OQIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void NZ1R5W7G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void FNLUSAB ( ) throws Throwable { goodG2B ( ) ; },0
private void VTT9P5HSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void 8NPGX6M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void WJ1U426 ( ) throws Throwable { goodG2B ( ) ; },0
private void 450W5MXG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void DFNP2O4G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void IS0J5PD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void I07MSGD ( ) throws Throwable { goodG2B ( ) ; },0
private void GNPNH04G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void BZBNO9SSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void G0HTP5MG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 6SWS95M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void JBYOJPL ( ) throws Throwable { goodG2B ( ) ; },0
private void JYS1ZA0G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void MPAFMQOSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 43HFNYAG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 1QUG025Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 38Z463PG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void JYKKAU2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void SXRTK2Y ( ) throws Throwable { goodG2B ( ) ; },0
private void HCRYVEKG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void UX1ZJI7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void KZJEV1VG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 6IXSXXESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void 1R9Y1IUG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void JIQIV6KSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void K0S67V2G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void KWPS8DE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void 2N7YA31 ( ) throws Throwable { goodG2B ( ) ; },0
private void OD3FKAYG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void D26BDO3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void GR7V840G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 3ZVO4ZVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void S57074JG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void D6E8OYHSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void KQLKW5PG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 5FKXNQ7Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void SIYJ4JQG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void VKJPDH2 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void EPEWG5A ( ) throws Throwable { goodG2B ( ) ; },0
private void 7ZQMCCMG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 5CX7AWHSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public int H18RSNCG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void KIG6AVK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 2BUU231 ( ) throws Throwable { goodG2B ( ) ; },0
private void QYBGS3XG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void XGH04VDSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void H6KI00GG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void WS7WVTK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 2RFV319 ( ) throws Throwable { goodG2B ( ) ; },0
private void A4Y3I8VG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void JQCM7XPSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void FENVZ74G2BSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void KYLFG7T ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void 1VNLLO3 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5WQP6MUG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void G2PJ6N7Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void ZAOXQ7SG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void LHQ393B ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KK4OGV9 ( ) throws Throwable { goodG2B ( ) ; },0
private void YVAZCI7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void AXUCKEQSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XBKP5M2G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void L3NCGOF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void BY6PI35 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 81D1GNYG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 3SDHKX8Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void E2BRDF3G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void R1M4U8S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void YD7JG5J ( ) throws Throwable { goodG2B ( ) ; },0
"private void KM6MTAUG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void PJIHVENSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void ZWOOYAMG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 2V10N6Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 681ZQOY ( ) throws Throwable { goodG2B ( ) ; },0
"private void IR930NKG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 7SCXMF3Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 6FH1HJRG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void WB2KZ6E ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 5CRU53Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6T71TV0G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ABWVCTFSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void EB4C1UUG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void R91SKUV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 9ES46GY ( ) throws Throwable { goodG2B ( ) ; },0
private void 8Y6H7V5G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 0ZFIAZJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void RXL9K2M ( ) throws Throwable { goodG2B ( ) ; },0
private void QN7NQDSG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void C36VPL9 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 4ZT9NYLG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 9GDV46GG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 2HK2G2A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F14YRS9 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void VZYCJ7SG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void K6F4P72G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void WOWDMIV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1BE9LR0 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 1TTIPGCG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LBY03PIG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 1I9QMMM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9DE9I57 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 1YBSBDUG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void JL4Y357G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void UJ03RS3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0K545C8 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void WH7196KG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void CN82QDLG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void G3S68UK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EOHQAUY ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void QBCM6X4G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 9GK2TWZG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void REF7JI1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void F040OEA ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 61Q103RG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void IG9FNSYG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void AP88S86 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R803RUS ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void HIMFOMPG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 3XVV0YEG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void KW873X7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8DNKZJS ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void VPBW692G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 7G905ICG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void OCS05DP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MWPYNG1 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void GWVRADEG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 3LC1S8EG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void TS1VBJH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SI5ALKS ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ZPVH2NXG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void KK0U6H2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void ER16TFC ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 4349MQCG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 1LASW9MG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void HESHPGK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5KZCRC7 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 88K6CJ0G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void Q0UA396G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void O1YXB56 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BPDK6BH ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void FV8SOO6G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ZDD6J2ZG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void X5QSSDB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4MUCIME ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void PD9V6AMG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void R36U7FI ( ) throws Throwable { goodG2B ( ) ; },0
"public void L746XJ9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void JKP7J0YG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void Q6BJLSY ( ) throws Throwable { goodG2B ( ) ; },0
public void XOPAJPF ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int XJZIFBY_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void DIHJ9V0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void L0P6BGDG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int AQTK4UZG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 8MH3ZE1G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int R4K8V04G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void TXRXD6X ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void AS1WLJH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 776UN0FG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 4EJ1CCKG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int GEHMCLJSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public int R33VS8TG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int KNJHKL5G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QE728SA ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void XXJZ3ZO ( ) throws Throwable { goodG2B ( ) ; },0
private void VSRKVBAG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void 1YSA7O4Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void UKXVTJM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void RGG2ZBG ( ) throws Throwable { goodG2B ( ) ; },0
private void IDP5D9OG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void 21CJMDAG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int LGA49VKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void M8YLHXF ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int F0KQ5J3G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 12UAEEQG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void DIBD1LQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 2QM7GH2Sink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void UMEYJ3G ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void OLM8GAB ( ) throws Throwable { goodG2B ( ) ; },0
private void CW9ZGDKG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void KPWFRR4G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 6BQS9OX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void K551V49 ( ) throws Throwable { goodG2B ( ) ; },0
private void B1FASUIG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void SSKF0HRSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void IARQB8OG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void 7EBYHSP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void IUHPOOZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 4XKFLMUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void N74FCK7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void E0OP6U1G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void RD3LU39Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 8MYMJ3UG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void V3YJS2T ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void YADCOTN ( ) throws Throwable { goodG2B ( ) ; },0
private void JRRXJ1FG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void AJFDRCESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void BFWOQAVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 3HXLDMZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void PN9E1A4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void G4M76W4Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 33VSGLVG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void UQH1BVG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void 13UNAG8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7K4X54GG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void XAWR8PTSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void S5E6467G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 9PH5K2ISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void EWY8WNHG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void VI3NOGBSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void R00GNLQG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void O113A1NSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void R8X89HLG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void 2LHCM23 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void V42U37M ( ) throws Throwable { goodG2B ( ) ; },0
private void 93WQD5TG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int 2RBVJHWSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public int TKDGMJRG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 24PJB6B ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void P6Z0EVC ( ) throws Throwable { goodG2B ( ) ; },0
private void DLIHTP8G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 5GSEN30Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 5KOURU4G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 17ROJKE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void H31F6PT ( ) throws Throwable { goodG2B ( ) ; },0
private void 8DAFW9XG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void NPX3IQBSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void TO935Q6G2BSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void EHXGWDC ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void XGJS7KI ( ) throws Throwable { goodG2B ( ) ; },0
private void P1LK01BG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void TAKLMXASink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 18FEGAXG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void ADZH1CN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KJIEQ0T ( ) throws Throwable { goodG2B ( ) ; },0
private void VZM9E2IG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 72KEXALSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void BY1AWMQG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 741PUT4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void UE9E34C ( ) throws Throwable { goodG2B ( ) ; },0
"private void HLRVXKUG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void A0UP87PSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void NF7G5KQG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void W9TNV6N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void ABHBA35 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MV3GGXSG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void WK2F6RTSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void HHIXYQJG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void NI9QLIN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void HP8ML03 ( ) throws Throwable { goodG2B ( ) ; },0
"private void LNLZN65G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void KIY79ZSSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void SQL4H05G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void EYU86QP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8T2AWOE ( ) throws Throwable { goodG2B ( ) ; },0
"private void J933ITFG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void K9OLU90Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 2BCZUYRG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 5KEMBAX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 2YVIKAN ( ) throws Throwable { goodG2B ( ) ; },0
private void K9TDWWPG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void PRBICIG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void N55JQRW ( ) throws Throwable { goodG2B ( ) ; },0
private void QJ1BKRKG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void XPIA5UM ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 07WSZQWG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void VZ6QQMWG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ZDMYXHQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NQZF1JB ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 7UZFWJ4G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5PC9S8QG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UJ644M9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EWS7JC9 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 0ILMWV7G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 7WWN30YG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AZ6VX4M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PF500I7 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void DM2QZP6G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void HK3KIN9G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UBGZ7VW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S50OX24 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 7NZI3IKG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void YKPJNU9G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void HHH84L3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6WVFXB5 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void MP0TW48G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void M7KQM93G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 572JY2Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MC9CO98 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void ALD2236G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void GU53Z7LG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 7CTANN2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S0GCY6U ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void H1GVPXMG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void X6RGOCOG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void YV1UFI2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4ICKCC0 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 1SSSRGNG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void X6OI2K9G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 363I9TP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void W4OECIG ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 5TLPT6BG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void GV7I81TG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AU4F5ID ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V378VLI ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void V7C4R9IG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void EWC2FUH ( ) throws Throwable { goodG2B ( ) ; },0
"public void Q4U9WMR ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 5TM40SLG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 1GI6980G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UNI1MOH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BQOTZ0G ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void J379HZ3G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void Z2IRV6YG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void I1EQZH4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EOFEKFF ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void K8F9P6OG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void DX22LMIG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 6XWUQCP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YZB3K1L ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void ILNA4VQG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void WHXAIY2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void ANUOBPN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void GCEOSK0G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void ARP7QEJ ( ) throws Throwable { goodG2B ( ) ; },0
public void NM94V4U ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int YJFT1EX_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public void O3YKLVM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void CV3KH4AG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int Q1CNJB0G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void VRIJK0OG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int F6RJD93G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 6BXR2EM ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ZMEDBOJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void RZ2J3R4G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void QJT43NOG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int KCPP819Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
public int 54RQTW9G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 5USBMZLG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 4QR3NWL ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void AN1GHOK ( ) throws Throwable { goodG2B ( ) ; },0
private void BG777Q3G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void 4IB3DJDSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void VRQOCBG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } badSink ( data ) ; }",1
public void E96R7B2 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZEX2WRQG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void KFI6U6TG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int G7B6ODQSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public void FLPP9J0 ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int KRA4276G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 9YUCH42G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void YBN6UNL ( ) throws Throwable { goodG2B ( ) ; },0
private void VPWC4S6Sink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void DLE4ATB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 1SUV60T ( ) throws Throwable { goodG2B ( ) ; },0
private void LF88JI3G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void TFG2JRVG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 9WHTQ1W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void IRDCYLO ( ) throws Throwable { goodG2B ( ) ; },0
private void ZPRHBWNG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void UDO55MHSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void HJWH66RG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void AA9KWEG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void I8DT0G2 ( ) throws Throwable { goodG2B ( ) ; },0
private void OOGG7WLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void Z6GBBM3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void JA0TUDRG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void OESL8S5Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void RRYO8F0G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 2I8V7VL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void S8L4QBY ( ) throws Throwable { goodG2B ( ) ; },0
private void LITD82EG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 0NHVB4VSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void EDPHKP3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void YNBYQYUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void M4N9ZFKG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void SRCCRXWSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void DBYSWZFG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void YE1CT3L ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void Q112L12 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7WYGJ3YG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 07WH0OVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void P3VB63CG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 66XXCW0Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void GAMQBSVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void CBWS3DHSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void 6IC61LLG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void SK2I89TSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 3WUFCDRG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void W997OZO ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void Y2FD3Q3 ( ) throws Throwable { goodG2B ( ) ; },0
private void N1LKEV4G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int MWKU16PSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } return data ; }",1
public int U43MTYDG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void KMERUPC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 6ZI3NSD ( ) throws Throwable { goodG2B ( ) ; },0
private void 4MS8QH5G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void QG53OZ4Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 6YK7QIOG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void P1Z8147 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void HSD11JN ( ) throws Throwable { goodG2B ( ) ; },0
private void Z1ZEO8QG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 3H5KYQBSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void WKYTKRUG2BSink ( CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 08JT0MT ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void NVIJO1U ( ) throws Throwable { goodG2B ( ) ; },0
private void M7N8IKNG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void 97YCAE6Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void TQEUL09G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 6D0INJA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void NLJ40MH ( ) throws Throwable { goodG2B ( ) ; },0
private void ALY9U6OG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 8KM5DUTSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 8DMDHREG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void X44C7W9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void LHLB4QU ( ) throws Throwable { goodG2B ( ) ; },0
"private void SWAR9UZG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void VOH1E1LSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 3R5XUGHG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void SDCH7TG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void V8NY15N ( ) throws Throwable { goodG2B ( ) ; },0
"private void UH7ZC7DG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void B1FHSSSSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ULASUWXG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void XCC2BHA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void XT6UP5L ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3B6HH1VG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void GA37E1HSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 6CTCG17G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void G1PP0UL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void ZBJEO0X ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6KKV20NG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void T13JBX3Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void OOWHBH6G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void YS1O774 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getenv ( ""ADD"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void Z4U1XYA ( ) throws Throwable { goodG2B ( ) ; },0
private void MMF87XBG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Environment_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void LXSTCG8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void 9DYE829 ( ) throws Throwable { goodG2B ( ) ; },0
private void TJS2ZPLG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void OF7A1RK ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void PQZN8YDG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void UI1OYSFG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9KL3U03 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 72OF4HZ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 7NIUFO9G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 750FAI9G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 71S9TBJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void S6BSH93 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 6FT5QLGG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 7F086EUG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void BV2EQ12 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K3UBARV ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void EC5YB8TG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void G5JBHKWG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HO0YS7B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ABWLYIH ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void WC582PGG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void TTY0JHMG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ZXPSRW5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SH5U4VD ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void QSQ0KYHG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void KRUU4BQG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9BF9UO5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1VXI1KP ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 0NA44V2G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void GNKYPPKG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ALNHOZI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TPU4QP6 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 4UBZEUZG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WZ43B4QG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void V4QF07O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZM9H451 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void IM0Z5UCG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void IKZ0CWKG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void I3LLX72 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O5242YC ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void G5PO9GAG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 3GB76NMG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 32UC852 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6S7ZHY2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 4T0HY4TG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 39TV2O1 ( ) throws Throwable { goodG2B ( ) ; },0
"public void PM9LN7G ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void B0KFG7HG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PIYJNYJG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 7QR0SBU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BD1Z7BX ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void WF8J2QPG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void FR8X95SG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IXODTUD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B4G83D2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void HSG5OTPG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void FPMUE1EG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9BC8NFQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KN9PCAV ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RMMMHBZG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5HW07IO ( ) throws Throwable { goodG2B ( ) ; },0
"public void CAOG98K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void 4M9WUU0G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void 4GC50F1 ( ) throws Throwable { goodG2B ( ) ; },0
public void YKJQV8N ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int HRY5R6O_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void AW9B5X3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 05LD3SWG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int NT5V6SMG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void P2638XPG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int B1HONZQG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void QX4HWHJ ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1CS8KJT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 89KC3JQG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void UGDCU4UG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int FHHUHICSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int R0QGI0CG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 3SSIY52G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void FYPS0E3 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void ZRB7JGO ( ) throws Throwable { goodG2B ( ) ; },0
private void 7PZU1MIG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void QJDV8I0Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void SJMGXCB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void Z6V42OI ( ) throws Throwable { goodG2B ( ) ; },0
private void L640Q9TG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void CM0IEJNG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int RKWMCD9Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void OFSQQBQ ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int SESIY7AG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void KXRGEVSG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9VZJMDH ( ) throws Throwable { goodG2B ( ) ; },0
private void DU32ZSZSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void 1C7VXLP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void SW6CJFU ( ) throws Throwable { goodG2B ( ) ; },0
private void 6GU6J45G2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void QFDP2KIG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void V8WUWPF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void G59HGI2 ( ) throws Throwable { goodG2B ( ) ; },0
private void Q3RBDPCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void UDTRHGPSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OV27CUOG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void EIQEEXA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void GVZUQM9 ( ) throws Throwable { goodG2B ( ) ; },0
private void JN5U8WDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void GVZZIZVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void XF3SJZBG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 5IR8UPESink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void ABF1YG6G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void SKA2IS9 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void 3FQ1XVP ( ) throws Throwable { goodG2B ( ) ; },0
private void 2IMDQHBG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void DNXRQKZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void N3UGWTLG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 98K1J9PSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void HX3P19HG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void OQAW500Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void UK4IMX6G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 1WT4F4U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void 8K9AQT8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 9KIE06XG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void VCVVEUISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void B40S5VOG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void Y31Y6WOSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void TRXSHCDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 57OALELSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void VQVX0L8G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void D83TVVRSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void Y1HCX7OG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 18PRZ1S ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 6ZEH5U2 ( ) throws Throwable { goodG2B ( ) ; },0
private void BYEQJ4NG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int B8W4Q3ASource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int DL63Y7MG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 85PE4LD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void L1I1G1A ( ) throws Throwable { goodG2B ( ) ; },0
private void DUHNHGQG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void AO9KB98Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void G8KUERAG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 3RE6A7C ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void XMIRN8V ( ) throws Throwable { goodG2B ( ) ; },0
private void N8J2JZJG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void FTQND38Sink ( CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 02CG4D0G2BSink ( CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void QVH6COH ( ) throws Throwable { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void MRYRBC0 ( ) throws Throwable { goodG2B ( ) ; },0
private void BM3HBRFG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void M8IOG8JSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void JX1ZUZZG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 5ZWPKB5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void INSSKT5 ( ) throws Throwable { goodG2B ( ) ; },0
private void BDQPA3ZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 8TKMA2VSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 5P0AKBNG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void DCWF5G0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void UA4226G ( ) throws Throwable { goodG2B ( ) ; },0
"private void UNC0QW3G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 8Y2FR9LSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void KFMHTJTG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void R1SSPNL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 6TVORFE ( ) throws Throwable { goodG2B ( ) ; },0
"private void 43AW1WTG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void TO81TR8Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 4VP05FCG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 5CPKVAO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 1XD989K ( ) throws Throwable { goodG2B ( ) ; },0
"private void AC9GVALG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void YE6A517Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void U1NS33SG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void RZTIIMH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DBKFQGI ( ) throws Throwable { goodG2B ( ) ; },0
"private void TXK3XVSG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GQIM6H6Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void CQZ3398G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 512LHDI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 3RPWR84 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZZRJN7SG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 2V8ITI8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void U4B97JY ( ) throws Throwable { goodG2B ( ) ; },0
private void 63HKZNXG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void Y3WR43R ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 0FPK9RFG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 481N7HAG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void NEW4W9O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FLUG2SI ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ORO2K62G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void YJ9CBQKG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void VU7087P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 231MB9A ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void XCBHKZHG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void PF039I9G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 63MBI5O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I0TAT1K ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void QH6MLRTG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void BN6GO33G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void P7H18UI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZVQWJYL ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void I33V614G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void USS67LRG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void PL9BF5E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void MVFFIU2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void TV5HM3AG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 5YG0MQLG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JXQCRNH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q2PU112 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void C3CCKD3G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 41ME0K9G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 7PCNSUF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Q25P8G4 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void WJJSEI4G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void KX88W3HG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void KFDV3L0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PM4ERR9 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void TLS072FG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void GIHLN10G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 3N4MDMA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WIXNV7L ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 56J44J2G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WS90S0RG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 8NO2M6G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2Z21UY5 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void P2LMEC6G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 4RUZEVH ( ) throws Throwable { goodG2B ( ) ; },0
"public void K83OAI8 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 1C8F9BPG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void G15ZX9BG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 8J4SH2X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void V5V1J9J ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void QEX52U7G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 6TN0BDOG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void IGUZV7W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void VKS7PTP ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void NK1I0W5G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 17AUECWG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void LVDWE9Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 50VCQOH ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ARGGREVG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void QQYQ0QU ( ) throws Throwable { goodG2B ( ) ; },0
"public void 8P30Q8D ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void 7X1RCDOG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void 22U0GRM ( ) throws Throwable { goodG2B ( ) ; },0
public void ODR3FAA ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int 7N84AYD_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void Q0IIGYJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void KPVJEZWG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 4VB1L0UG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void J76IOR8G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int YR8KOUVG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void TZZ4K4Z ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void GZICVGZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 5BX5TWIG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 9AH9WV4G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int TVY152JSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 8VSBXHYG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int LD14O5ZG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void 0NOXUCQ ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void TN9W63T ( ) throws Throwable { goodG2B ( ) ; },0
private void 7MNQ63IG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void QHVZWK6Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void 6GCQEUL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 4HFI1AY ( ) throws Throwable { goodG2B ( ) ; },0
private void 405BZPKG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void KBV4DBMG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int HXURH6CSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void 76MEPZK ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int U9K0FCHG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void U91AXP0G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void D1Q8RIK ( ) throws Throwable { goodG2B ( ) ; },0
private void PSHVNUNSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void 34OPSUP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void G8ACVAB ( ) throws Throwable { goodG2B ( ) ; },0
private void CR85O41G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 5SGT4G3G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void BWPJ661 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void F0N1W2Y ( ) throws Throwable { goodG2B ( ) ; },0
private void DZ6OT51G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 3PZFPQMSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 0BK5YQBG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void ULBCVYH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void 51DP62F ( ) throws Throwable { goodG2B ( ) ; },0
private void RPZJ3DXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void V31JUVYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void XT0G6QDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 5VRHIQGSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void HENS2RZG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void CQ74OH4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void Z3K8AKN ( ) throws Throwable { goodG2B ( ) ; },0
private void D7WLB0AG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void TC3ZTE0Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void MB98K9DG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void Y48BRXHSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void PD4E7VAG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void HEA94GDSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 8AOJP5ZG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void G5SLP01 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void QWBJK7R ( ) throws Throwable { goodG2B ( ) ; },0
private void RILI0R8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void BKYVQ6CSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void WJ98ZFDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 6HVQDMYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void E16D5GXG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void X991CH0Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void GOM7TTEG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void PGLPR0ASink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void L7K1X31G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void 83C8HTV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void ZD646IS ( ) throws Throwable { goodG2B ( ) ; },0
private void NTNBS8LG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int JE9LCJ0Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int X6FFAI3G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void CV1R1QP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void ZWBTK5H ( ) throws Throwable { goodG2B ( ) ; },0
private void C8PDBC0G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void PLPH6TLSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void YVZL6F8G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void NG3QCN6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void GFN59JN ( ) throws Throwable { goodG2B ( ) ; },0
private void 28TQZ2NG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 236NIY7Sink ( CWE789_Uncontrolled_Mem_Alloc__File_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void T8UQF8PG2BSink ( CWE789_Uncontrolled_Mem_Alloc__File_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 706EPJ8 ( ) throws Throwable { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void Z5R7C31 ( ) throws Throwable { goodG2B ( ) ; },0
private void TSUN3DNG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void MI1FYBUSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void SRNI6R9G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 97QD8ZI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KN4A5D8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 9YWBRXMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 7SE82S9Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 9BR3AHMG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void JLUKSLT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void GAB653P ( ) throws Throwable { goodG2B ( ) ; },0
"private void 00NM6VIG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void AVR6QW1Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void EKK4FHOG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void SHAKASV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 2ZWGNPI ( ) throws Throwable { goodG2B ( ) ; },0
"private void XQ8UBTXG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void DVMYPAOSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void WFU2O4SG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void M6C01ZI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 4BNK8BD ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4E20J8MG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 13GYP5OSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void OW5SRM4G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 82EB8AG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void LYWZW80 ( ) throws Throwable { goodG2B ( ) ; },0
"private void W0HHK55G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GVS2C2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 38SGEDUG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void P1X2HEP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__File_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void PXJHZY9 ( ) throws Throwable { goodG2B ( ) ; },0
private void L4Z53KJG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__File_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void KIUDQRZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void EG089J9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 3RM7KMMG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void QJ0WQ59 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 9P04LEGG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void HU0LAJ3G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 4PAM4FP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8HVP7J7 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 6P369UEG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 2XN539YG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void KV30EQL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3ZTBY3A ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void JY14ZBWG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void L687RNFG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void JANT81E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LAW6LUW ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void O1YZUBYG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void LTPUINLG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 3YIJSAY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U7NQH2O ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void O122QOCG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void O07EU3PG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void SFBOOED ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y6O5GK2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void GY178C1G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5OEUPQ1G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 0171P03 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IQCAZ14 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void AW5KD5EG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void VS5LAKUG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 0LM4TRU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y5ZSX5H ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void Z6XBGSYG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KA6A54QG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void IDGGQJR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LPAL5GQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void T6ZRFWOG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5Q9QEBEG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 4OUT12B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7B16E0K ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void QUM2O3BG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void HOYB64WG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 9N94S6L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PQVE6J4 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void LEU5IZ5G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void WL6OV42 ( ) throws Throwable { goodG2B ( ) ; },0
"public void T3LTBL0 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 1RRO4WEG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void G99WVNPG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 331IEO7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void H8CUX7E ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 6YT8QW5G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void OP9XUVQG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 7FNUVSX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TYTEOVB ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void YS71A8LG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void W9M8EM2G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 52EXDW6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1KM4X3X ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void MGACVNXG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 2XU97E2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void UR0O2HK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void 9V9FB17G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void NUMJIQ3 ( ) throws Throwable { goodG2B ( ) ; },0
public void R7C7QY8 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int XP0LG7B_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void YY5FIYW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void IEDI7EUG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int 1RHUO6ZG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void GQXKBDFG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int O9U1FBPG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 3O7QZ7M ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void UCBH360 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void YHJXR1RG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void ZMY4C4FG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int O9IUH8ESource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int X5EW0K6G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int BZYWB4IG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__File_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void TV39PHG ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void 3VMKDQR ( ) throws Throwable { goodG2B ( ) ; },0
private void WNNO54IG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void K7SHFBUSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void 61S5XY0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void ABSBEJ6 ( ) throws Throwable { goodG2B ( ) ; },0
private void R5I0YDIG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void 5XZ4GONG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 4OP9D7DSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void AYTUXQT ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 95ZW61IG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void SYJ6FNFG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void WF32FU5 ( ) throws Throwable { goodG2B ( ) ; },0
private void 3HHXANVSink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void 3FHQCUN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void C6S3VTP ( ) throws Throwable { goodG2B ( ) ; },0
private void H2UC01EG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void 6YJQNOXG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 3ZZEDHE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void CDO2J5L ( ) throws Throwable { goodG2B ( ) ; },0
private void WCPZJQAG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void FCAYBZ1Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void CCW2IK1G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 0BEYQ3U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void 8FXJWQI ( ) throws Throwable { goodG2B ( ) ; },0
private void 2B0KFB6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void XT29MTSSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void S5SYJKHG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 4N3GZZTSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 21K022WG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void WJBOOOT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void B0Q4VFB ( ) throws Throwable { goodG2B ( ) ; },0
private void UPVH7UAG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void TVM1KB9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void PGQ88GNG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void CQ9BV2ASink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void 50HMQQ3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void NTD3PXMSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 67FH423G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void GKG11WA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void YIIM88N ( ) throws Throwable { goodG2B ( ) ; },0
private void SF6A5VCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void NOLCPSISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void VMJ9J8EG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void L645G8BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void NOWB8P3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void L53R91FSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void EQM73GVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 3F09LF6Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void FH30KEOG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void CEFBZPK ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void AMQRVGA ( ) throws Throwable { goodG2B ( ) ; },0
private void GNLO1SBG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 8SFQWWOSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int DBR1CEUG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void AFUFLU8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void NAY2PFO ( ) throws Throwable { goodG2B ( ) ; },0
private void F9Y0BGHG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void RH5KCR7Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void M7UVZR6G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 7FU72B7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void CJP36Q5 ( ) throws Throwable { goodG2B ( ) ; },0
private void IUSYP1VG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void R928AMBSink ( CWE789_Uncontrolled_Mem_Alloc__File_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ZOADICJG2BSink ( CWE789_Uncontrolled_Mem_Alloc__File_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void N3CUDB6 ( ) throws Throwable { data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void MMZPQRR ( ) throws Throwable { goodG2B ( ) ; },0
private void CT09CDNG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void 9GARC0GSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void OGNJKEVG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__File_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 1DAX476 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void X5HQDSH ( ) throws Throwable { goodG2B ( ) ; },0
private void QQ0B8WXG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void GZBOLBUSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 5JGYLMDG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void WXCIT40 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void F2IEBX4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void YPT62CVG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 7RT5CSWSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void KYL3ZCLG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void X3WZGPV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void EC52DOS ( ) throws Throwable { goodG2B ( ) ; },0
"private void S51DCDXG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void YMVEJXOSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void C3L1L89G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void XLKEAG4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 6BJFA4F ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7VSZ2XXG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void NOM5HW1Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 985O17ZG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void NMS0SK6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void H7YDO26 ( ) throws Throwable { goodG2B ( ) ; },0
"private void QXW7DROG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void IDC2UU5Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void BYW3YD7G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JFQL65W ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__File_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 2898HH2 ( ) throws Throwable { goodG2B ( ) ; },0
private void P228TDRG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__File_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__File_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 1HPQ5EW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 2BCWU7S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7FCR59YG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void HMHIE9O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void CDK4E35G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void ONROWB0G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void EBUDLL4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void UAUVQKW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void VB5G1ONG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void S39TNWHG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void P4B5IU9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4VN9BCS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 6HB3CP7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 9SOLJG6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void NTHFFDU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void KY46DYG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void T1PZ5VFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 5GNN724G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8PPE54P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void P8L3RSJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void VRFN883G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void S87EI0LG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void DC76ZIQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 76L0ECN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void WF6WHC9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void E3EWNRIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void IET2R96 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6V17G3K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void OUM0FJJG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void LVG8NTWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 3EP0C4P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6OSUZ7E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 1UMXJPSG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void OU9MCXPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 5EOD4UL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void O8NRVFK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void DDXOVWOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void JFNNV4DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void OIF70JD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XGR4CB9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void LRW316CG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 2D5UGF4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void UMYUEP1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GP9TYK4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void MXUM76NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ZS7SKWW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void MUJ2YN3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void QN4VR0MG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void I8TCZ56G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void Y5THKO2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BRLJ503 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void Z6VRTYKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void IGH26PQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 2A2MB2S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NOUZ53G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void H45XZUMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 0DBMCPWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 9SUDIUI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EAM9L0P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 4UYD9CJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void HCCWXNO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void N1MX3OD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"private void ZX1LFWAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"public void ZAKY4TL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 8LCLMN5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int R7V1GJK_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public void GQX0CLP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void S68VW2UG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int WK2GQXXG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void 24AQC7ZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int V75139NG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void PMNK3P6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 97E8A6M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void SGBSZYQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22b ( ) ) . goodG2B1Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void P5D4NBOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22b ( ) ) . goodG2B2Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int 2BCK53ZSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public int N34OJX3G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int 624WZFWG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void 77QWR1T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"public void T42YLYC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void W9YZ69IG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"private void BRE6L5XSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void AJQM8WW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } badSink ( data , request , response ) ; }",1
"public void XA1EPQ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4XZI90QG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 4FYHN7QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int ZJGLFA3Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public void Z2ZZCXM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int 5KO2FNPG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void OV2H2E9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 9603TR5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YNW9GH1Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 1CS1E63 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void VBET2R9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CT83SYPG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 7FCSXO6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void SBM0EIP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void A9DMJN5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CVERDHEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HP8VUKXSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void HB1NXRZG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void KUWPLIT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void YYK5KB5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QJ7AO55G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NOSTGDVSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 1QR7MPDG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6W6SGL3Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void T59MFN1G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 1BGW91I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void VIQ0K6H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZR79P86G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HIAQOOYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4JEAKRQG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 2WR0UQ9Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void XOZKR2TG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SUANBT9Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void RACIJ4JG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 4R89DKI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void UCPS70V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HIRDZYWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KMVWF36Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 02GVKNNG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void B0GSC9KSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 46G7OFNG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WFCS96MSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void Q8AYFCMG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7R26VVPSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void DAK70GHG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8JT6ZJZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_61b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 9WN7CXN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 77DQEKZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_61b ( ) ) . goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int WFXE6FRSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public int HRNLK1WG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void HJGTWVX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void HPBGQJG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KPC0QGDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void FHPLLQMSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 4J4POGXG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void PH5V71G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void NIN504G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 862A65AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void MCB2C38Sink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void YTUIKPMG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void O8TAUKF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_68b ( ) ) . badSink ( request , response ) ; }",1
"public void J11JMT0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7OKX0N1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void MSKUU14Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void FKEJD53G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ASSASHF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void WAEBIU3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OKKYGGOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void K8OVVWUSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void WAXI5SJG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8HNM1AC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void N3PG6TQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6RWRK8FG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void ER8TURSSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void P4TBLUFG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 5L6ITYL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void BQTHZJ3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NJ0LRWZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void CH54YZ8Sink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 2FZCMHDG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void C3CHJN1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void G4ZUZPY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 08556S7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void K2V1MWKSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void L2VGE0QG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void QV9M0DW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void F2DAS67 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 33TOCO7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 5TNCAFLSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 23NJ7QQG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void AXMCSFA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 63ZT8AO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IZEQGO2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_ArrayList_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void FQ1YDER ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 3RC4OFL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UACDTDUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void NOI6WMP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void QW51K8FG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 4MD4KKXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UA9V7VI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9LPFB0H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void EALPTUOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void PBNTZZTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 3SVCR9E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1LRYFV3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void MU34JLZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void HAYWU0FG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void YUF54LF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DVINNZD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void DH8RWZSG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void YKYNUZRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UBSYQU6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void M3YCEMH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 02H25KRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 622L9G1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void WEDKGKY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RTE8R0P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 7KUJPV8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void FFF0IT7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void TGE5QT3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IKNT736 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 7RPTBH5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 5NJVT4GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void FHZ538L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3GJS62R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void M0JXH2YG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void QCVNSQBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void ZCWWDKN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IFHB80C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 9ZAQ1J9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void IKUNBEIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 0QMHQS7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void Y3D5NWX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void LK3EZDWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void XQWIMCKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void GVYSZL5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TKCWPNN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void GAAWPGPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void QTN5IW6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 2G6CGNC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void S4CD7LCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void Q3SYIMZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 8P34ZRU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GJYC9DJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void DOI529SG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 96HGSN9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void SZ2AJG2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1PEXHZD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void A3058JUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void YGA8NF8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 4B05MOB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void A5A6JFL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void PBE22SHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 850ZT7W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void CMLFXT4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
"private void NYL2Y1GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",0
"public void JW0ZJKE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void UVD9FG2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int 7EUSVHH_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public void MJ8L0OL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void NI0AXW1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int TTCWEMMG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void FS33747G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int LGTNS1NG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void MGP7S0O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 3D2XYY6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void ACF5KTTG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22b ( ) ) . goodG2B1Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void AU55118G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22b ( ) ) . goodG2B2Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int ZVG6V6GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public int E0GSIRBG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int 7TAJS1MG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void D0IVA48 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
"public void 4TO0GC5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8P0OK29G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",0
"private void 9B8K2E2Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void NTYC36N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } badSink ( data , request , response ) ; }",1
"public void I2UHZQT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NZL3KOSG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"private void QNG3X36G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int ATPIMA5Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public void BONNPIT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int 878017RG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void QDO59GLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 0AKA9QX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1Q1A67YSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void B2J6WO2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void I7UA9SC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void I856Z0XG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void DGM5OLGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 6JLJ0W2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void W1PGNI1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 153637JG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7HPQKY1Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void IBE62BKG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 0Q9JC48 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void BLCFY3N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2O3PY0PG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NYWIEOISink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void AI1OQYCG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KWGP154Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 87SRUX1G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UDWDQPU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void PI3FKFZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9GPK4ZLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void G1QXV1OSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void T4297R0G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void H9XYACJSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void L9GI0S8G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 189JSBRSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void U4TRB3NG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 35NQO6X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void Q4ATYGY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Y3SC9AQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void A4WZ1G6Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void IPXO4BNG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void W0B9TQUSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void AQRYLDIG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void BQMFJL9Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void WRVTC4DG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void G1CB4GDSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void CMEFKXWG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void BIMFTZ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_61b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 1TKB04G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4PJMCVSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_61b ( ) ) . goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int ZN8WSZTSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public int X78UWEOG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void CLMP5B7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void COOULCO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0BZFP0GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void NV5PO4HSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void UOUKONWG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 3K5SE1S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void S33HLNI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void G35KF4AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 5UMINQXSink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 2P8RYDJG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 95H96WP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_68b ( ) ) . badSink ( request , response ) ; }",1
"public void GBA4AGO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 28RKJZRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 2KRM8AYSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void ELX053DG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void LJ6Z16I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void LN3GOB6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 89KWGT9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 68FQWQESink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void HJFDDLZG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void X083893 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void F50MY49 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VJNO96XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 231D7GSSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void XXJ13I6G2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void T40VG35 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void RZV4LPB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void WC6DC6TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 1RJCLIISink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void QLDDYOMG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void JIWURKC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void VZQMYKM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 32JTDBVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void NEWI63JSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void UHRA59IG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void LMYMU3N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 1437FTW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GABACSWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void IO38BVOSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 1ADE1UTG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 3KRD8AN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 1K4J8ZL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6Y76QEGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashMap_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void QJCDL1U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
"public void HVCHY1J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1PVBO23G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void DXJBAZ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void JE2IZ6EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void EAWTY3OG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 3MOEG14 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1GFGLW6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 417M8ZKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 8KKOQ7PG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void JVWEQJY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FR75ZGC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void ICK07LRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void SBC5AHOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 5DSMJ4V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void J7P3HJV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void F9BEGL2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void KUF4Y9XG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 5R27W5V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0M2BIEA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void TQ2ICD6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 84GQY19G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void SD5Z4YZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void Q15URH1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 5W9SKGPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void A7XCUPJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void WHDXQ1C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 152RKYU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void X7IAN4CG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void U3MLHMFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void UZIJXZF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RDCGN8Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 0OOXBDCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void PU54Y3DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void B2XIHEB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XU5J06S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void YG0F254G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void OAUBID3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void IKZR123 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AVJJMKQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void HKRPGIKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void Q7ORC80G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void K5I54EY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void A5WJVCV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void VK3YUFIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void NPH0O5F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void WFRU1M7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void YQ77VCHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void ASCM4B2G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void CS20BPZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JBYR8AD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 1UX63YNG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void ACG6VY3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void C9TPJN5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void J2Z2X1Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 3T8B2RQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void IEQ7RHIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 4VIOC8O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void L7DZYJF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void F66BNKPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Z4SP0ON ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void ADQVGWQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
"private void LRVLDS5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",0
"public void DQRYM28 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void VNLIQRP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int HKGOMLE_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public void 02AOFJ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void B0DZO2DG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int WATSWVWG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void V72NMMHG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int 6ZCCVWXG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void 60UZW1J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void XLS6GRW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void W3T4HD6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22b ( ) ) . goodG2B1Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void UURUJBRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22b ( ) ) . goodG2B2Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int VKFDPS7Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } } else { data = 0 ; } return data ; }",1
"public int ZVZ3R22G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int PHDVLFBG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void OX9RVCU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
"public void 6I3Z7OU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 601MQHBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",0
"private void VEU81BLSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 25CZSKW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } badSink ( data , request , response ) ; }",1
"public void RGALTIF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KYBXABUG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"private void G4NILGEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int NGV0U0QSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public void BHZ8WS9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int IW9J2NNG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void C5NQQRPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 6KGZPNB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FCACXCNSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 95JHPGU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void J2G541I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EDRVSSUG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void D9B8KI2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 1U41D6I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9QQHCXZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void T5WUU94G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void AL85RXCSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void S9K0OPBG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void UTK1KC8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void PM1YXFR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UW47ARPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 71L8OZYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 5OAO69RG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MG2Q0UJSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void E4QTTHZG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void KE668SG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void SCVESPY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 18Y8WLNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 87CS6QOSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void Z4G0MIKG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Q8AWE9GSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void NR0G1FCG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6YKBRF5Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void ZNNPUNFG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void RY4T9AE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void YIC5T1W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 85DDYZNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KU1XJGYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void TJ29NJLG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void AZCXM7TSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void U9Y3MKYG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FF1QEBQSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void V66NL39G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9ZTRM78Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 5KTL5BKG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void CBOC8WQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_61b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 97PTY67 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q3A9PSDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_61b ( ) ) . goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int 4ZTYXYZSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } return data ; }",1
"public int 1AI1N9SG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void 3O0GH6P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void OADK25S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 43FUOZXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void Z1DJERQSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void V3ZG2LQG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void IBQ8LMW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void U1HA6IB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GWG3J1XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void R8X6JFJSink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 3ZQHKLNG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void WBWVZCA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void R5FBMZN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void P596OI5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 7VIZW46Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 9Z6Y5NGG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void ASJ5TTZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void X302VOX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UB6L9DYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void M6G9R12Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void YNP5TD1G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void S77SWF7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void GXSKTEK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VRFPDMQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 3P0V0U3Sink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void PNRDBDQG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 106POND ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void H7JNN9H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 25VEW7FG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void BBWMZUMSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void BVSJ3BYG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void T50Y68I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 2Y1Z327 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JBAY124G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 6WSEN7RSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 2EW27ING2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void HU59B8M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void AQ6OGK3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2ALG7NTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GUJGE9RSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 3ZG0YVRG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void B1LDO73 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { String stringNumber = cookieSources [ 0 ] . getValue ( ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from cookie"" , exceptNumberFormat ) ; } } } CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void DC7402P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YTOA0SHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getCookies_Servlet_HashSet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 6MGEYFT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void CHZDYD6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TWLHYRZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void NOWMFFE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void QBHMKO4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void PI48XUVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void G3K89GP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void MD2JCZZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void SX0RWOGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 72UBDOLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void M5MR3JL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void E282G0M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 9098IS3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 7VNO2FWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 46736IV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QVL4I1C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void Y7G0RQZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void BREIFY8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 2UON8NM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GDFGT8F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void VS50X3TG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void GNJ6SPRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void E4TI484 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6CK014T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void QHMKDHIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 3PSQJJOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void HZPFWG4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LK7MANA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void VN0P8RBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void YX7X9BKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ZTEHBR8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7FN75AG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void F44UKRBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void QSE19WGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void UGXYKHK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PHO9WL5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 9AKIBEWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 4FV3ZDNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void TIN6XLT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OWGES5N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void S8TTU9LG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 423E69AG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void CBGVJAN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DWIDLNW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void S4VTQ7UG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void X1OELUH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 2C06ZD4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void ONWEMOFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 5G5UOXRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void YS88WYW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void I9SY975 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void PTAASVAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 5F5LS1LG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void RY3V94T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9GIFENP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 5G40Q7AG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void MTIS3FBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void Q64VV7W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HK6GXQC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void QSXTKI1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void KMRXUSV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void W1I29UG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"private void 68BIVT6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"public void FXU2Y8P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void TD76VQ0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int ME2K40V_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public void 0JZTHXU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void OW8OJF7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int YTQGFO5G2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void 2QZFF2DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int LCRL1TWG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void 2F4ZG24 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 9UQXBO6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void CKRA64FG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22b ( ) ) . goodG2B1Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void N8XOLBBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22b ( ) ) . goodG2B2Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int Q8IDCKCSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public int 7SK68U6G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int FAHK8C5G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void TFPK7JG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"public void W4KKXKS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void F5R17F3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"private void MJWONY8Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void SK0SKZE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } badSink ( data , request , response ) ; }",1
"public void 4BWVZMB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void J446P2PG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void HI80874G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int 6CESVR5Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public void FFMMTFS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int SJUPQ6CG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void NAL5O3VG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 1O4MC1H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BML0VBQSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void T8RQAA2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void GOPFU49 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void D32YUXPG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 4X784VJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 0YA99KO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void C92O6SW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void N7ZXZFVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XKPYDU0Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void ELI1YBVG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 1QG59GE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void F0E267E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 45V85FLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void DEJO16WSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void QIKQ9XKG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ZO38MQOSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void VHCO5PPG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ACYOV52 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void BGUTSJ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7POU81JG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GOBNGWZSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void YLIH8Y1G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Q23ZN8NSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void NK2P50PG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void RUCFBD8Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 4FVLP0PG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void KSJ9FB5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 98I6PLN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YES3QA6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XHK21LPSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void TXZPZU3G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void DOGCE3ISink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void CDTXX6MG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 74C6PT8Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 1TY7FWQG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4GYYLCASink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void J9Q7N2YG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void Y86U5K4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_61b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void X5LEB4V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8E89T5UG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_61b ( ) ) . goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int XE11MSZSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public int 9DP35TTG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void 99MC4LN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void HC04AVF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VPRWVWHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void O2R8NLSSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void ACKR1IJG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void OIQNGXR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void SQ5JN3C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XF0N5YMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void NOH5UDZSink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void QP9PC0TG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void VFMBGWH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_68b ( ) ) . badSink ( request , response ) ; }",1
"public void V0CXS1R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KJYBC21G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 02CQ560Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 9VSSZEOG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void RMMILWW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 1IPMXVW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ALQAQY3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void FDG1ET9Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 04GBYC9G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 52JRBRA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void IXZGSWM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void LSGNKZ0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void EC9ISW9Sink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 44YKX2HG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void HU7AQN2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void VT72I3E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2ROY4AWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 378IB17Sink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void KWN0336G2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void UWDQIG0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void RRP9B9A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1KI03AYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 6JY8DYTSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void G7OMDY8G2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 1ZCHD8C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void HARUTRB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NTCS8SMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void YOMGYUZSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void KCXRZEFG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 9SFIGB0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 4EHPTA3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8D7UNWUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_ArrayList_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void RQMP7HV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 8BW7FW0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void E9X3BXDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 24NYI0C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 8UQ3SR9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void APXFYKWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void YAX0I68 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DLXDKNU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void WFF6TXRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void RT89F2TG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void SJZZRK9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PSYOCTS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void TKVDDTPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 1YYC90SG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void YWZ6AFA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6ACFU68 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 2XNXYY6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void UVEAWVAG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 5YJ675M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void Y3S7PUF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 2BF4UUHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void WJ6G3ESG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void JD2B3J1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6TU7T26 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void GHTDERWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void DGWH5OIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 8CFRZ2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7VQAUSJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void NH3MPACG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void KT4DIMDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void RQNXXCA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GO7DUK9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void PAWL277G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void LVUOJJ6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void OP6PVPI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BWCZ7EU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void P0PLPGQG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void XUJEE9TG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void ZF0I0X3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 35YQAJ7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void BQIUWR5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void S3OAYBDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void FRUOVQ4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PQ39KIE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void AS29X7BG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void N5OIORM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void BSRPM6T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void VYS7JYFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void I0DEE2XG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void XP1JSDG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FBILF55 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void DHN3TZEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void NHMJS96G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void JIDX4LY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 30TAYOV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 4EDIWKXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 06FDGI6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void Q6ZOIYM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LVMJOQ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void H8V26P5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 7A7MM24 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void WXPZ5TT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
"private void ALZ2XIQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",0
"public void WC9JJG2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void AB9NJP7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int 5SVK1VR_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public void O2FDCZS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void X7B0MT9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int L23KN3VG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void 58HNOOVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int LE37ZYOG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void ERBWO8O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 1K21PV3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 6QMX60DG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22b ( ) ) . goodG2B1Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 0D43J9PG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22b ( ) ) . goodG2B2Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int 2FVE1LFSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public int M6OUUKNG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int AAOH8TTG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void YMLX8G9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
"public void NRSGTA0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6AWBM7LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",0
"private void Z2QG8XPSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void WEOHXTC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } badSink ( data , request , response ) ; }",1
"public void GW3W7GE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R1NSPMZG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"private void LXRPDEVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int UB49PT8Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public void M2WDPPV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int 9DLMFJAG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void N1Z8BF7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void PMUJKWS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VPVGOO3Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void NAUMGLH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void JJD53DX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KZACNMHG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 1NJKJ6LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void DBUIRPK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void JROZ1YB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OD1NZJZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TTDZ26XSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void VDYUI7YG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void FDJS9UF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 0C0IA29 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZZZ7Z98G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4EHTXVESink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void IRTI42GG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void BZHV31YSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void L8J04LLG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void C45QAD0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void OPXQG70 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void L4OMT13G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4BMQ27TSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void KOOJ26YG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void LXRKOZVSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void RQCM69TG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FIFN37PSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void M29ES2QG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 97WWFM5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 69XVFIB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void G5HFX7NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void URC34LHSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void GOG23ECG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void N0RP6HFSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void JTUSN5FG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XDT3KP3Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 692B3VCG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void M51NVFXSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 77YUZUHG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 0U2YZLM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_61b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 0NU0LIP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void G4LJNICG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_61b ( ) ) . goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int ZA31IHISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public int QUXWZFTG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void ZBCO1OU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 4GIWU2I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6MSUQ0LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void YZOXNJCSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void FCNRX76G2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void CHLSRE7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void T9IWWKH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OU2VTLOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void ALPM987Sink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 3Y01085G2BSink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 4UQ3J2T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_68b ( ) ) . badSink ( request , response ) ; }",1
"public void Y0EW8J6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TST0R63G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void RZHOA3PSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void UL2VEKEG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void MGHEPA0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 2WNNBZV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2N5J74MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void T6PYOW3Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void W1J5A5NG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UEQU5LM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 9SVY7CN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XZC0XONG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void CPYYXONSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 2IS5X3RG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void PO2GIJ5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void N35RN3H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IK4NTEEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void IFUO7H8Sink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void NWXJZJZG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 5RTIJME ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void KC507MR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void AX6IIMDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void NHDDSU6Sink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void I0P1YHZG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 8PE6VW1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void JHP3YKI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8B29N8SG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void OJI2Z6GSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 1VAI923G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void Y0Z8DWC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 176Y9BY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2C22SHYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashMap_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void SEWKV0H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } HashSet intHashSet = new HashSet ( data ) ; }",1
"public void WIA2SWU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GU9M2G6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void FXSN51E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void UNF9Y36G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void WPOWA09G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void BPKMIH5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OITSDT0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void F0TJK6JG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 8I8DKAZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void V7W5LGX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HDIPHX2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void O0QNWVAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void ZTRYCCSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void UFORY30 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AYYJILB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void QR6ECSYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void XAUQMUGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 9CEQ28A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SVB5B2X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 9BPQUA2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 4TP9L6JG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 38VZXKX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3O1VKPG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void JPHTU2EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void JCNGAD6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Z3AE3ZF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LAZTFUR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void YDINF5AG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void IMRR5VBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void MYCLPGU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void C1IXY26 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void EPMTUMZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void SYCKC4SG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Y8UZWJC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void MK99XQU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 4Q5SJT4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void CIFOXOUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void LIUJR66 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void N65NB0D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void Y3OIR1XG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void IL8TV8MG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void TSN7GIB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XTL8L7P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 5WNG93YG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void VU6G2MW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void HT0SPN5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void MR1G7YWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void HUY1Y7LG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void DL9C2CR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void L30VXL0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void UC648F3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void KJWUFW9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void KXBK56H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 94ZASER ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 2FR537LG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void WRYPBNTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void H3W7LHN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TFODQ2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void J4FOD1DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void DH8HM37 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void GOZCLF3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
"private void YT45QYVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",0
"public void FT0CKHY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 2O4429O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int 9909Q6P_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public void BTF78B3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void WC0QL39G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int K854ZDPG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void DHTG518G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int 9G7YCACG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void ILHD02O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void S062ZA9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void SD9Q62DG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22b ( ) ) . goodG2B1Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void F0I0VQTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22b ( ) ) . goodG2B2Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int 7KSRGUBSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
"public int E6TC8NKG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int XEUVW9PG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void HK2FF0W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
"public void KSQZCUH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SYFRAGKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",0
"private void FRDMDTWSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void D0YHCZD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } badSink ( data , request , response ) ; }",1
"public void 9U9KO2C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NPYXZWVG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"private void HU9C9J4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int 8ROMHZFSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public void 9D6KE8D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int FQ8EZBSG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void ZSWCBVIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void T8HMIGS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RRTPX6ESink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void NX8UH9W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void JK2FMJ1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1S4NE24G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void SSDIZV7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 2KKRXJR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 2LC3L79 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TL8KUJ1G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void UON3VEBSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 2FZCNBVG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void SWNBJ7H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void JVRJZJV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GHDH9N0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CE7DA06Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 94XRCDRG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ELMK3CPSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void UXWUU5EG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 0JBKF7Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void ECWIA3Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0JCSJJNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YCV4U0BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void IH6TV94G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void S5DW0G8Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void PONNX34G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HOYSWC5Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void PMGT1DMG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Q3PA6EI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void PXXU0DH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YEL86EOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ZFBMISCSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void MP5RJFJG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void VBYD0Y7Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void RVN4IC7G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void JQRQRRYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void YK7H1O7G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KZQZETHSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void C0QKM2GG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void X22ON44 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_61b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 8L5X74S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BFRANBPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_61b ( ) ) . goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int 9SNMCRXSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } return data ; }",1
"public int KJCW44KG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void C3X5UXW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void DXXD021 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2R9C9YJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void O80BMR3Sink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void A814JWUG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 43JTTJP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void LX766R7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ME28A2BG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void G7A5AUHSink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 31WZHD7G2BSink ( CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void ZSVHN7K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void XOU9NXG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6GN206LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void GPOTYOASink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void MK8YK2ZG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void N2VJQAJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void ISH3RJV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZI1TJ56G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 6R523IGSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 8DM1R01G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void E06H9RK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void JNNBYCW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JVN6X5GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void HJ935POSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 6SS547QG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void OW38YJW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void RM4XB7L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EMYA4GTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 0284ZBSSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void B5R0AVRG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 8U1ZKYP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 1L1Y24G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R29KFD0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void CG0PD1KSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void JMH76DUG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 1Q1QGC0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void TIXACIE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 13MYUOWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void VMMPSPFSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void I15RWY0G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void IXJ4DLT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = request . getParameter ( ""name"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading data from parameter 'name'"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void D65D16Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void N3NH20WG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getParameter_Servlet_HashSet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void U7WOTA1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void LFBK2UU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HGMWQ5UG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void BW20YCH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void SIMQ08OG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void YIJTJ1MG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8787DSU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HYKDQGP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 7ODY4LHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void SVG0NK3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void DMCLD8V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NDUZ7X8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void FMR27VMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void SWCY1U3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void P19D2QY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void H3U9KUJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void TA3EHYMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void NEP99Y7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 847DM8M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0R02CGZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void 116TK5BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 6IQ2LDWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void MKYRFJ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YPNQ7MU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void HXZOSCAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void CF2HO9UG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 5IJ93OJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void B7ED0K6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void NPIHBUFG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void JRFBTUIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8Z21DW9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PYE2XZP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void D72EJJGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void NZ0NY2EG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void J0X9EGY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void W523IDK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void OE8OWB7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void UMFYDYKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void T9IP092 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GC1M77B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void QL0EIY4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 7QG9REGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void O1RNNH0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BRRQTP7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void NNM83AWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void D6HZZEC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void P1DGVO8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void O82RA9IG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void FAQ2Y45G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void LUIFQ9C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DOEJCNZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void EWGFLJJG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 5J8CSO7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void QCBWLQS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LE0DYMM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void HF7ODGGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void A1ZDCO2G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void FB3JRWB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7QMG93T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private void K8WDTQAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 2LGIBWO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 11EOXBN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"private void BKILQ15G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"public void P4HVVRO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void W4F7J3F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int 5LRR1Z0_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public void 3VRLUGK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void XDXQDGLG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int OIUE3LVG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void 8ASPQK1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private int 42KWHX3G2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void ZDS2GCE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void FFTILUE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void QS1RPWBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22b ( ) ) . goodG2B1Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void 1418MXKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22b ( ) ) . goodG2B2Source ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int 9BGX6IGSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public int UGSFUQXG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int OVKZCDMG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void FUCX7IW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
"public void KW0B4DY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9NMFK89G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",0
"private void 48A4BXFSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 5T2SGGG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } badSink ( data , request , response ) ; }",1
"public void 6954WPD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FBAOMPLG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void GLRV3XXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int OCWOPISSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public void 8G1WBUZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"private int HV8ST5SG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void XI9CA4YG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ZFQONBB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UUH5UBTSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 495KM4C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void ZFZOKYT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0YY5BY7G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"private void MPJWHJMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 8T21090 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void SBCDRH6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IATOE4IG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Q4X7BX7Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 32VLGLSG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void BC9NEV4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void KSGNUW8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BI8UOJDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PTXLMWFSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void VS8XQ8JG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WK8FLARSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void AE6J11TG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void AEQKTPW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9WS8KJN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7R1ACR7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void P4MS1Y4Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 5R26D5LG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void T4ETHS5Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void EI6PLLIG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YMASIRLSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void V96RB49G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void YS03M0L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void K1VOONG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TR69CQWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 68I9RZYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void Y8I5TPCG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TYBM3P9Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void LIQ0YV4G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void UYROFNWSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9JW2K77G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4WF5MC0Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void X8IB44XG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void K7U791D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_61b ( ) ) . badSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void PNYMI7S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 400SNV8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_61b ( ) ) . goodG2BSource ( request , response ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public int 1BMNEZYSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public int XDIFL5TG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void 808XPTN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void V0ZJHKX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6CZJ80GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void S9CL9Q9Sink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 25SDE3PG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 3J7O6VJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 6Q3QQE7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 53PF253G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void EUR7YS9Sink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 4A61R2YG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void E04AX4R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 0N2MFT5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0GM9PBUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void KXZY3E2Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 6HXEZVOG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void JRW33K1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void E6FZ0UU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4XE9PLKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void PP8M551Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 4CYR93ZG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 3MQ7CDC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void BBLU4XK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ADD57F5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void F293KVHSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void RHQVYKEG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 91I1KAG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 4BWBXQA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void I7RK0JAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 2QEVLQHSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void 9U5QVZKG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void VAZGQRB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void OJ1R1K2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FPC5ZYGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void B67E7F6Sink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void GV9XANSG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void MWERMKL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void 26P9W0X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void WQIO8BEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void T65W5U2Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void LAPT378G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void TBNCWLM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void MY7VW89 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JU4RL34G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_ArrayList_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void OT3GSVK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
"public void KJPX5MI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 56EPDWRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 8YGQ651 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 7D5CVK3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void NCHQUYTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UGRG8OD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4N15TVY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void I65SCCVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void OPQLU6BG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void P6NN6ZP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PHB58NP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void RQCYEN8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void OXSG8V8G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void I7UHXM2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JNFU6TB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void CSERHHYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 6J9UBMJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void UIDE02G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 35S65ZT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void ZPD8VRVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void CGT73QWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void N23RQO7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8MRWML5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 0EA3K2SG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void JLPAX5QG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 7U7NWT6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3TXUPBX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void NS5Y5Y2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void QT7LN7PG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 7FXHH7F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8HB1LGH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void MTO4KFBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void NC75Q4NG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 2QIFOM8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void G0R5FFO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void BQRNFRVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void AM43SSFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void VA8T03I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FGHI6ZL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 5W24UU9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void O27LT3AG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 878XCG4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7OO2J4O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void F4STUD3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void BQ8BH1F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void OWN3GO6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void QMCHPDAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void L47FTOZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void A1JO718 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RQGHJLE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void 7VWCTH4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 5MTX9KLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void Q8XOY8L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HL81UTR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void WRM7LIHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 32CRJGWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void QODMA10 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SEOR1A6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
"private void LVKEU6KG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",0
"public void M3T1GIY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void HXYX4E8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
"private void E59LAQMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",0
"public void M8RPV1J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void I41G3YO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int 4CV4L9N_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public void M635LK4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void R9E0A30G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int W12VTPEG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void BLI7NPVG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private int 3X6D74DG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void CQWEQWQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void OXPFZBJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void HRVALNKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22b ( ) ) . goodG2B1Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void UDDK9LGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22b ( ) ) . goodG2B2Source ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int EWWHXTRSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public int MZ5PRGGG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int BI3M5B5G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void IKDILSG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
"public void 6OR1QNM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 90EGKEQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",0
"private void KK06DU2Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void SA7L99Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } badSink ( data , request , response ) ; }",1
"public void UT0FAU0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JM9ASO9G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"private void 5SZF1UGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int W5FTSNXSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public void QFQO9BE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"private int EZDP81QG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void CQ80EAGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void NH7N6FQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FMTUIWYSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void F0CSW4P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void 3QHSMWU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void A8A6CI3G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; }",0
"private void W938GI3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void 47QEWDM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7VMIAL2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ER5CY7OG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HOVS6T6Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void P83XJGIG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 82MC71Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void KRTV7UQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UNVROKWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 6IZIKWOSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void S9063UCG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 5GKYBZ5Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 5YLB8FYG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void FPICWZ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void X7QGXYV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NDB0X5XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void W0AH4BSSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6G68JADG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void K2U4SLXSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7X17680G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void B5EJQ71Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void NOHBRSYG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void HX42OR7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void Z1DV2HD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6QNDT1DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NWGFLNBSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void UK87AASG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XU0AS7KSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 0OJJVILG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void OEVLYXJSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void X4KV0AJG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void O7XDIQISink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 6D1BY69G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; }",0
"public void Y1N31MX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_61b ( ) ) . badSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 82NA0OB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 4VVCR1WG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_61b ( ) ) . goodG2BSource ( request , response ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public int BZS5JZWSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public int MZI7D2ZG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void 0OMDYB8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void QU0BR1L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YUUJSOIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void AXTVGDJSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void QOMVZ7VG2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 7RWGC8U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void TJ15J3T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void I7YIGXPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 75RGULDSink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 7B2AXR5G2BSink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 5IEHJR2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_68b ( ) ) . badSink ( request , response ) ; }",1
"public void RNSBXFU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void I2CYK9JG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void XCEG5NZSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void XSJ9338G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void EPXRYDG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 83TUH02 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 63C8616G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void W4LQCCHSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 37AVUI0G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void VF4KJR7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void YRL7TB6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YI5KA1XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void Y8N1CEGSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 2JUBUK1G2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void ROJWF4X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void MT13UZ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void S1H87B8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void R529O6YSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void HF1M3O0G2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 58E371J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 7Z2OZYX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void B577GCJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 75JX4ZLSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 4ESZAX0G2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void YT3SO43 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void OZ1A3D9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 053OMH4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void OXIBRW6Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void AS3GCGHG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 38IS7O1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void WOG0YBR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void COISHQ5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashMap_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void IQSAPVQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 9QEDWG4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void A48LIIXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 1RV5YIQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void GPG4A2EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void KR6QNTOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void NL8B16N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IB5GNUZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void BO05A6GG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void Q9QO0G7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void GK3SQDW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WBLK8OQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 1BLJN3VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void ZBFJUKYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 8IRVIFU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void K91SXNX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 4B5LZLIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void URCAP9NG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void EZ6RITU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void D5VNU7W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void AWMPBIHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 0AOV8A5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void EKUIC1O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WQOBZOA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void WLHU6K6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void PTSGDIEG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 74PSHTY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EAK931N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 6B0CPIKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void HYTA7TJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void U2JDB80 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8K7L2UQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void X2C7YGEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 7Q5M4NUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 1VQWKTI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 063N2VV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void TFCYMO0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void QE0OZNOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 76ULONK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void J93VDQ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void FJJ89R9G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void BJJDK3PG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void D5WU2V2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void NRI11IN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 7OVKHLKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 7K3BBP8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void GDO5XZM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void OT4U917G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void XAD8RVYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 1BUW4BS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EY0OQI0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void W6XL10ZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void OGI3PY5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void BJJ4M2F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ICG2QJY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void EHFQE9PG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 8DZIGD2G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void MDDEO8O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YKZP2MT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
"private void 94HXSEAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",0
"public void IDDVPHB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void I3GS0AQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
"private void JVWE0YJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",0
"public void M6TSGDI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void DK4U5SE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int OZRWQFO_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public void OT8M41I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void F65U3YZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int A4TYMTHG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"private void K8V7SQMG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private int SY4XUGLG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void TAAC5UG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void JR6769L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void MSW8HFPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22b ( ) ) . goodG2B1Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void OAB2SA7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22b ( ) ) . goodG2B2Source ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int 66U6KDTSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } } else { data = 0 ; } return data ; }",1
"public int 4LYXV6YG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; }",0
"public int 24SGSJRG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; }",0
"public void PEZIV9Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
"public void JI4IYEI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DRJSP5VG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",0
"private void OC539VHSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 2T3DRWO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } badSink ( data , request , response ) ; }",1
"public void 1CBDQWR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QEH81Q3G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"private void AY27YYIG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data , request , response ) ; }",0
"private int O4BP1LSSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public void JCDOQWH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"private int X8J363ZG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"private void T4VWQTVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void ILZ4MAM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7DBZX68Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 0R9CYBX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void J8BO1SU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JS73SZWG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; }",0
"private void 4UTIOMTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void U6ZXUMY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void POQVMD3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void V1MUHF7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 3OLD8RCSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void U9F5O6RG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void TMQ6QRD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void TBCTYWU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HAP55RRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void JI4JXISSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 5RYPNZBG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CRQL65YSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void Q05Z17OG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 16XFYJI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void DAVNJAC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void H9KWFCSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 5I0XQ7JSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 69T1UOMG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ZRENKFSSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void OIVJSWPG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void UXYPBH2Sink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void BJVPQJBG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Z032T26 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void Z907VCS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1MDMOI4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void C628HCKSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void HCOY8U6G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void IUTTCNYSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void R4JPJV5G2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void M7EYV0GSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void LBX9U6UG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MJ6RSHVSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",1
"public void KTH2KMWG2BSink ( int data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 1IA2UXB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_61b ( ) ) . badSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void WT18X7F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GS56LEEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_61b ( ) ) . goodG2BSource ( request , response ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public int UVN7759Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } return data ; }",1
"public int IBDURLWG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; return data ; }",0
"public void IHZRVWV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 9RNIT22 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void TVFGHIYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void T7U76FFSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 38MK8J0G2BSink ( int dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void LO26D5Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void V2QBHNA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6J4T71NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 3FBXEZDSink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 4IVDCCOG2BSink ( CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void MF0NV0M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 2Z7I2U9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VXZ4KR6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void E5V5I7ZSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void XGQ6E6EG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void J28VCX4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void KJ5FB3S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JRKGCGLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void UL53WZ0Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void NY522N8G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void V7F2A3T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void ZSQT5K4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EFFFJVXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 0UCZZ6TSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 2KHDWHCG2BSink ( Vector < Integer > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void FH4IBH2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 67FU23O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 93EWMWJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void R5X0XSRSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void S5F5LRGG2BSink ( LinkedList < Integer > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Y17OT3P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void DB3T10M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 05ZG2JRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void B6KGSD1Sink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void RKNUE3HG2BSink ( HashMap < Integer , Integer > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void Y422OVF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void GE0Q1CB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void J7MYTQJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HGY2AFNSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8SCK2N6G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 08HAINR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { try { data = Integer . parseInt ( token . substring ( 3 ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception reading id from query string"" , exceptNumberFormat ) ; } break ; } } } CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 9FT1Z4S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CVIR5L8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__getQueryString_Servlet_HashSet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void HQCUXNI ( ) throws Throwable { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } }",1
public void 6N1XFAX ( ) throws Throwable { good1 ( ) ; },0
"private void 4TM3HW31 ( ) throws Throwable { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } }",0
"public void WYDWO0M ( ) throws Throwable { if ( true ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void JZTX7Y71 ( ) throws Throwable { if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void 2KWTFGS2 ( ) throws Throwable { if ( true ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void 3WDQEZZ ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void NVZCZV9 ( ) throws Throwable { if ( 5 == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void TLPO9N71 ( ) throws Throwable { if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void M1O72PO2 ( ) throws Throwable { if ( 5 == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void 1I4CYP5 ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void O3W1PC3 ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_TRUE ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void 8W31JY11 ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void ODECOKK2 ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_TRUE ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void KLNKRMR ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void Z1KZ61M ( ) throws Throwable { if ( privateTrue ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void 0AVPG751 ( ) throws Throwable { if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void Z8FZ2EK2 ( ) throws Throwable { if ( privateTrue ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void EH1SLUD ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void OIARIVQ ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void 33PE5771 ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void WRQC9S42 ( ) throws Throwable { if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void IRQJYAX ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void B8XVAWN ( ) throws Throwable { if ( privateFive == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void 8T8M4YN1 ( ) throws Throwable { if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void 7PS21V42 ( ) throws Throwable { if ( privateFive == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void K27YLS8 ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void 3IBWEOJ ( ) throws Throwable { if ( privateReturnsTrue ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void OC3ZS2P1 ( ) throws Throwable { if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void 2XMKFTC2 ( ) throws Throwable { if ( privateReturnsTrue ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void 1V528J8 ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void NG8W4N8 ( ) throws Throwable { if ( IO . STATIC_FINAL_TRUE ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void 46JVRBU1 ( ) throws Throwable { if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void JD6EIPV2 ( ) throws Throwable { if ( IO . STATIC_FINAL_TRUE ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void LVF8KPU ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void XAUFN34 ( ) throws Throwable { if ( IO . staticTrue ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void I2KFOEE1 ( ) throws Throwable { if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void 9JA6RRN2 ( ) throws Throwable { if ( IO . staticTrue ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void QS617SY ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void 6SXJAFS ( ) throws Throwable { if ( IO . staticReturnsTrue ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void J6GJG6W1 ( ) throws Throwable { if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void TYUB2KE2 ( ) throws Throwable { if ( IO . staticReturnsTrue ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void SN7YR3I ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void U6KGXQ4 ( ) throws Throwable { if ( IO . staticReturnsTrueOrFalse ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void M1W7FVI1 ( ) throws Throwable { if ( IO . staticReturnsTrueOrFalse ( ) ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void 3SRALRR ( ) throws Throwable { good1 ( ) ; },0
"public void I7EOFYF ( ) throws Throwable { if ( IO . STATIC_FINAL_FIVE == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void W99499D1 ( ) throws Throwable { if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void L51THTC2 ( ) throws Throwable { if ( IO . STATIC_FINAL_FIVE == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void 6CUSXAI ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void B2345X1 ( ) throws Throwable { if ( IO . staticFive == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void AF76E291 ( ) throws Throwable { if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
"private void B9YRDF02 ( ) throws Throwable { if ( IO . staticFive == 5 ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void IK7KOE5 ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void 8SIV3AE ( ) throws Throwable { switch ( 7 ) { case 7 : ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void MTO69WS1 ( ) throws Throwable { switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } break ; } }",0
"private void U6M5GRG2 ( ) throws Throwable { switch ( 7 ) { case 7 : ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void H2RYI3U ( ) throws Throwable { good1 ( ) ; good2 ( ) ; },0
"public void 88ORE08 ( ) throws Throwable { while ( true ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } break ; } }",1
"private void XXT8AZ61 ( ) throws Throwable { while ( true ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } break ; } }",0
public void T0XZRCP ( ) throws Throwable { good1 ( ) ; },0
"public void LP2AWZY ( ) throws Throwable { for ( int j = 0 ; j < 1 ; j ++ ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",1
"private void R1KICX81 ( ) throws Throwable { for ( int k = 0 ; k < 1 ; k ++ ) { ArrayList < byte [ ] > byteArrayList = new ArrayList < byte [ ] > ( ) ; if ( true ) { while ( true ) { if ( Runtime . getRuntime ( ) . freeMemory ( ) < 10485760 ) { IO . writeLine ( ""Not enough memory to go again"" ) ; break ; } byte [ ] byteArray = new byte [ 10485760 ] ; byteArrayList . add ( byteArray ) ; IO . writeLine ( """" + Runtime . getRuntime ( ) . freeMemory ( ) ) ; } } } }",0
public void U2QD8XH ( ) throws Throwable { good1 ( ) ; },0
"public void D7W24NF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void NB83DJO ( ) throws Throwable { goodG2B ( ) ; },0
private void DABT89TG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void LR8O093 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void ZJE7P16G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 2OH7L0LG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void XQ2CB2G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void OWRNH9L ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RDMAVQFG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void V5BEVM2G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void EWH7SSN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void RJ9IJ50 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void CYZJIREG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void QQTJAD0G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TBOGAS6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E1M6J6M ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void U11TOE6G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 3VIHEZTG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void X69WLMM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PX8DEC8 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 93DDSX3G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void AJ5NLT1G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9OYS1TI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 0E03JVI ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void JRD75FAG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 4N4I85UG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SL7Y9R0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PNBP8JM ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void LQSDWLIG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void MXNPUQ6G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 3TKDSBD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1I2VIX2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 3BGT4NSG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void JOPBGPSG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void DNCD774 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UKMMT0D ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void P6O1FR2G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 9LKOK8JG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void XKF7U74 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3SUMKUM ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void Y057CG6G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void C4NM5WPG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void PDBJ4SO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CSMTUHG ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void YKR1I88G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void OQR8OVM ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZLK6A9X ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void BMK1I8EG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void B31H6TQG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9CUIEI8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5H1QLW8 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void CJHP5KVG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void OMACNJHG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 2W9GAGU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void A4HE421 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void YDSB5PSG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void XMCLVJ0G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void XL6KVTV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CZZOUJ7 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void O60V50XG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 44MW6WN ( ) throws Throwable { goodG2B ( ) ; },0
"public void 46FPC6N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void 4EK0OJ2G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void LADPLW7 ( ) throws Throwable { goodG2B ( ) ; },0
public void A9U6Q3M ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int A2WW3QB_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void E4SUM8C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void ZX9VB0EG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int R0WGWL4G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void UNMKHFZG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int VPB8JBSG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 201WEQZ ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 7U2N4IJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void MUMIJFWG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void IUCX2C0G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 0TFSE02Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int 1XGSQ7KG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int B5WU4GJG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void W8EOS20 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void BY2GATT ( ) throws Throwable { goodG2B ( ) ; },0
private void EO3LURIG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void UA6TT8BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void HE6LEPF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 9YXAIV8 ( ) throws Throwable { goodG2B ( ) ; },0
private void MUC3412G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void H81I6VWG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 9FWSLWCSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void LA6YUZV ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 4OD1X7GG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void KIUTZKDG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void MZGEYN0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1R6ATBBSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void OXD8DIL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 03YUVPG ( ) throws Throwable { goodG2B ( ) ; },0
private void U052DVBG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void NS70ERNG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void EP7W47M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void MGB37GN ( ) throws Throwable { goodG2B ( ) ; },0
private void YXF0PG1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void SCQNFGWSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XMZGB4BG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void MYPBAV1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void CJ1Z15Y ( ) throws Throwable { goodG2B ( ) ; },0
private void 7800GE4G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 0N9DFFUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 02SNIAVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void YWOGY48Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void QFOGJYNG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void BMLK65A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void AXEDGBJ ( ) throws Throwable { goodG2B ( ) ; },0
private void RLSXQUTG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void GCHM9JZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void TE7URUYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 3PTC7QASink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void EMU2RT6G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void TRXCJ0PSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void U1UNTV6G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void T1VRRLR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void Y304WRH ( ) throws Throwable { goodG2B ( ) ; },0
private void 4B28VS8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void E6MONKKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void DR33X2GG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void SSI5V4ZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void BXKLM81G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void T99KQDCSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void 4T731R9G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 98MTPVQSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OU4030WG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HPAR3MV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 7GK5U43 ( ) throws Throwable { goodG2B ( ) ; },0
private void PISK9A2G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 6JQ43SPSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public int AZLYQLCG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void BIHM8N1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void XWH8TDP ( ) throws Throwable { goodG2B ( ) ; },0
private void 3T5U5D7G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void QRNEW46Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OHVLUA9G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 8LWMXHZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 5GJPHER ( ) throws Throwable { goodG2B ( ) ; },0
private void HP08JA1G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void WO0ZDXESink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void B2RZALQG2BSink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void XEW4YRO ( ) throws Throwable { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void GZOGVPI ( ) throws Throwable { goodG2B ( ) ; },0
private void 19D21CPG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void U82GSYBSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 2LNX3DDG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void OWZU9DM ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 3PBROC0 ( ) throws Throwable { goodG2B ( ) ; },0
private void Z13QU6UG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void KVP96APSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 3WC8QE1G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void SUSMKZ1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void R3VFDZY ( ) throws Throwable { goodG2B ( ) ; },0
"private void AN2FJ5OG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 8715XMOSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void REZ16MJG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void LZ5JHOE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void LTJ4ZW6 ( ) throws Throwable { goodG2B ( ) ; },0
"private void OS1WSKMG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 95R00Y2Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void HA6W2CNG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void IXJPR73 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GIDHCKT ( ) throws Throwable { goodG2B ( ) ; },0
"private void OBRFAM8G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void F39718MSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void AM4T9P5G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 1EJQV6X ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 295KUCW ( ) throws Throwable { goodG2B ( ) ; },0
"private void ISKUUEUG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void CJQRW8RSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void Q3MRY0EG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void PN1MF33 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VONV95A ( ) throws Throwable { goodG2B ( ) ; },0
private void GCW8CFYG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void KDYT5J7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void 6I0JSB0 ( ) throws Throwable { goodG2B ( ) ; },0
private void 723FW9CG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 2JXC5L6 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 402B6BEG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void H6P6KU6G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void FM1HE6P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B5CA454 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void TDMSI12G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 0GWDBZIG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void VAHMIKN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void I3DGWF2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 161HQ6AG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 19RZOIXG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 3WFEXNM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KIDKLAU ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void TZ8SN19G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void IVIN2CYG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void OC6UBYU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NBM85DC ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void U24NCRRG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LJWZ8EEG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void ST0U57Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void K8GDP14 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void Q00RQ4OG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 2PB64FNG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GBXASEN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IM7TM2L ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void P8P2Y9CG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void OS8W6HRG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void UIT693H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FEB1W79 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void AJRKYRJG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 08CKU28G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void TI9BXPN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CY5CJYH ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 443T2SCG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void GQK9TO5G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void U4U183O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YBOD1JE ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 0RMH44ZG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void BR7B72BG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void D5DUW8N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KN85GM2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 2SLA208G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void F5XNZBL ( ) throws Throwable { goodG2B ( ) ; },0
"public void 4O1SZLL ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void VCWELIAG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 652VA7NG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 3D9YI4T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TV5W6E0 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void HZ8CU00G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ZNZ8JQXG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void Q4RIAJK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XRGKD09 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void YYTTD7XG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 2DOM8B1G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void S0ELDH5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6O1270B ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void JG30LW2G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 8L09GI2 ( ) throws Throwable { goodG2B ( ) ; },0
"public void P73UPRE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void G4KAV97G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void F4709B9 ( ) throws Throwable { goodG2B ( ) ; },0
public void KBAUJGI ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int QHBN9JE_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void QC59AES ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void WWKFYF2G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int Q8NL7PXG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void O9YBDR1G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 8WBBWS0G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void M415FWE ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 15DDKNU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void QMWLLPEG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void C78CXNPG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int VSFA27LSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int SGJM4F5G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 5SU1ZVBG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void G1127PI ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void DYL55C6 ( ) throws Throwable { goodG2B ( ) ; },0
private void S92XG0DG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void ALNIHVQSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void CBA29WH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void YZ5WQRS ( ) throws Throwable { goodG2B ( ) ; },0
private void I10MJ1RG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void NS918MAG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int JQGJ9SQSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void W8E3CLL ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int OEJ22AIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void T59LHJ1G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void WNHGEWK ( ) throws Throwable { goodG2B ( ) ; },0
private void IWZ2XJHSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void U2I0ERZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void WCQ8W69 ( ) throws Throwable { goodG2B ( ) ; },0
private void W4AVT43G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void LKUPBQOG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void QB9JS5H ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void KRTSCMU ( ) throws Throwable { goodG2B ( ) ; },0
private void BGMW3UMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void NHWNGJLSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void GSH5QH4G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void 09F8OUS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void FZGA9EN ( ) throws Throwable { goodG2B ( ) ; },0
private void YYMWLF3G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void UGMD5A3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void U2JC1BPG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void NMSO854Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 8Y882Q5G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void W7CO5X7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void A3US4QU ( ) throws Throwable { goodG2B ( ) ; },0
private void 9S165VCG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void R3E97R9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void XL6CMQEG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void P8PTD6MSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void MXQMNCEG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void F6QOQTISink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void GDFJATJG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void NBFNCTN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void 43IPP9Z ( ) throws Throwable { goodG2B ( ) ; },0
private void V00011IG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void AJB8FELSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void 1Y5ZBDBG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 9V8FWWBSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void KQMKIPDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void D7AY3E5Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void KJL5QMXG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void YHSP2V9Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 187BH8PG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void JZAA4E7 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 5LIPKRZ ( ) throws Throwable { goodG2B ( ) ; },0
private void UG44XGYG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int 4WVEK2PSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public int KKXTBBRG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void ZQ1PH00 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 1GZVZU2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7G5C5KAG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void X2KG8JGSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 3O14HVJG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void FT2TA23 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 37J87RE ( ) throws Throwable { goodG2B ( ) ; },0
private void 0NQ1A3GG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 4778D2XSink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void MQXX6VGG2BSink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void UNA76SX ( ) throws Throwable { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void B08134M ( ) throws Throwable { goodG2B ( ) ; },0
private void LFPXXOOG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void UWGT7O2Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void S7R2P6ZG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void XZ66L98 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void AWAA0RG ( ) throws Throwable { goodG2B ( ) ; },0
private void LPIMCKLG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 54SZOY9Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 3YDQPKDG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void EEQNVBO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 0UXJ9DK ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9OPMBX3G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void NN5LBG4Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void YJELMIXG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void ULWEF47 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Z3N1FYX ( ) throws Throwable { goodG2B ( ) ; },0
"private void ZNII51WG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void X3CI6Q5Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void S7VBRT9G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void UZK4Y4A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 858RM7E ( ) throws Throwable { goodG2B ( ) ; },0
"private void P1CB268G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void QJLF2DVSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 81WPB3CG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 2DPRQP8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void DES194I ( ) throws Throwable { goodG2B ( ) ; },0
"private void 7KTW09VG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void X6S235LSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void QR5APR3G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 79WEKSV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 4NOWJO3 ( ) throws Throwable { goodG2B ( ) ; },0
private void F1JSRG3G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void F1HWI1U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void PXDIL8S ( ) throws Throwable { goodG2B ( ) ; },0
private void OCVBK1UG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void WBZQH57 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 05E0GCOG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void YEBBXAVG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 3OUNUR9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void W0BQCXR ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 02WJX5XG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void LE3FEI1G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void U1TX3RG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KUV3GVI ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void EQA4BCWG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 6NHQ4OHG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void TKMP3H7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void YYA0R5A ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void G509SBSG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void QWMZ7OYG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void K1QUMOF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9UI3V7Z ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 5OC4WDXG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 93J5X07G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void V0TVY1J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7TQ2IIK ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void YA4RU8NG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 2A7HFTJG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 8A5E5U1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WS61OF8 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void DXN6MQEG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void RL51NIOG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void HF8T9ZG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void J0OM0ZE ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void AUAKX5SG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void XVYB1UXG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 91S0EII ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U1B8T7R ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VGDSH8NG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void BGZQTVRG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void QU4OBH5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5SI1RSZ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void QT4Q40OG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void SAQ4VYBG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void Y0ONZ5V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SI9FW1I ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void XLPEKTMG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void C54ZUDL ( ) throws Throwable { goodG2B ( ) ; },0
"public void AYV6L68 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void K5E9795G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void ONHRREUG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ZEB8VEQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void Y0O8HXD ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void FM7RRR4G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void NMHEKQKG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 7VTWB4N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void E401FML ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void FZU63QQG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void Q1QCKPGG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void R0PNDGL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IMVX3FQ ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 6RLQCGXG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AKAUR9J ( ) throws Throwable { goodG2B ( ) ; },0
"public void 0Z9QSVV ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void C70MVPLG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void 363WR18 ( ) throws Throwable { goodG2B ( ) ; },0
public void WG42H9O ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int W4FIF9N_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void NQYJ83N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void SEP4IB1G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int PHO0R8EG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 8HODK04G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int KYOCPR6G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void J6RD7ZP ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 7QC118K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FQ5DC5ZG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void R1WWQFTG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 2PLQLVISource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int KTKWAM9G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 2ZN7GV7G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void OCBJF8Y ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void 2SWQ9V9 ( ) throws Throwable { goodG2B ( ) ; },0
private void VP1XDEPG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void ZMYGG7BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void Y9T5A43 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void RXD22SH ( ) throws Throwable { goodG2B ( ) ; },0
private void QNLRXO5G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void OAWLFBMG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 87QUPAKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void 0S0F8WT ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int YITT1MJG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 2OU7YQ2G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 3QU08E8 ( ) throws Throwable { goodG2B ( ) ; },0
private void TZHM7KWSink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void 54J3HQ2 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 92H42LY ( ) throws Throwable { goodG2B ( ) ; },0
private void GHX01OUG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void Q2KB2JWG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void C703STZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void JJ9W5GF ( ) throws Throwable { goodG2B ( ) ; },0
private void 80ELJ5CG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void HFF0TI9Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void OZZWMC1G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void B7V1STF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void 84M15QM ( ) throws Throwable { goodG2B ( ) ; },0
private void 28ZVY7WG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void TE3P5WUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void O5VWC3MG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void BREGEUPSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void BJJ3DRJG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 9XG8WC7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void YDIFDXK ( ) throws Throwable { goodG2B ( ) ; },0
private void ZB1FJ73G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void WT2NQGHSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void SO62LXSG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void ZTIY2RYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void YVPATPMG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void O6WES6QSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void E6JX947G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void GAAUS11 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void ZK7IFE8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7A222Z8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void DK8GM6FSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void 1WAWD1FG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 30ZNXZNSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void KOAW5SDG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void NOXIU0KSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void H41KZ6FG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 33CR7P9Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void O2DMFJ1G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void M4WC7H3 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 0KB5S68 ( ) throws Throwable { goodG2B ( ) ; },0
private void KHOEHG7G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 5JH3TNDSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public int RY3R8ZEG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void OKPSBDJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void XRWVN6O ( ) throws Throwable { goodG2B ( ) ; },0
private void 00VZHEEG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 8NH1J7ESink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void VUGKPIMG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void BR598Z5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 7CC0PIH ( ) throws Throwable { goodG2B ( ) ; },0
private void I0XPY1YG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void YII3XBRSink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void H0XZ0VTG2BSink ( CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void VEHI4MH ( ) throws Throwable { data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void P7QZB1G ( ) throws Throwable { goodG2B ( ) ; },0
private void 48FFIRUG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void 5NEPOHLSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void PI3YMUCG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void DCE5MO7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void EDSEYYK ( ) throws Throwable { goodG2B ( ) ; },0
private void NKIREW7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 7AJKLFGSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void VS00GL8G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 4I3CWAD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void QRB6N42 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 1G7Q104G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 2YIZAJISink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 59OWXDQG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void NJDUZY6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void X26TE3X ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4U1SILNG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void ONR2GYASink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void AEYAF31G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void AZQBDQX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void VLOHBDY ( ) throws Throwable { goodG2B ( ) ; },0
"private void K876KCGG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void IQM986VSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 2NOMTNMG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void JPGL73K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void I4T6N4H ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5LO0ZYJG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 9NT38EASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 4STIGBGG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void GK8QJYR ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; String stringNumber = readerBuffered . readLine ( ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RPTAAU8 ( ) throws Throwable { goodG2B ( ) ; },0
private void IBLFUW4G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__listen_tcp_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void UPKDW16 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 6D21L9V ( ) throws Throwable { goodG2B ( ) ; },0
private void 33PP7QRG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HIAB6O0 ( ) throws Throwable { int data ; if ( true ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 4DR7JTRG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void UOL2S1IG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 2BEULZC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void M1TDHPH ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void OHIW6SEG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WUR5QYYG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HH2S5P0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 7IWE6FK ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void D51O80RG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void HYPMZIUG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void N4D9EP4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void PXK0UXD ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 2PVXHNLG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void UWBYN2HG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void PADUPH3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 5UKG65X ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 9FBJ3ENG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1OI6BL6G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void MXQEBMX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EW5N0G7 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 46RN38JG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void KXH1LA6G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 12U2NXE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void LXFNL6B ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 3ZWN9E4G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void ORCZ05MG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void DKWC1F5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void VVO14WD ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 4OI1LAHG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void CI3OX6OG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void RTRL081 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 5SCR667 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 6B54VLDG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 3IK88O5G2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void Z9QHM39 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 3O826W5 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 7DHGRETG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 2NKLY8FG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void P464RJV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void L4TACQJ ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MAX_VALUE ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void DWXY5S5G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void PK7RZB8 ( ) throws Throwable { goodG2B ( ) ; },0
public void 632PZD6 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void X7Z7W9AG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void GSX2O0OG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 4HPVA5C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 8KKUBFF ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 7MJH5CEG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 4DHPQ93G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void HCF0JJK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void VNH3V86 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MAX_VALUE ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 2ESKZQXG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void ATL8GQ2G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void F3G99J5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 6N654VH ( ) throws Throwable { int data ; while ( true ) { data = Integer . MAX_VALUE ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void ODTW4EGG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void RFVG6CV ( ) throws Throwable { goodG2B ( ) ; },0
public void WJMLPEB ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },1
private void RINA9JXG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void 23H4DN1 ( ) throws Throwable { goodG2B ( ) ; },0
public void TUST07T ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int LHFYGJZ_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public void 8GKECXN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void ALIXFN9G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int M77HBJGG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 82A1OU7G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int LEGKRHDG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void LGPH7Y8 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 7Z9R2JJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void O4XIXKCG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void G8GT7HPG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public int ZQ6YO22Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22a . badPublicStatic ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public int E7AVS1LG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int MZ92G30G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 51V7VC9 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MAX_VALUE ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },1
public void WR4PWEJ ( ) throws Throwable { goodG2B ( ) ; },0
private void QEQWDPDG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void G7U5O4JSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void Y5PK5LC ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; badSink ( data ) ; },1
public void TN90FBF ( ) throws Throwable { goodG2B ( ) ; },0
private void NUNKMCRG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void X9ECVHFG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int J77487CSource ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public void 1UI7AA4 ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int FTRQJ44G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void REG8ZHHG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void Q01F1B5 ( ) throws Throwable { goodG2B ( ) ; },0
private void DBASTDBSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 3YKF6SJ ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; dataBad = data ; badSink ( ) ; },1
public void 2YLD8TB ( ) throws Throwable { goodG2B ( ) ; },0
private void 6F7DZ5XG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void YCLTUKVG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void GEKJT5F ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_51b ( ) ) . badSink ( data ) ; },1
public void 9Y5S4YW ( ) throws Throwable { goodG2B ( ) ; },0
private void 6BJ3QXDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void K4ZA8KPSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1GZAJMYG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5ISGUY4 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_52b ( ) ) . badSink ( data ) ; },1
public void 88NS1O9 ( ) throws Throwable { goodG2B ( ) ; },0
private void KDLNPP8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void YM7HQTKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 6PUXUM7G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void X1HWE6OSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 0QLFWDSG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 21RYS6A ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53b ( ) ) . badSink ( data ) ; },1
public void HBYUVIV ( ) throws Throwable { goodG2B ( ) ; },0
private void THDOB4EG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void VQZJTOISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void SFJXMUYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void SVALE8BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void ZD1QASYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void A9CDB4PSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VF4JQ86G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void B0HB3HS ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54b ( ) ) . badSink ( data ) ; },1
public void UNKWHSW ( ) throws Throwable { goodG2B ( ) ; },0
private void RQ3WY5NG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void HZUPU78Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void SDJAZB7G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void JXXN7KUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void B06713MG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void LZMTRJCSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void AF6Q02LG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void IRVKLSZSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void F0KX4T0G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void GGELJD3 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 7ZQ91TX ( ) throws Throwable { goodG2B ( ) ; },0
private void UA4X89DG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public int BUYJ7IXSource ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public int XFK80AKG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void DR7DFZ9 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_66b ( ) ) . badSink ( dataArray ) ; },1
public void 5Y2IF63 ( ) throws Throwable { goodG2B ( ) ; },0
private void RYSL04ZG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void PZXTK0HSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void RG6BSMJG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void VEDAGA5 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; },1
public void 7C3TILB ( ) throws Throwable { goodG2B ( ) ; },0
private void T3BW0SSG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void TBEMWWSSink ( CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 8X9VDXQG2BSink ( CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 1RF9K5K ( ) throws Throwable { data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_68b ( ) ) . badSink ( ) ; },1
public void LYLG21X ( ) throws Throwable { goodG2B ( ) ; },0
private void LDHWWM0G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void JBYAQUMSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1Y0YYVOG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ABKXVX7 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void AOABQWO ( ) throws Throwable { goodG2B ( ) ; },0
private void 87SMJ6DG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void AWF498RSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 3FPM8QJG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void XM4CGUW ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 25KCK0Z ( ) throws Throwable { goodG2B ( ) ; },0
"private void KNUL3WLG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 1ESM3ZVSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void CXZGQ80G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void HM6WJ8N ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 74XL5Z5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 011TDWPG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 6GSV6Z3Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void DV4J6QQG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void WJ3LLLV ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 9KU9QOB ( ) throws Throwable { goodG2B ( ) ; },0
"private void VRX0JKLG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void Z2NY6A3Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void M8K0FKDG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void ZXBHBIM ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void S7O6ZPB ( ) throws Throwable { goodG2B ( ) ; },0
"private void J5KZVG1G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void KHDMCTKSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void KO0HA52G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void 8WRZRKK ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; },1
public void AW9BU6T ( ) throws Throwable { goodG2B ( ) ; },0
private void 0BBY9YDG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void FT987UY ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; HashMap intHashMap = new HashMap ( data ) ; },1
public void MOHXKY6 ( ) throws Throwable { goodG2B ( ) ; },0
private void GKXXUMVG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
public void WT16CNR ( ) throws Throwable { int data ; if ( true ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void QYZEN0DG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void YC03UODG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JC8OHYZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void RMSWMLS ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void SAFS1KSG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void QF8DB41G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 3L98AQ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 6OE23Q5 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 50S1YBXG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void D6X75SBG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void EHFYEQC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void OGBE9A8 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void TKKN2X1G2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void A6MP6K9G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void AQT9V1E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void V60SW6C ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void WOHS490G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void V8MWRWYG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void G6QAZ12 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 44NZOBE ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 7HOGDQNG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void HNXYOM7G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void IUYWJTQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 2CIXXY6 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 66AQLH8G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void TKS80UOG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 8AQY3CJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void U3XPFUJ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 1G40H6ZG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ZMLB3H6G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void TY6PWKZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void G90MFBB ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void X83KYUXG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ARIO9IRG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void N82A5OM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 21CNXAM ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void LR3QW0UG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LYOW5ZRG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void Y4CDGEX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 6CZZ0O6 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MAX_VALUE ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 7PMHAG8G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 21QJTTA ( ) throws Throwable { goodG2B ( ) ; },0
public void IAHO189 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 9MA6O5DG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void T8ZJNMUG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void U7SB7R0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void V1EGBO0 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 8KIB87IG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void Y7CNH7VG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void F850N5B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void ROBZP46 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MAX_VALUE ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void LBRCEGQG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 8OV2L91G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 4JSA7VJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 6BP1Q1G ( ) throws Throwable { int data ; while ( true ) { data = Integer . MAX_VALUE ; break ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void ISB4NGRG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void T8BPZ0Y ( ) throws Throwable { goodG2B ( ) ; },0
public void 6CDFEN1 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },1
private void W9ZJZKVG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void D01HVGI ( ) throws Throwable { goodG2B ( ) ; },0
public void PJ4CBWM ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int CA3M8VK_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public void C1CI09K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void YNJ826RG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int 484IXU8G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 6YQ5YMUG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int X1ZK6BZG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 0TDF0BC ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void OXUPCA4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 77BCTING2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void QRX8PJFG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public int HSZDUBUSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22a . badPublicStatic ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public int 0SP1E7OG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int PRBO3A4G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void T56F2CN ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MAX_VALUE ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },1
public void IPW2WB1 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1TFVXE3G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void NBRCIEMSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void MYDTWKX ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; badSink ( data ) ; },1
public void SXC0G0W ( ) throws Throwable { goodG2B ( ) ; },0
private void Z04GNHIG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void YBMOY2OG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int 0VG66R8Source ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public void 29C4O8T ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int XEUI0RIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 7KL3XX3G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void PUSH3J0 ( ) throws Throwable { goodG2B ( ) ; },0
private void QO3ZQ1MSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
public void E2LX535 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; dataBad = data ; badSink ( ) ; },1
public void 0CO6BAZ ( ) throws Throwable { goodG2B ( ) ; },0
private void XMQPUX1G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 7S4L2S2G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void MU8J8JB ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_51b ( ) ) . badSink ( data ) ; },1
public void AQJ5TG8 ( ) throws Throwable { goodG2B ( ) ; },0
private void LOSBJKUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 880WODGSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 1YFABZUG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void TF2DSXV ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_52b ( ) ) . badSink ( data ) ; },1
public void G40IVE4 ( ) throws Throwable { goodG2B ( ) ; },0
private void SWYT244G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 8IS7U8ZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void WVI7EMGG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void COI1WXOSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 4JYOZY6G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void B9MBJJ0 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53b ( ) ) . badSink ( data ) ; },1
public void L1X9J2C ( ) throws Throwable { goodG2B ( ) ; },0
private void FREERD1G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 7CI92N4Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void UFSKY0DG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 6NK8Q3WSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void F9RI2RMG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void AGDC4BWSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void ES2HMXKG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void B7LOTFN ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54b ( ) ) . badSink ( data ) ; },1
public void E0VOYBB ( ) throws Throwable { goodG2B ( ) ; },0
private void A34KEIUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void KI7V6BVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void FUK31YLG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void GM58WN7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void AYFR8C3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void BCD8DXJSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void AWC036XG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void EPG8IUOSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void AYDBJV3G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void L2RYZGT ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void YEQ03ET ( ) throws Throwable { goodG2B ( ) ; },0
private void T6BC2PTG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public int 6Y4NBR6Source ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public int 8F9L3DDG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void W6P96SO ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_66b ( ) ) . badSink ( dataArray ) ; },1
public void 9RK74DZ ( ) throws Throwable { goodG2B ( ) ; },0
private void 9GPKPLRG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 5TV14HWSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void UY7UQZSG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
public void H7JRYO0 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_67b ( ) ) . badSink ( dataContainer ) ; },1
public void 7FZLKPU ( ) throws Throwable { goodG2B ( ) ; },0
private void P5Z3PT5G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void D4K3WN9Sink ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void MRNJGXJG2BSink ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
public void CHC9FIA ( ) throws Throwable { data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_68b ( ) ) . badSink ( ) ; },1
public void I9L0Q5O ( ) throws Throwable { goodG2B ( ) ; },0
private void FRY942CG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void 48MCMLSSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void W5PK6I3G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
public void IU2Y6WL ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void KSFO8FY ( ) throws Throwable { goodG2B ( ) ; },0
private void MSCGYLHG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void XIOYEAWSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 7P09K7HG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void AV1U1K4 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 9DK43AH ( ) throws Throwable { goodG2B ( ) ; },0
"private void XXU34XVG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void ONXU3M5Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void PQEV1IBG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void HKP2PLE ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 8BYM5F2 ( ) throws Throwable { goodG2B ( ) ; },0
"private void FYQBTQEG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void C6G4LIASink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 7MZARJJG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void ZYTYSAY ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void MUV5IIX ( ) throws Throwable { goodG2B ( ) ; },0
"private void YBRJLGBG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void W66UEQXSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 0RK574NG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void G9O26HY ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void XD8WK84 ( ) throws Throwable { goodG2B ( ) ; },0
"private void K89FGAGG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void LJUHI6PSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void MRESIY4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void G3BXYCU ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_81_bad ( ) ; baseObject . action ( data ) ; },1
public void SFWUEL4 ( ) throws Throwable { goodG2B ( ) ; },0
private void A8EZSP2G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void T04FWHJ ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 9LKG6ZY ( ) throws Throwable { goodG2B ( ) ; },0
private void YB8P7E5G2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
public void RG0MN7J ( ) throws Throwable { int data ; if ( true ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void F32R30XG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void QN3VBYRG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 8CLSTNN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void N3IYUVF ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void Q07P788G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KOJ44DPG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void X1C2V3T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 7KVDNLT ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void 76AZJF2G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void A5SHSSEG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AO0AT43 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 05MG6XU ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void BCIIRWHG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void Y17RKYHG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void JGQP1RC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 4R4XNMZ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void RDZBJG6G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 94RAW0XG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void LTT6WPO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 9XDATIT ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void X12QGY8G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void BR9IRI4G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void QNA73PE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 7JPPVD3 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void AN8N5HHG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void W4CRG7PG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void OKBTJHE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void TQ2SWD2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void ZGGBXEUG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void YA12RI7G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void F372ELV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void SFOYVSI ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void RGP1RP6G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void CCFRZURG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void XLC3K6M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void IC7ORAP ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void ZJT0YHHG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 07GOSC4G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 6FDVT0A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void OR9Y1GC ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MAX_VALUE ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void 7OMLCEXG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void T2MIXC8 ( ) throws Throwable { goodG2B ( ) ; },0
public void EN88QGR ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void ZOAD5EFG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 4E0N6HZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void NN71LQL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void V15CK86 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void W7T902FG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KL8JHXTG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void YGQS014 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void AX59ZDY ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MAX_VALUE ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void LEW443RG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void IZ15NY3G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void K5LGSNH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JQELK1K ( ) throws Throwable { int data ; while ( true ) { data = Integer . MAX_VALUE ; break ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void Z1CWXXMG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 38743VX ( ) throws Throwable { goodG2B ( ) ; },0
public void R81EFIX ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },1
private void RSKY0N3G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void MGIAZA1 ( ) throws Throwable { goodG2B ( ) ; },0
public void 853V7MD ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int M9RS1KV_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public void X2PWW7Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void WOTNJKOG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int RGN4YQUG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void HM282LGG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int UJW22B5G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void DMRHZNI ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void PMYBQKM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FU9TI68G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void 2NAWII6G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public int 0VMRL2JSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22a . badPublicStatic ) { data = Integer . MAX_VALUE ; } else { data = 0 ; } return data ; },1
public int 4G98EL8G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int C3AEC7RG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void RPFSA8N ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MAX_VALUE ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },1
public void UJQCI0F ( ) throws Throwable { goodG2B ( ) ; },0
private void HGESPAVG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void CJO4UN7Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void EZ14PAP ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; badSink ( data ) ; },1
public void 0WB5HSN ( ) throws Throwable { goodG2B ( ) ; },0
private void V7NTD9VG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void 6FTBNI9G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int H3XU8VVSource ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public void 3AFE7IU ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 7MRPYTTG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void L8CFA5XG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 6SCME34 ( ) throws Throwable { goodG2B ( ) ; },0
private void 020HS41Sink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
public void JTSQ2MA ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; dataBad = data ; badSink ( ) ; },1
public void 6JQI2LH ( ) throws Throwable { goodG2B ( ) ; },0
private void BXX7PKIG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void QSZ8QJIG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void G66S5ME ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_51b ( ) ) . badSink ( data ) ; },1
public void JOX45WZ ( ) throws Throwable { goodG2B ( ) ; },0
private void EHFLX6TG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void TUNFV09Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void SFYBPODG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void QGML378 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_52b ( ) ) . badSink ( data ) ; },1
public void KWIOEUC ( ) throws Throwable { goodG2B ( ) ; },0
private void BVUWR96G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 9F8BVBOSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void K8R5XD1G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void T5GXYBASink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void ENE0PVKG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void LNAXDUH ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53b ( ) ) . badSink ( data ) ; },1
public void 6LHWGSP ( ) throws Throwable { goodG2B ( ) ; },0
private void 463CZRRG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void SB0R30ISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void 93HI0PNG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void VVW19FYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void TXK4Y71G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void VS209RTSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void YFFGQIFG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void LBRV5DA ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54b ( ) ) . badSink ( data ) ; },1
public void PZ61J78 ( ) throws Throwable { goodG2B ( ) ; },0
private void 7F9F878G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void NL789LUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void P3LZEM5G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2TQB6ICSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void W9WQ1JTG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 18U70H3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void Y3T8QC5G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void XPDLR14Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void RS7KKSHG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void PB2ZXDV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void XUWK40E ( ) throws Throwable { goodG2B ( ) ; },0
private void 2FE6LIAG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public int N0XTG9USource ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; return data ; },1
public int 36EUWMWG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void LB8W6QK ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_66b ( ) ) . badSink ( dataArray ) ; },1
public void 33AVRSG ( ) throws Throwable { goodG2B ( ) ; },0
private void 3LCWHZ7G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void B7DHJQUSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void RA6G7CGG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
public void J02P8NJ ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_67b ( ) ) . badSink ( dataContainer ) ; },1
public void 2R0ASUY ( ) throws Throwable { goodG2B ( ) ; },0
private void B52BOULG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 8YLCJNUSink ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void EZHU6CYG2BSink ( CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
public void VP7JFY5 ( ) throws Throwable { data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_68b ( ) ) . badSink ( ) ; },1
public void 85ZT89G ( ) throws Throwable { goodG2B ( ) ; },0
private void G58F2SSG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void FTUBR5RSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void KTUB1STG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 2JXV4SG ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void VHNU0HX ( ) throws Throwable { goodG2B ( ) ; },0
private void UZUFIE7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void V51P5XHSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void OTTN7ALG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void SWDGU1C ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void N63FJAE ( ) throws Throwable { goodG2B ( ) ; },0
"private void ROR7598G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void XU1ZVU2Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void ZS0EKL2G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void UYKPDVH ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void KFIMNKA ( ) throws Throwable { goodG2B ( ) ; },0
"private void JEAF4ZQG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void HTNITM5Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void EHE1S2UG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void QWBDZ04 ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void WSLT14A ( ) throws Throwable { goodG2B ( ) ; },0
"private void DNPJNK4G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void FBDFT5JSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void RYKZ90BG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void TI4B9UK ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void H64ZC19 ( ) throws Throwable { goodG2B ( ) ; },0
"private void DKSE8O6G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void Q5ZKXUKSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8E6DIYSG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void URKWF1P ( ) throws Throwable { int data ; data = Integer . MAX_VALUE ; CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_81_bad ( ) ; baseObject . action ( data ) ; },1
public void 3NWGX0P ( ) throws Throwable { goodG2B ( ) ; },0
private void F8D199PG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__max_value_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void L8K81CT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void QV9G6U5 ( ) throws Throwable { goodG2B ( ) ; },0
private void C3NIPQ8G2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void ASSIRQZ ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void BH8P52UG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void NU4MTFJG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void P13HP10 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1F5SV12 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 3C84MDFG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void B1C84NRG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void WHM2KNE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 05DPK8V ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void RT2FNWOG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void LPXHWC9G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9JXOJSV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U665YFS ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 2G7GP6TG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void X884HBMG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ZFG59H8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 4FCR97T ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void DVLZIOEG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 5C212S0G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 692VF2Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 712HTYF ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void KYB34O2G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void IMQPVOTG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void QCH3EFM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7AIOYUD ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void LR1X4MQG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void FIESNBTG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5174B0P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C5Y4RRO ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 4USV63XG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 7L1EKWHG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void PNR8UOG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void R1DXXBQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void IC6C443G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WPB8XODG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void N0HLEHG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JEKWYV1 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void GPMA5WBG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void OL4GY8UG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void WTXWQYZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FHE3MUE ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void QM6PTRGG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 47DTZPZ ( ) throws Throwable { goodG2B ( ) ; },0
"public void SE16M5Q ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 9CTPAXPG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PRRKVXJG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void LGVR2KQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZZKNVIL ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void H150ZG9G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 67V8C6DG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void VV71G0L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 84OOOAX ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void WNNLOS9G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void TTIU0SKG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ULGSPGD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void TZ3OUW2 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 4TWHQX7G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void X71CXUT ( ) throws Throwable { goodG2B ( ) ; },0
"public void 7RBP24U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void ERYTNA8G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void Q0079KM ( ) throws Throwable { goodG2B ( ) ; },0
public void MIPDFDM ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int ZKVXP86_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void NNADP4S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void AV5NQ7FG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int L68I68GG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 6DPPRCXG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int QDBKRYMG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void QL7DRNX ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void TAXTGUN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void IJ9K3YGG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 30SFC1KG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 7P9DE7CSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int YKOMNHKG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int DMICFL6G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void GA74DRF ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void 0DGLYHY ( ) throws Throwable { goodG2B ( ) ; },0
private void 2PD5F2UG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void VAX7MMNSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void CNUPWX5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void OPKR6IP ( ) throws Throwable { goodG2B ( ) ; },0
private void 2OHNVBHG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void C34YTPNG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 271GBEKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void XTNF7EH ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int L9SBTPZG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void D0U76JUG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void F22DPFW ( ) throws Throwable { goodG2B ( ) ; },0
private void Z0TS35QSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void VFQWHR1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void P078S16 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZXQYJ4PG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 60FNWLKG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void EXFFZSX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void UIS45BW ( ) throws Throwable { goodG2B ( ) ; },0
private void N47E492G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void HKI0T3HSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void UQUXQK7G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void SVCEUTJ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void KMEGGS4 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0UZAKVDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void I0OAENWSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void 4IKP3ZXG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void AL89H1RSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void V4IFM9QG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void RU9A25A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void EQRFCON ( ) throws Throwable { goodG2B ( ) ; },0
private void GXR5O1IG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void 9VUK2JJSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void L0XAFYHG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void Y3DTJIASink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void SZ0OZTXG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 3TSR6KZSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YDF4FFWG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void HE14OGW ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void G00TCO3 ( ) throws Throwable { goodG2B ( ) ; },0
private void U99RXFMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void UZK3W15Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void EJMQ895G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 1OU26SPSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void PTBXKKUG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void CZDXA37Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void 8YC1LNPG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void WN7FBSOSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void LMNEAE1G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 7WY99SN ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OM78F7M ( ) throws Throwable { goodG2B ( ) ; },0
private void GDT6TUEG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 5J2CNVRSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int ORG01F6G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 019EMNE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 0OE65I1 ( ) throws Throwable { goodG2B ( ) ; },0
private void CT1ZZ4SG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void F0990PBSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 8JLF7N5G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void PQPW2A4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void BFMWRO0 ( ) throws Throwable { goodG2B ( ) ; },0
private void MLP476BG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void PSAXANMSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 6MN8C5QG2BSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void BQ5D76L ( ) throws Throwable { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void SF2RNMR ( ) throws Throwable { goodG2B ( ) ; },0
private void CVX8GG7G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void BXFCUZPSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VX2TAHWG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void VG47FNA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void UCOT037 ( ) throws Throwable { goodG2B ( ) ; },0
private void X92IRJYG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 3L3WJACSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 98IMGIUG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void XX5DFHS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void M6MU07Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void D4L6D1FG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void L7X18D4Sink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YCBA5JUG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 9B00FUU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void JCUJ9DQ ( ) throws Throwable { goodG2B ( ) ; },0
"private void SJG6ZTFG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void U6LKSIVSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void CL0TTYYG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 9LBRWFQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void MZB31LM ( ) throws Throwable { goodG2B ( ) ; },0
"private void P7IQVQHG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void O9JLH97Sink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void R0763Q4G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void YGI6HKU ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 5LHK2XZ ( ) throws Throwable { goodG2B ( ) ; },0
"private void DII4KWCG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void ATNAK7CSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void G0KWEY0G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void OS7AI3J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 8ZB68FB ( ) throws Throwable { goodG2B ( ) ; },0
private void ZESVI1SG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 6ODT928 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void 5VW1YBC ( ) throws Throwable { goodG2B ( ) ; },0
private void X3NLTPEG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void L1BQA5P ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void SYHQR99G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void AZRH7OYG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void NY29RYQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8AQH3JS ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void Y2NKN03G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void JGTCOQ5G2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 4OLSC1R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CFU54LB ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void E1VWSECG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void TBPN5V9G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 27WPF3V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void N939C96 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ZO3DV6OG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void EMZTC9ZG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void XV4L6MV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WFMCOJS ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void I2RUBCHG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void KPS1LUUG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 2P23IG7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2K3J1BX ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void IT1KWGFG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void DJN6F66G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 62XSFBB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 56P9GML ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void VS4RUXCG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void ELW1LSPG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void ZYNAIEH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void L4XB0VQ ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void B32MQGSG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 2IL6ZL4G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void F03FWBY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void X59PMZ4 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void C7PAQJ2G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 034A1UJG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void QUS4DYU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UF0E892 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void AEWIDXJG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WYQUMIFG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void Y046Z6G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void IFHM04V ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void MFJUXQ8G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void M4JBAZK ( ) throws Throwable { goodG2B ( ) ; },0
"public void 3O1EL2E ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 4W1HWNWG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WK8AZPOG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 1VGEP2U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BAIME31 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void ZOQM695G2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 6RHOS5XG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 6CBP794 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AZBFQSO ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 8QQ6GDZG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 70O6KBHG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void W2Z8U9X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void WUQ60AO ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 5TU2YEMG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void YEFX6H4 ( ) throws Throwable { goodG2B ( ) ; },0
"public void IRU9MSS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void MSTNY5VG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void 7UGCTBQ ( ) throws Throwable { goodG2B ( ) ; },0
public void RCSY0TT ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int 9M5Q5QG_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void JO00HF9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void A42L5TFG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int BB34Q07G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void C9VZNSMG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int S2WX7NFG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void B022YIC ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 2ZSA62H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void OROP5T4G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 8UB6JELG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int CQKGG98Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int F8YWOH5G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 8C7YRJ7G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void AKEL7CI ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void TSFH5JK ( ) throws Throwable { goodG2B ( ) ; },0
private void 6U1R8QVG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void X287AVZSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void H2PC7GB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void R0GO7JM ( ) throws Throwable { goodG2B ( ) ; },0
private void TY1RXN7G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void HHCO509G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int C6TV8W7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void VXXWTJC ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int Y3D5R6AG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void X9I32F0G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void SSH48TD ( ) throws Throwable { goodG2B ( ) ; },0
private void TR19FOPSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void UQL9M4U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void ZMITTLS ( ) throws Throwable { goodG2B ( ) ; },0
private void QIRPACKG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 76XBT7GG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void Z7ONUVO ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void GMVPRPX ( ) throws Throwable { goodG2B ( ) ; },0
private void Y23YRZ6G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 9MAOW6LSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void JKZ4IX4G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void WJHF18A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void 7FZPPY1 ( ) throws Throwable { goodG2B ( ) ; },0
private void 9DHBUAZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 7QKB7J1Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void SH4VWACG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void FJN7HNRSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void DPBAIGWG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void VOCQEG5 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void H6XUGZR ( ) throws Throwable { goodG2B ( ) ; },0
private void OQ7WLI4G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void MNXNW4DSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void TAS185QG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 2CABZFHSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void 9V0J50OG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void A7GADOGSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void CE2WBS2G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void P6ZMCJQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void 65JRQXV ( ) throws Throwable { goodG2B ( ) ; },0
private void XO8HATMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void MJFUQWDSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void S61TI4IG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void MO0EX3JSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void YJ5OQXKG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void WB4DSLPSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void IEK4VBKG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void TK4DWGXSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void V1UORWFG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void XD3NU1J ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void BR9AJFM ( ) throws Throwable { goodG2B ( ) ; },0
private void U9435FYG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int DA5D8AOSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int AE3Q5JXG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 8CC6YFT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4V9U0JH ( ) throws Throwable { goodG2B ( ) ; },0
private void 4FD2FEGG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void BAYLYZ3Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void M7XHUXSG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void BE843G0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 9X679F4 ( ) throws Throwable { goodG2B ( ) ; },0
private void S863M0UG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 3ETPR3QSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void APIMC7WG2BSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 00J81OQ ( ) throws Throwable { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void ER11KCQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 7UWM0SBG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void YUHMBK3Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void ZBOFCDWG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 3NXL89S ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 6ME95GJ ( ) throws Throwable { goodG2B ( ) ; },0
private void SXBR9QOG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void LLQ0OW9Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void D76AYF3G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void IKPX0HG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void ZVYFD5E ( ) throws Throwable { goodG2B ( ) ; },0
"private void BPUHETGG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 0SS1LTHSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 70XF5RDG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void QWIT897 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void FV43B2B ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9NQNYA8G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void Z36FAXFSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void OMRX868G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void TY9I29Z ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void FMAU3L1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void X2M09TAG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void CXVI0HUSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void 86LYOING2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void 9Q8HZRK ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void E0A30DX ( ) throws Throwable { goodG2B ( ) ; },0
"private void UBYJQGMG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void DEBGRX2Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void RZF2YECG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void WM4MZF6 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void D49SDDT ( ) throws Throwable { goodG2B ( ) ; },0
private void 5TC3STAG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 2B8WH40 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void 9OTS6XA ( ) throws Throwable { goodG2B ( ) ; },0
private void 9DGMN1DG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void O4JY5SH ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 2O0QJAXG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void EO4BYC1G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ZO4LW1V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HMZ08F9 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 73LHASKG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void C2QZASJG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void OKE078V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9AZM2HE ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 6C6ZVUXG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 5TW5PAJG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void VO7EW52 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void B28ZD33 ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void ETRPDKUG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void S42MMDAG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void V8COUMG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1BTUVV8 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void C4JQP06G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void SJ7T5ZSG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void WW4JGO3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void FRDM85G ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void J8HZ07XG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void O9QLCWKG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 8KLHQE7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2M28AKB ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void KMCCC80G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void KSHIENUG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void KZ36DYW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void DC5XI71 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void X7Q9JLHG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void NWNR2TUG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void RAZJH9B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5H93UTA ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void EHU449SG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 0EEA9CNG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void ROXCPIH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 3RIVD1Y ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VQ5Z733G2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void CLP4OLDG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 5ML816H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BQUCH6H ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 91VZG8IG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void LLRA3B8 ( ) throws Throwable { goodG2B ( ) ; },0
"public void Q01WHML ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void BWY6KYRG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 76O2CGQG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void XA7Q3KK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9UGXZJ5 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void W8QYVADG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void JX8H4LIG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 5SRGV5B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void LH6AHUP ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void NWU3E96G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void TA6U2VXG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 30FSZ2L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 9E1GX9Q ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void OJ3DJQYG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 9F4AGWK ( ) throws Throwable { goodG2B ( ) ; },0
"public void 9F3C7JG ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void QGDXMG5G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void SW0C9O0 ( ) throws Throwable { goodG2B ( ) ; },0
public void XAWGGM8 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int OQL7D7H_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public void VX96OBC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void V9PO7I7G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int H6GVWRBG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void YQVZ477G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int W5JJWZSG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void S0TBC57 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 91S8KG7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void XDMLRWDG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void SAL4ORDG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int EDUCRWYSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = 0 ; } return data ; }",1
public int QH4BGEUG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 1WAJZNBG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void OA3TBFH ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void JI6O718 ( ) throws Throwable { goodG2B ( ) ; },0
private void ZS4VEQAG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void 23RZIWHSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void HHT7LUS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void B1SS34X ( ) throws Throwable { goodG2B ( ) ; },0
private void V47O0N3G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void ODQGYZRG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int YGKA8WNSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void PRF5ZGU ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 0L9UW5BG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void C893DOXG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void SF2HOCR ( ) throws Throwable { goodG2B ( ) ; },0
private void AVBG661Sink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void J2LEW5K ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void DY13N6M ( ) throws Throwable { goodG2B ( ) ; },0
private void TSEXAC0G2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void PIIAZNLG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 9H4OGVF ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void AWX9VRV ( ) throws Throwable { goodG2B ( ) ; },0
private void OYOSL56G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void G8JVO9VSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void YV3N6O9G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void MKACDG7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void QFQ4CY9 ( ) throws Throwable { goodG2B ( ) ; },0
private void FI2DM1TG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void ZUPIL5PSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void OGTMP07G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void HJ14S0ASink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 3ZQNGLLG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void ULOVACT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void PA9J5LZ ( ) throws Throwable { goodG2B ( ) ; },0
private void MR312GBG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void CL7QD2JSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void BGIY10SG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void K5AI1U9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void B23MTGKG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 4E7TL8ASink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 85NC298G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void 7DQRHM8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void P5XEMZQ ( ) throws Throwable { goodG2B ( ) ; },0
private void V401WFTG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 32O72IPSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void PTLEQWNG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void U1FLZQ0Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void YZBPN9MG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ORCFB4BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void MC7VMPJG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void DIS9XH8Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void T4YI5CFG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void 6EV369U ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void CBDJRWX ( ) throws Throwable { goodG2B ( ) ; },0
private void 8OYNZQKG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int 9FDY804Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public int 5USUD8BG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void CUCYBU7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void WZXSG2U ( ) throws Throwable { goodG2B ( ) ; },0
private void ZSMWUBHG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void SHXEBMHSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 0NHCKFEG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void MJYP0QP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void MDABCCM ( ) throws Throwable { goodG2B ( ) ; },0
private void MQC33EDG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void XEHNEEPSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void JHP0PP4G2BSink ( CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void Z3B0PVL ( ) throws Throwable { data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void WSI2FHS ( ) throws Throwable { goodG2B ( ) ; },0
private void JLITXHUG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void A83Y94GSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void HUWQU4AG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void XQ51CTA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void ESOMF94 ( ) throws Throwable { goodG2B ( ) ; },0
private void N3JLZHJG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void E1SJT9QSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void AMEZU11G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void Y9RIU25 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 8IPMPSY ( ) throws Throwable { goodG2B ( ) ; },0
"private void 4PAPH4MG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void W7W50XOSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 2IMSIT5G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 1EADSC1 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void YMO14PJ ( ) throws Throwable { goodG2B ( ) ; },0
"private void 5TGZBZPG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 4YF2LAASink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 1FQ8U7IG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void M81VBFN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void N5GABHS ( ) throws Throwable { goodG2B ( ) ; },0
"private void UDH95H0G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void DTH0VRMSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 86R2TSNG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 22F731M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 1VMAOGN ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6QOQNY4G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 1OH1QHCSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 43VGVECG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 4Q20S81 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; String stringNumber = properties . getProperty ( ""data"" ) ; if ( stringNumber != null ) { try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void YPL2Y2Q ( ) throws Throwable { goodG2B ( ) ; },0
private void AEWXGD0G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__PropertiesFile_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void ERTBZAN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ArrayList intArrayList = new ArrayList ( data ) ; }",1
public void RPA73E0 ( ) throws Throwable { goodG2B ( ) ; },0
private void J6O6K5MG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void Y9KQUJK ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void XIZUX3KG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 35JGY15G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 3WYXA45 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AYVEW65 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void CGNKBPRG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WQ2FUSFG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SL6IFPP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 81B3G8O ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 9FLHWH9G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void AG9C3P7G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void U2UR43H ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8I72ADC ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 9EIC62PG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void RFVLN3EG2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 5ZNLYKT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void AAG9Z55 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void Q15D9Q5G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1FEN2A2G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void J0JMQSJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void U9CMOU8 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 7C2OKR9G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void BMCFHLRG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IKK5CQN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void SLB8EX9 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void L9ILQ0UG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void HWHLT88G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 6E62LOO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void C6ZRPZY ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void N845U7AG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void LL227H1G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void U5GXZD5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BV3UFYS ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void B685I5KG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void KR8WGMBG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void L4HE0YJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HYK8YX9 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void CTRGI4PG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void FGI56NNG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void TXX8FEY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 1C48Z2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void PT7DDTFG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void JQBXO9U ( ) throws Throwable { goodG2B ( ) ; },0
"public void FMS92TV ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void N7T9I2GG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void OZ2G2WGG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IOMVGE3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ANN1OK7 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void BRWMCPBG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void Y3KA1TGG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void MWHPCZZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HUXC0DQ ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void QAB42E6G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void HSU6PHZG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void KKW637T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7NJR79I ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } ArrayList intArrayList = new ArrayList ( data ) ; }",1
private void 6J8EIXFG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void R42TQUR ( ) throws Throwable { goodG2B ( ) ; },0
"public void 4QHSBIL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } }",1
private void 0156JSJG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void 8R58CY8 ( ) throws Throwable { goodG2B ( ) ; },0
public void KKU1H7X ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"private int NNPPUOA_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void 13C2QPN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void IQSKE5AG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int QI0LUW4G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void V0QCYE6G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int 4KHZU76G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 5OKOERF ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void KUZKPT3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 708YAE2G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void PLHA2SBG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int 6KOFP69Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public int MXQID4WG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int KVV5AWFG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void QCZJIWI ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } }",1
public void 8FNKM6G ( ) throws Throwable { goodG2B ( ) ; },0
private void 1EEK1ZMG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void H07LNO1Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void N8B56DD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void 07K1N2B ( ) throws Throwable { goodG2B ( ) ; },0
private void 4TOA07HG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void EH5DULXG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int JDWHLW7Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void 9AH6KMF ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int 30CWEB4G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void OLX3SMJG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SMKNNSB ( ) throws Throwable { goodG2B ( ) ; },0
private void EC7X1Q0Sink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
"public void 6B5371N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void Y2WT8KS ( ) throws Throwable { goodG2B ( ) ; },0
private void 9RY1NHSG2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void BU2F9E9G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void ZFJMRM4 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_51b ( ) ) . badSink ( data ) ; }",1
public void 35ED06E ( ) throws Throwable { goodG2B ( ) ; },0
private void MYIECZMG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void VZ2IM6JSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YEH5PJCG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 1HSB7D7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_52b ( ) ) . badSink ( data ) ; }",1
public void Y6DEI1Y ( ) throws Throwable { goodG2B ( ) ; },0
private void XIH1SE8G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void JBAF8I3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void G8QAJLBG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void A011HKMSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void X4WVYBMG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 67JNY5J ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53b ( ) ) . badSink ( data ) ; }",1
public void 3H8LRR6 ( ) throws Throwable { goodG2B ( ) ; },0
private void TNNQQ8JG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void WK1U7YKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void MVIJ1YZG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RV643MUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void JQL1W8NG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void VD1VW4ASink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OMPPLPWG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void RVIFYRE ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54b ( ) ) . badSink ( data ) ; }",1
public void C0H0YV3 ( ) throws Throwable { goodG2B ( ) ; },0
private void 2KW00C9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void V01XZ3QSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void WJ9RO31G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 7R7J3R2Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void NECJHF4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void P6S0205Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void 8VKL4ICG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void NHRCI8BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 0YX7MD2G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void AJHRLKD ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 7KZSZOE ( ) throws Throwable { goodG2B ( ) ; },0
private void 2683LQGG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public int EIJ25JESource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public int UB8XDN8G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void ZS20QRZ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 4MJIXQ5 ( ) throws Throwable { goodG2B ( ) ; },0
private void IEZE4ZJG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 7LLA7SHSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void E87AFI6G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void F0OZ2FQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void F972PYJ ( ) throws Throwable { goodG2B ( ) ; },0
private void VU2KCZ1G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 9AK3VMSSink ( CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 03LI14VG2BSink ( CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 82G61F2 ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_68b ( ) ) . badSink ( ) ; }",1
public void VV91DWH ( ) throws Throwable { goodG2B ( ) ; },0
private void WWK7ERIG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void YBZM58FSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void DYURJ4SG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void JF3161U ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 596BWOU ( ) throws Throwable { goodG2B ( ) ; },0
private void D0K86R7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void XRYF2HPSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XD8941TG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 3CE8SE0 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 3AQXZ96 ( ) throws Throwable { goodG2B ( ) ; },0
"private void PISMDNBG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void TZMQGAOSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void MC0GLS4G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void KLSOJSP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 8BYZ4AR ( ) throws Throwable { goodG2B ( ) ; },0
"private void ORI2LVSG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 3NEVEBFSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void FDQDQNYG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 6JX1OUC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 9LERUP1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void R587X6WG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void LJMKIERSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void M4SKCFRG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 7426TVY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 2D0LM13 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 48BAW5JG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void SLR8NGZSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void F7JSCX7G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void LJBH48D ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void BVH9ZZ2 ( ) throws Throwable { goodG2B ( ) ; },0
private void 05G0FN8G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void 7R60IPQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap intHashMap = new HashMap ( data ) ; }",1
public void 4STY4JJ ( ) throws Throwable { goodG2B ( ) ; },0
private void IQ0K270G2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 7LBVV9O ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void I5A1ILIG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void EQVTSJLG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void F24UG9J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HK0BX8S ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void LKKEEGYG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void T7K7LQJG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 4BZ5UIG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void XKCGXMJ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void BK9YVBTG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void XGQ8BRNG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 1IWXSP3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GIL1XDI ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void RVZ4M3KG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void OVP5JG8G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void PM63G8G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void GKB1L05 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void VJA0TILG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void WKSYYY6G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 2IRL1YM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O96C87P ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 5VR6Q4HG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void NV6RAHQG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 48ILSRL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void BEI4JRL ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void OJ57PWSG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 4TLK15OG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void T9ZDJCQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 7NBMMWK ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void SSGKDZ1G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void O9JOA1ZG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void NBHA7JJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void O4PO2UW ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void MQ9YSJ7G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 7WLCZWIG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void PKCWPYM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void M92LI4P ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 4V7IW3TG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void DOJSB8RG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void AC44H0D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void PLG8IIK ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 65CMBVFG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void YVUPN13 ( ) throws Throwable { goodG2B ( ) ; },0
"public void PJ8VYRE ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void I8IEOM0G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void HVXS9B9G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void XRBNZY8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void KGB94A9 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void RQZDUGXG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LXJG3N3G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void GHBX1AN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void NBGMQ96 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 4XH9GNMG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void PBTDVUWG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void CIIV9QP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void EF7NQS5 ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } HashMap intHashMap = new HashMap ( data ) ; }",1
private void 111P9JJG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void A8OFN3W ( ) throws Throwable { goodG2B ( ) ; },0
"public void 0U4WO47 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } }",1
private void BHFJCFBG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void S6LEKUT ( ) throws Throwable { goodG2B ( ) ; },0
public void X8QC1XL ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
"private int 070ZT8Z_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void TF25S3T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void AHD3KQOG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int IEVUXM0G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void I94ENABG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int RJ911LKG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void CW7PB33 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void WHAIZVN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 0GJUF29G2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void O2JJY5FG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int 4YI9AW2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public int KKDZYTUG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int BSJCP1BG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void RRRM302 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } }",1
public void BK51GYN ( ) throws Throwable { goodG2B ( ) ; },0
private void RQIU1V1G2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void XMJUUB5Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
"public void U56EJNP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void CV9ZCB0 ( ) throws Throwable { goodG2B ( ) ; },0
private void A5UG0T7G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void XNO0N7DG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int ESCMS40Source ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void CC2C4LA ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int XF6POI4G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 8M8XZCXG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void IM97TNT ( ) throws Throwable { goodG2B ( ) ; },0
private void H52Y0BQSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
"public void GTAQZ2N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void I1L2B89 ( ) throws Throwable { goodG2B ( ) ; },0
private void 5YLCU0FG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 8K18P13G2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void I82WECN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_51b ( ) ) . badSink ( data ) ; }",1
public void 5RBWHCB ( ) throws Throwable { goodG2B ( ) ; },0
private void 3PFKCG2G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void MAH52TNSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void DUEDT4LG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void KGEYMWP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_52b ( ) ) . badSink ( data ) ; }",1
public void 773KMSP ( ) throws Throwable { goodG2B ( ) ; },0
private void IE34U2UG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void EH5MJ6VSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void AH75V7FG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WLSFEPJSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 8DTBZJNG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void UXSH9TL ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53b ( ) ) . badSink ( data ) ; }",1
public void 7HDSZOH ( ) throws Throwable { goodG2B ( ) ; },0
private void H8VWKNQG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void FWQ1CH8Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void 2B78U29G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 2LO139YSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void 29W0VVYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void ANNDW2QSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 51HIYZHG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
"public void BMFS3PI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54b ( ) ) . badSink ( data ) ; }",1
public void F8YKKT8 ( ) throws Throwable { goodG2B ( ) ; },0
private void BPZVR0VG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void K22J7FISink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void 9WQRSB1G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void O5FNPFYSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void TQTS694G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void X154LYKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void SN9GNA2G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void KBR9DYKSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void X0MIODWG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void T8XPZR7 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 7I9LP68 ( ) throws Throwable { goodG2B ( ) ; },0
private void BH404EPG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public int DVPAEORSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public int 9KIH855G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 2Q6UOQH ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_66b ( ) ) . badSink ( dataArray ) ; }",1
public void KH57GG5 ( ) throws Throwable { goodG2B ( ) ; },0
private void E7IPRZCG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void 1QBN81BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void H11M69RG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void UIJPKRD ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 32LK54W ( ) throws Throwable { goodG2B ( ) ; },0
private void 29EK7HGG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void AIZNTGRSink ( CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void KRUVPJLG2BSink ( CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 2WV13MY ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_68b ( ) ) . badSink ( ) ; }",1
public void ZPP33P7 ( ) throws Throwable { goodG2B ( ) ; },0
private void 8U3SS0QG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void B0HGSX9Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void GSQBVQFG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void YESZGCC ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void MVS4U62 ( ) throws Throwable { goodG2B ( ) ; },0
private void WIT36IFG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void 1Y2IIOCSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 7W3HN90G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void N9D055N ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void RIPCE0Y ( ) throws Throwable { goodG2B ( ) ; },0
"private void ERFYCACG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void CJY5WZJSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 0GQHA71G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void D1DO5RQ ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void PHSIHBO ( ) throws Throwable { goodG2B ( ) ; },0
"private void 39XE7KLG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void CMX0406Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void VKCFANOG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 84CWSW8 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 4HLCKX4 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 9ECCHM9G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void NV17DFDSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void WQ3TWYNG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void HDGJ2RY ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void GZFS8SH ( ) throws Throwable { goodG2B ( ) ; },0
"private void M6RDOPOG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void NEGEBPMSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 6KS8YLHG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void P0ZHM5E ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void O6ODBC3 ( ) throws Throwable { goodG2B ( ) ; },0
private void VDKV4V4G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
"public void TF84Q3T ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashSet intHashSet = new HashSet ( data ) ; }",1
public void GW0Q4HU ( ) throws Throwable { goodG2B ( ) ; },0
private void GIUWCC9G2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void HYZSAHR ( ) throws Throwable { int data ; if ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void YJ2SWM4G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 6Q6KPN6G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 1KVRTC7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void UFTUZ6C ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 9WFHB7VG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void YKJ8D7HG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void EX5DWEJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 5AX696H ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 7UQ1LDRG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 0ZBVY56G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UM9LVW6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void JNQ705G ( ) throws Throwable { int data ; if ( privateTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void VF851UDG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 1Q5PL38G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void A80UXKW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 8LN7AKZ ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void TE4QKH8G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void JPWKQHZG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void I6UPKC1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CH05710 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void PNQUCC6G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void J1PKGSHG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 95O5B19 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 92SZ5BN ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void JFMO93JG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void FE7I5JRG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void F1VB7CV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6C0A4TW ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8KZ6SQPG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void U25GVMAG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void EPAMIKF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void ZAHEUGQ ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void WWQ47RGG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 6LEYNBNG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 4RTVX4E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void CKI96UC ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 7CF6Z4QG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void N0MYIP1G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UPJ24WF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void HGNDU6N ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 6V1ZU2XG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void C249G9I ( ) throws Throwable { goodG2B ( ) ; },0
"public void 5392KWI ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void LEW17OWG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void AYOD3SQG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 2LDP18X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 6K1YJZS ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 8BTGX5TG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void ZTTCRWTG2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void NEXTD6X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void 2G3C2I8 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 4NWTA8WG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 8BHJLY9G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void MJRDFZP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
"public void THZOX4I ( ) throws Throwable { int data ; while ( true ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } break ; } HashSet intHashSet = new HashSet ( data ) ; }",1
private void 32KRP7CG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void EZK8SEG ( ) throws Throwable { goodG2B ( ) ; },0
"public void ZWKJ639 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } }",1
private void WHM08TMG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void O73DP9K ( ) throws Throwable { goodG2B ( ) ; },0
public void VRTJJQ4 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
"private int OW0ZQ91_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public void VPEYIND ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void L4XME1WG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int RQAMZ7UG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void CNCYFYMG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int TPXQ317G2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 73TDRRY ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void LSB51S9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void S5PJDPAG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void SWVFDFAG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int UKA6VP2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22a . badPublicStatic ) { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } } else { data = 0 ; } return data ; }",1
public int ACKGTB2G2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int PL3CG60G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
"public void OURET35 ( ) throws Throwable { int dataCopy ; { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } }",1
public void OC1C0ZT ( ) throws Throwable { goodG2B ( ) ; },0
private void 80N5HPOG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void EV9MX64Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
"public void HUE7KOP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } badSink ( data ) ; }",1
public void WMI9X90 ( ) throws Throwable { goodG2B ( ) ; },0
private void RMCZTMYG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void M1X6DE6G2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
"private int 2WOLEJKSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public void FLZ4SKL ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 8205MKIG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 5HSZUS9G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 70QM3EE ( ) throws Throwable { goodG2B ( ) ; },0
private void ZKBM57USink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
"public void 5R8TX9M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } dataBad = data ; badSink ( ) ; }",1
public void OEJY338 ( ) throws Throwable { goodG2B ( ) ; },0
private void MG1F54GG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void E8FN54KG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
"public void 0FROCYX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_51b ( ) ) . badSink ( data ) ; }",1
public void 0PG84SR ( ) throws Throwable { goodG2B ( ) ; },0
private void UFBKTGDG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void 7SK4JRXSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 1EZVDI2G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void QA0TPAA ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_52b ( ) ) . badSink ( data ) ; }",1
public void 50JSHEY ( ) throws Throwable { goodG2B ( ) ; },0
private void GC6Z55IG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void LZTO6QGSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void AMXXPLYG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void G7I50MTSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void WB967F2G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void ARGIT6A ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53b ( ) ) . badSink ( data ) ; }",1
public void X7X869Q ( ) throws Throwable { goodG2B ( ) ; },0
private void FMP1FNUG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void T0F6CJESink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void T8RRKBVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void Y913INFSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void KJVA9CCG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0WKJWVZSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void TBJQWKCG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
"public void W529BCN ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54b ( ) ) . badSink ( data ) ; }",1
public void KBQJMG9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 575LCZ7G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 142BC3RSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void QAYH8UUG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void WB4ROZ7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void XVRYIG4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void HTS7WRDSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void 60D1IV0G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void Q4NWZWVSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void QPN8RBKG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void BJSRM0E ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void YSBSXBX ( ) throws Throwable { goodG2B ( ) ; },0
private void ALHB6NWG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public int CCBTNUDSource ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } return data ; }",1
public int CYC173OG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
"public void 5EIONIB ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 85XLJUT ( ) throws Throwable { goodG2B ( ) ; },0
private void LTOYTS4G2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void DVBIAI0Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void G8PP4K6G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void VEOL9P7 ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void Q0ZO9SM ( ) throws Throwable { goodG2B ( ) ; },0
private void I2HZ7M7G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void AC8DLLYSink ( CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 9KU5FXCG2BSink ( CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 8FMQUIX ( ) throws Throwable { data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_68b ( ) ) . badSink ( ) ; }",1
public void 1DMLKAT ( ) throws Throwable { goodG2B ( ) ; },0
private void CT9CMS2G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void GOR35IASink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 3SZA0ZTG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 5ND91KS ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void JOLYIUP ( ) throws Throwable { goodG2B ( ) ; },0
private void KH8I15SG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void DB7W21MSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 3SRB560G2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void NPJRPSP ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void J3K6LRL ( ) throws Throwable { goodG2B ( ) ; },0
"private void MZJLGK9G2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void L8OFHHRSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void EDIXN30G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 3EBC1EI ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void LN7UFW1 ( ) throws Throwable { goodG2B ( ) ; },0
"private void VRDLJIDG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void FX8HXG4Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void XV22EI6G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void HMO3AKT ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void CVL8NEV ( ) throws Throwable { goodG2B ( ) ; },0
"private void D5VRT4NG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void U46DHMNSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void K3FODQLG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void G1ZQO1M ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void F0V2RF3 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 0BGV0WCG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void WWRGW7DSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void NJ82828G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void FINQ9EX ( ) throws Throwable { int data ; data = Integer . MIN_VALUE ; { String stringNumber = System . getProperty ( ""user.home"" ) ; try { data = Integer . parseInt ( stringNumber . trim ( ) ) ; } catch ( NumberFormatException exceptNumberFormat ) { IO . logger . log ( Level . WARNING , ""Number format exception parsing data from string"" , exceptNumberFormat ) ; } } CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VPCJ9OS ( ) throws Throwable { goodG2B ( ) ; },0
private void HKUY2H0G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__Property_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void Q7K8YNB ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void KBXEA67 ( ) throws Throwable { goodG2B ( ) ; },0
private void CCB8KMXG2B ( ) throws Throwable { int data ; data = 2 ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 9X71U0V ( ) throws Throwable { int data ; if ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void AXNW72TG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void HBC3T9GG2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void QBX0P11 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void GX68CCW ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 457EB9KG2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 39VVOAQG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void UN3TNVC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void YCXWRIO ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 9MUSM7TG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void P0BWRTWG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void Y8UVL7F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EOUPGTR ( ) throws Throwable { int data ; if ( privateTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void H7VEF5JG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WQW9L73G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void D0YH55S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void I7M9SHY ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void WVG1RVGG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 1DAQTBGG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void T4B6SB6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JOOMCBV ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void MNTACR3G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WJDZ2LVG2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void V8BWHB6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JE7MHT5 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 3S31KAJG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 77Y64GIG2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void V2AQW9Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void O8VWARB ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void YF71V0QG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 7G4G53AG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 68P9TXG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void ZXLIW9Y ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void 15WPPLAG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void WEW00CCG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void QF583VD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void RJ8I8X6 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void WZK91BGG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void BXSQH26G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void LGWQV95 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 7C8GVVR ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void UFIGRH9G2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void H36ZXR1 ( ) throws Throwable { goodG2B ( ) ; },0
public void 29PL7VK ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void HI3RVU4G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void 0HC9873G2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void EPW7TVT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void HMC3E05 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void KQEHQIBG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void S7BOZZ6G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 4YXQB5X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void LJSTTY9 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void JOGYFHFG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
private void OU5J1WAG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void NQTGRT2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EFIESO1 ( ) throws Throwable { int data ; while ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },1
private void MXQSBNPG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } ArrayList intArrayList = new ArrayList ( data ) ; },0
public void XQC4AFW ( ) throws Throwable { goodG2B ( ) ; },0
public void JH2QHEP ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },1
private void RA0DRPEG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { ArrayList intArrayList = new ArrayList ( data ) ; } },0
public void VB8IAOP ( ) throws Throwable { goodG2B ( ) ; },0
public void UHX10P5 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int SOBDFTT_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public void 2XMW7WZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void L05X293G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int 1VX6NR2G2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void 69UTJG2G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private int XRWL07VG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 5VTTPPE ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YBDWHRS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 4LQODNIG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void RBSN1PWG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public int R7SAWTFSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22a . badPublicStatic ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public int BUBYQHSG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 0C7D6PNG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void MYR92OL ( ) throws Throwable { int dataCopy ; { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },1
public void A2JM57V ( ) throws Throwable { goodG2B ( ) ; },0
private void MZZ7KUHG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; ArrayList intArrayList = new ArrayList ( data ) ; } },0
private void OX3TXBMSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XBH7NO7 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; badSink ( data ) ; },1
public void SRFVHX9 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1SKJJZOG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
private void DV74JOWG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int WAWBK9ESource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public void D6242ND ( ) throws Throwable { int data = badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
private int JVBHR8WG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void XVAOAU7G2B ( ) throws Throwable { int data = goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void IAMGNGV ( ) throws Throwable { goodG2B ( ) ; },0
private void N9LDGQXSink ( ) throws Throwable { int data = dataBad ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void B74KQGL ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataBad = data ; badSink ( ) ; },1
public void 1S8ZAFJ ( ) throws Throwable { goodG2B ( ) ; },0
private void FGMF9A6G2BSink ( ) throws Throwable { int data = dataGoodG2B ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void H8HQW5FG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void BDCXBS4 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_51b ( ) ) . badSink ( data ) ; },1
public void UTZ0XDJ ( ) throws Throwable { goodG2B ( ) ; },0
private void 1GI673AG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_51b ( ) ) . goodG2BSink ( data ) ; },0
public void V4FT5QISink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void ATU8PK4G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 8WSSJ84 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_52b ( ) ) . badSink ( data ) ; },1
public void C4VR22V ( ) throws Throwable { goodG2B ( ) ; },0
private void HG24CAHG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_52b ( ) ) . goodG2BSink ( data ) ; },0
public void 6HI0KZKSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void H0HLK7ZG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 3QGS6BDSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YFOULYWG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ZX8ESH5 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53b ( ) ) . badSink ( data ) ; },1
public void BTBLBMH ( ) throws Throwable { goodG2B ( ) ; },0
private void 3ZIW28EG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53b ( ) ) . goodG2BSink ( data ) ; },0
public void HX3NX14Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void 6MU3KKVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void Q71C67XSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void MO0V8G9G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void LMTHSA2Sink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void RWLNEZKG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void SGBCAHK ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54b ( ) ) . badSink ( data ) ; },1
public void QG4K92L ( ) throws Throwable { goodG2B ( ) ; },0
private void LVEKQLWG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54b ( ) ) . goodG2BSink ( data ) ; },0
public void V07G7OQSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void Y8V8CZ6G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void C5EGE8TSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void N717HLPG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 5AAC4M7Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void PZ8BLSTG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void CPVCSQJSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VPOFT8FG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void V99MWI0 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void YD9W0QS ( ) throws Throwable { goodG2B ( ) ; },0
private void A0EJTYIG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public int YNH0RMVSource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public int 2FWJOI0G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void F8DU5XT ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_66b ( ) ) . badSink ( dataArray ) ; },1
public void 0Y0Y12L ( ) throws Throwable { goodG2B ( ) ; },0
private void 45B18BVG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void CJKFTESSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OYXOE3KG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 1K46SB0 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_67b ( ) ) . badSink ( dataContainer ) ; },1
public void SEN026I ( ) throws Throwable { goodG2B ( ) ; },0
private void I96R0F7G2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void I7NN2OOSink ( CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void J236X96G2BSink ( CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void ICH44N9 ( ) throws Throwable { data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_68b ( ) ) . badSink ( ) ; },1
public void AIA2HLD ( ) throws Throwable { goodG2B ( ) ; },0
private void 4VP18P6G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_68b ( ) ) . goodG2BSink ( ) ; },0
public void HIL3LZ8Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 3GVVMM1G2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 32RNN2N ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void QEY9H8S ( ) throws Throwable { goodG2B ( ) ; },0
private void HPEBEAZG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void X3Z49N2Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 9GM7VCDG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 69NSV05 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_72b ( ) ) . badSink ( dataVector ) ; }",1
public void C0Q48VD ( ) throws Throwable { goodG2B ( ) ; },0
"private void QNDC05DG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void EDPJLZRSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OEGH2K8G2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void HZFBN4O ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Q69U0H5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void GON0VOTG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void INMV6TVSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 5SXX70HG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void 9ZZLDU8 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void URZDI2T ( ) throws Throwable { goodG2B ( ) ; },0
"private void KYLDKD6G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 7FZ2F5XSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void HK88GWRG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void BGETEVK ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 26IRLZ8 ( ) throws Throwable { goodG2B ( ) ; },0
"private void VZC5Y18G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void BBXO9ONSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5RSA8QYG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void 95Y5FMI ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_81_bad ( ) ; baseObject . action ( data ) ; },1
public void 9KJNRCE ( ) throws Throwable { goodG2B ( ) ; },0
private void WFXMBR3G2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_ArrayList_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void J6JLLXO ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void B2WRUIE ( ) throws Throwable { goodG2B ( ) ; },0
private void R96MVECG2B ( ) throws Throwable { int data ; data = 2 ; HashMap intHashMap = new HashMap ( data ) ; },0
public void PXYKO7L ( ) throws Throwable { int data ; if ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void J28M740G2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void VRHJPM7G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void AEFGNO9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void EDXIGBQ ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void ZCF6OB5G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void P8JS43NG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void P7DZ2Q4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 4Z46UCC ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void KWSAWWOG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void U4IXVCJG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void YY6D3LD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void JSXAJGA ( ) throws Throwable { int data ; if ( privateTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void V7YATVCG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void L34P5S3G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void G8VFVD2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void FHH1XWF ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void TEFH873G2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void U7ZJ1W4G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void IFI3DCJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 6MAPNO9 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void OTAHJO1G2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void KAVACC6G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void E09O7NC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void UWV17QG ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 0A3YE5WG2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void TOCVFG9G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void JYC3ER5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 2RXQ6C6 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void LAN23JAG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 8MPMKOUG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void IDKDJM2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 5RVR6SF ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 6Y5FJ95G2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void O4FMEUIG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void ZJYE23K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 3WCIP10 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void O6MM02ZG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void FCYFQW7G2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void C7AA403 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void UFR5LUB ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void B829NOOG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void O9L1X3U ( ) throws Throwable { goodG2B ( ) ; },0
public void PAUD60A ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void U912J9YG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void LNP1EAKG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void AV721B6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void X0QS7MJ ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void 02R4KXZG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void AUC4O18G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 17O2XVV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 8MHQWZQ ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void T1RAKYOG2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
private void 60NKR82G2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 65B6PMR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void GZRQIC5 ( ) throws Throwable { int data ; while ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; } HashMap intHashMap = new HashMap ( data ) ; },1
private void QGDLZI2G2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashMap intHashMap = new HashMap ( data ) ; },0
public void 91WZYBW ( ) throws Throwable { goodG2B ( ) ; },0
public void 0RNMNKM ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },1
private void G7ZHG1YG2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashMap intHashMap = new HashMap ( data ) ; } },0
public void 9ZG35KW ( ) throws Throwable { goodG2B ( ) ; },0
public void L2SEYN8 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int 8EICQ6M_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public void 15MISOM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void 7Q2QWRGG2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int TBP5IOMG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void S8N1EUKG2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private int PW1AKOWG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 7KEP5DL ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 0L02773 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void BYOVGYIG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void W8W2TOBG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public int XJFP5O3Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22a . badPublicStatic ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public int CTB0RIAG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int FBND5L1G2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashMap_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void 8KRJMNU ( ) throws Throwable { int dataCopy ; { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },1
public void BFWG8P4 ( ) throws Throwable { goodG2B ( ) ; },0
private void RWP4EPOG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashMap intHashMap = new HashMap ( data ) ; } },0
private void 5489UVESink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void O37782E ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; badSink ( data ) ; },1
public void YQD2GVJ ( ) throws Throwable { goodG2B ( ) ; },0
private void J5O255HG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
private void OZA5GWHG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int 0HQ7TXOSource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public void 38F3SZD ( ) throws Throwable { int data = badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
private int CZEHGD4G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void LDIS4OYG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void CR3BYGO ( ) throws Throwable { goodG2B ( ) ; },0
private void D7CAYZZSink ( ) throws Throwable { int data = dataBad ; HashMap intHashMap = new HashMap ( data ) ; },1
public void KEJTQUY ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataBad = data ; badSink ( ) ; },1
public void WZTR5RY ( ) throws Throwable { goodG2B ( ) ; },0
private void 6XLTOPSG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashMap intHashMap = new HashMap ( data ) ; },0
private void 6B9H50VG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void 9DJNZEF ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_51b ( ) ) . badSink ( data ) ; },1
public void YVH1MHU ( ) throws Throwable { goodG2B ( ) ; },0
private void EUATUT9G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_51b ( ) ) . goodG2BSink ( data ) ; },0
public void X3M5KK4Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void 15HX5OGG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void G2X8CCQ ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_52b ( ) ) . badSink ( data ) ; },1
public void MLZ0BDM ( ) throws Throwable { goodG2B ( ) ; },0
private void VT80B1WG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_52b ( ) ) . goodG2BSink ( data ) ; },0
public void DC9EXFNSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void TJ1MPKKG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 15QH8HISink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void WUTFI81G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void W0HQE61 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53b ( ) ) . badSink ( data ) ; },1
public void 43VX1RJ ( ) throws Throwable { goodG2B ( ) ; },0
private void EGBJRK2G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53b ( ) ) . goodG2BSink ( data ) ; },0
public void H4RITMUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void OA80EY3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 56Y936PSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void TBYAIRSG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 9CAKP58Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void IVRMTFHG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void P0BGKIS ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54b ( ) ) . badSink ( data ) ; },1
public void BWEY4OB ( ) throws Throwable { goodG2B ( ) ; },0
private void MD54QF3G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54b ( ) ) . goodG2BSink ( data ) ; },0
public void K4LF1KDSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void H8H0GXPG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void R7G1Q7FSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void FX0TPM7G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void BWNZYGPSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void H2K3NOVG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 2SBJXYBSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void RTTCBB3G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void P56KOHV ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void WNWD0SH ( ) throws Throwable { goodG2B ( ) ; },0
private void TKX7MCKG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public int MBTJD2SSource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public int Z5XSQD9G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void SLS9QAN ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_66b ( ) ) . badSink ( dataArray ) ; },1
public void VKYC3MX ( ) throws Throwable { goodG2B ( ) ; },0
private void JJ1WOOJG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void ZA28RIHSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void EA84X0ZG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 1DBUK4T ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_67b ( ) ) . badSink ( dataContainer ) ; },1
public void S6G33NX ( ) throws Throwable { goodG2B ( ) ; },0
private void XQHNSRBG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void 9BNVXQ0Sink ( CWE789_Uncontrolled_Mem_Alloc__random_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void CVQXJBFG2BSink ( CWE789_Uncontrolled_Mem_Alloc__random_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
public void SSB9GMM ( ) throws Throwable { data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_68b ( ) ) . badSink ( ) ; },1
public void I0359AN ( ) throws Throwable { goodG2B ( ) ; },0
private void BXBVSG0G2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_68b ( ) ) . goodG2BSink ( ) ; },0
public void 3ZKZX17Sink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 2AF0Q2EG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
public void HQ2EIHW ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void BWZNX1K ( ) throws Throwable { goodG2B ( ) ; },0
private void FBIFO24G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void D8Y9SCJSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void YRLLDDKG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void R1PA9OR ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CN4SS42 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 3D87NWFG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void 8TNSXXNSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 5TB50ACG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void 3PPC89F ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void WPVGM5I ( ) throws Throwable { goodG2B ( ) ; },0
"private void 2QOEVHTG2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void 8BWTTNOSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 1J4EI7TG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void DPE42RR ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 81YR66G ( ) throws Throwable { goodG2B ( ) ; },0
"private void W9UGYBBG2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void X36TN4SSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void NNE1EXGG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void K7JGOB7 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 6WCE73O ( ) throws Throwable { goodG2B ( ) ; },0
"private void JQS1J4UG2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void A0KNZUFSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8K2TS74G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void ESC592O ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; CWE789_Uncontrolled_Mem_Alloc__random_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_81_bad ( ) ; baseObject . action ( data ) ; },1
public void P5LAI39 ( ) throws Throwable { goodG2B ( ) ; },0
private void 8OV78HJG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__random_HashMap_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_HashMap_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void I499TJ3 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 7EIYAE0 ( ) throws Throwable { goodG2B ( ) ; },0
private void RDGB25IG2B ( ) throws Throwable { int data ; data = 2 ; HashSet intHashSet = new HashSet ( data ) ; },0
public void XJVDXWB ( ) throws Throwable { int data ; if ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void 0LECH6WG2B1 ( ) throws Throwable { int data ; if ( false ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void E31F356G2B2 ( ) throws Throwable { int data ; if ( true ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void LSMGIA7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void U8H9LFE ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void B4796C3G2B1 ( ) throws Throwable { int data ; if ( 5 != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 89V7JWNG2B2 ( ) throws Throwable { int data ; if ( 5 == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void AKI4SAD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void BTWEQKY ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void LF9RYSSG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 8WLZUIGG2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void WXPUXPW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void HKNYUI2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void ZOFUPZTG2B1 ( ) throws Throwable { int data ; if ( privateFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 37SR2Z3G2B2 ( ) throws Throwable { int data ; if ( privateTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void 7XHR6V2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void QBW1FIA ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void LAUMHXQG2B1 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void UCZYXA1G2B2 ( ) throws Throwable { int data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void J0ZPV5N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 1RMKL3Z ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void CLSWJKJG2B1 ( ) throws Throwable { int data ; if ( privateFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 1MQS558G2B2 ( ) throws Throwable { int data ; if ( privateFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void DIXCJUM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 77ZS6VX ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void UUSDPZ9G2B1 ( ) throws Throwable { int data ; if ( privateReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void WZDERH2G2B2 ( ) throws Throwable { int data ; if ( privateReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void CI2ZCTP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void UBC9FOK ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void NDG9BWUG2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FALSE ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 63031VQG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_TRUE ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void G9AHS6K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void N8HE58T ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void 6ME8OCAG2B1 ( ) throws Throwable { int data ; if ( IO . staticFalse ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 8UVHXRFG2B2 ( ) throws Throwable { int data ; if ( IO . staticTrue ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void UJP3DNX ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void FYVMK6K ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void COJ1BUYG2B1 ( ) throws Throwable { int data ; if ( IO . staticReturnsFalse ( ) ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 4XE5BOUG2B2 ( ) throws Throwable { int data ; if ( IO . staticReturnsTrue ( ) ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void D65TWAL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 0Y8066Y ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void IIFFIRMG2B ( ) throws Throwable { int data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = 2 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void JFXUFRR ( ) throws Throwable { goodG2B ( ) ; },0
public void KCFQ0JD ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void RYDGSB2G2B1 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void NTDZM7NG2B2 ( ) throws Throwable { int data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void OYCF3AK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void ZP7O7ZG ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void 0E06QOTG2B1 ( ) throws Throwable { int data ; if ( IO . staticFive != 5 ) { data = 0 ; } else { data = 2 ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 3CC5MR1G2B2 ( ) throws Throwable { int data ; if ( IO . staticFive == 5 ) { data = 2 ; } else { data = 0 ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void GUNT3I3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void 36TA1LC ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void KSZYO15G2B1 ( ) throws Throwable { int data = 0 ; switch ( 5 ) { case 6 : data = 0 ; break ; default : data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
private void 7FDBR5RG2B2 ( ) throws Throwable { int data = 0 ; switch ( 6 ) { case 6 : data = 2 ; break ; default : data = 0 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void Y6PYM02 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
public void IKSHRB6 ( ) throws Throwable { int data ; while ( true ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; break ; } HashSet intHashSet = new HashSet ( data ) ; },1
private void XNJQOQZG2B ( ) throws Throwable { int data ; while ( true ) { data = 2 ; break ; } HashSet intHashSet = new HashSet ( data ) ; },0
public void TTJP9RL ( ) throws Throwable { goodG2B ( ) ; },0
public void XDYVPZ3 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },1
private void DJE1HG2G2B ( ) throws Throwable { int data ; data = 2 ; for ( int i = 0 ; i < 1 ; i ++ ) { HashSet intHashSet = new HashSet ( data ) ; } },0
public void 0HN10ZK ( ) throws Throwable { goodG2B ( ) ; },0
public void LMD4410 ( ) throws Throwable { int data ; badPrivate = true ; data = bad_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 6GBCIF6_source ( ) throws Throwable { int data ; if ( badPrivate ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public void RP5EY5L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void DO86PK3G2B1 ( ) throws Throwable { int data ; goodG2B1_private = false ; data = goodG2B1_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int ACP9FEWG2B1_source ( ) throws Throwable { int data = 0 ; if ( goodG2B1_private ) { data = 0 ; } else { data = 2 ; } return data ; },0
private void HAHK476G2B2 ( ) throws Throwable { int data ; goodG2B2_private = true ; data = goodG2B2_source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private int VBN0CIPG2B2_source ( ) throws Throwable { int data = 0 ; if ( goodG2B2_private ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void IS4BH8U ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void QGP6ZR2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void W8FQNLOG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void D363ZEOG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public int R0LE85XSource ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22a . badPublicStatic ) { data = ( new SecureRandom ( ) ) . nextInt ( ) ; } else { data = 0 ; } return data ; },1
public int VJFRMMRG2B1Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22a . goodG2B1PublicStatic ) { data = 0 ; } else { data = 2 ; } return data ; },0
public int 1YJWZ0VG2B2Source ( ) throws Throwable { int data ; if ( CWE789_Uncontrolled_Mem_Alloc__random_HashSet_22a . goodG2B2PublicStatic ) { data = 2 ; } else { data = 0 ; } return data ; },0
public void LTG138P ( ) throws Throwable { int dataCopy ; { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },1
public void BV85IUF ( ) throws Throwable { goodG2B ( ) ; },0
private void 2V1VU4JG2B ( ) throws Throwable { int dataCopy ; { int data ; data = 2 ; dataCopy = data ; } { int data = dataCopy ; HashSet intHashSet = new HashSet ( data ) ; } },0
private void RQDR3DISink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void F2EKB20 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; badSink ( data ) ; },1
public void 50LW4RI ( ) throws Throwable { goodG2B ( ) ; },0
private void 9J4D5BIG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
private void 8LCI72SG2B ( ) throws Throwable { int data ; data = 2 ; goodG2BSink ( data ) ; },0
private int 0ME66MFSource ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public void SOFD01G ( ) throws Throwable { int data = badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
private int 101SRGRG2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
private void 8PP7AVFG2B ( ) throws Throwable { int data = goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void SNVD3UF ( ) throws Throwable { goodG2B ( ) ; },0
private void YJ03TUCSink ( ) throws Throwable { int data = dataBad ; HashSet intHashSet = new HashSet ( data ) ; },1
public void FKV81KK ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; dataBad = data ; badSink ( ) ; },1
public void 996PQUW ( ) throws Throwable { goodG2B ( ) ; },0
private void 721SIBGG2BSink ( ) throws Throwable { int data = dataGoodG2B ; HashSet intHashSet = new HashSet ( data ) ; },0
private void ABXJ2PQG2B ( ) throws Throwable { int data ; data = 2 ; dataGoodG2B = data ; goodG2BSink ( ) ; },0
public void AN6A73W ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_51b ( ) ) . badSink ( data ) ; },1
public void 00RSAX7 ( ) throws Throwable { goodG2B ( ) ; },0
private void PP5HLBAG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_51b ( ) ) . goodG2BSink ( data ) ; },0
public void JY0C8J6Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void N1B9KEEG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void SA3NYMS ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_52b ( ) ) . badSink ( data ) ; },1
public void IK3K4FI ( ) throws Throwable { goodG2B ( ) ; },0
private void 0E7117UG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_52b ( ) ) . goodG2BSink ( data ) ; },0
public void BNXPFQZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void B1SCQAOG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void AM8GPCZSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void CTL7BX9G2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void ALQESFS ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53b ( ) ) . badSink ( data ) ; },1
public void 28X717I ( ) throws Throwable { goodG2B ( ) ; },0
private void J28XG76G2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53b ( ) ) . goodG2BSink ( data ) ; },0
public void VKRMCDUSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void WK4MO7PG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 6O3MAE6Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void B4699GQG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void SK9YPA1Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void U0OO6HSG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void G4GI88A ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54b ( ) ) . badSink ( data ) ; },1
public void 02048I8 ( ) throws Throwable { goodG2B ( ) ; },0
private void 0OUINUFG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54b ( ) ) . goodG2BSink ( data ) ; },0
public void 75GO7W6Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void PDYUSYPG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void OY3W98QSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void VYMGMG9G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void WCIC6DNSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void 80XTJF3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void I48KANHSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 0E91F5XG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void XA04OXX ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 3ACH809 ( ) throws Throwable { goodG2B ( ) ; },0
private void E0HNXMUG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public int 3XY2O53Source ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; return data ; },1
public int 6HTWOB1G2BSource ( ) throws Throwable { int data ; data = 2 ; return data ; },0
public void NVIOBRF ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_66b ( ) ) . badSink ( dataArray ) ; },1
public void FOKH3MY ( ) throws Throwable { goodG2B ( ) ; },0
private void 4BW3WCTG2B ( ) throws Throwable { int data ; data = 2 ; int [ ] dataArray = new int [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_66b ( ) ) . goodG2BSink ( dataArray ) ; },0
public void XZ15N64Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void WVYZI30G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
public void NJ73CBV ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_67b ( ) ) . badSink ( dataContainer ) ; },1
public void RV764R9 ( ) throws Throwable { goodG2B ( ) ; },0
private void W9VIKLTG2B ( ) throws Throwable { int data ; data = 2 ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_67b ( ) ) . goodG2BSink ( dataContainer ) ; },0
public void II15Z5NSink ( CWE789_Uncontrolled_Mem_Alloc__random_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void LYZAOW8G2BSink ( CWE789_Uncontrolled_Mem_Alloc__random_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 3B1GJ7S ( ) throws Throwable { data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_68b ( ) ) . badSink ( ) ; },1
public void SS3MV47 ( ) throws Throwable { goodG2B ( ) ; },0
private void M6MI6DLG2B ( ) throws Throwable { data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_68b ( ) ) . goodG2BSink ( ) ; },0
public void DKRGWRVSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void W4U0N4EG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__random_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 07VLH0N ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_71b ( ) ) . badSink ( ( Object ) data ) ; },1
public void ID6G38P ( ) throws Throwable { goodG2B ( ) ; },0
private void 7OENEIGG2B ( ) throws Throwable { int data ; data = 2 ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; },0
public void IS37GS0Sink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 6CV2Q6TG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void ZIM5WT2 ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 62Z13P5 ( ) throws Throwable { goodG2B ( ) ; },0
"private void MP60KVRG2B ( ) throws Throwable { int data ; data = 2 ; Vector < Integer > dataVector = new Vector < Integer > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
public void X54BKVTSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void KBI1LIJG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void N0GKUNT ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void UMRR8X0 ( ) throws Throwable { goodG2B ( ) ; },0
"private void 6XNAAY1G2B ( ) throws Throwable { int data ; data = 2 ; LinkedList < Integer > dataLinkedList = new LinkedList < Integer > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
public void DVBL6DDSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void EHE83X6G2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void 845PC7F ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void GQG5P4N ( ) throws Throwable { goodG2B ( ) ; },0
"private void 22X44S1G2B ( ) throws Throwable { int data ; data = 2 ; HashMap < Integer , Integer > dataHashMap = new HashMap < Integer , Integer > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"public void 0FNUQFJSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void 1PPE8FXG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void TG2ZQTS ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void MI8XZ87 ( ) throws Throwable { goodG2B ( ) ; },0
"private void CSIFFO5G2B ( ) throws Throwable { int data ; data = 2 ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 51CRYSJSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void AMYUEA6G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void S7C28VJ ( ) throws Throwable { int data ; data = ( new SecureRandom ( ) ) . nextInt ( ) ; CWE789_Uncontrolled_Mem_Alloc__random_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_81_bad ( ) ; baseObject . action ( data ) ; },1
public void B8W4Q5V ( ) throws Throwable { goodG2B ( ) ; },0
private void I9EQN5CG2B ( ) throws Throwable { int data ; data = 2 ; CWE789_Uncontrolled_Mem_Alloc__random_HashSet_81_base baseObject = new CWE789_Uncontrolled_Mem_Alloc__random_HashSet_81_goodG2B ( ) ; baseObject . action ( data ) ; },0
public void 4WHCDC9 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_22b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 00M6P8U ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void C72ICVGG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_22b ( ) ) . goodG2B1Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
private void SHNCMW8G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_22b ( ) ) . goodG2B2Source ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void JJV9KQDSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void VGYTYIWG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 80IJLO3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_52c ( ) ) . badSink ( data ) ; },1
public void AZ58N2SG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_52c ( ) ) . goodG2BSink ( data ) ; },0
public void AMVW8HYSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void M8WVP13G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void M481URVSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_53c ( ) ) . badSink ( data ) ; },1
public void A7P2SO4G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_53c ( ) ) . goodG2BSink ( data ) ; },0
public void OE7CPEFSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_53d ( ) ) . badSink ( data ) ; },1
public void FOGMOZ3G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 6SUVT6VSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OCXLKGYG2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void PV5LY71Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54c ( ) ) . badSink ( data ) ; },1
public void 9R0CFZ0G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 122YPVPSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54d ( ) ) . badSink ( data ) ; },1
public void N9XJY4QG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54d ( ) ) . goodG2BSink ( data ) ; },0
public void DOY7BF3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54e ( ) ) . badSink ( data ) ; },1
public void 9CUVISMG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_54e ( ) ) . goodG2BSink ( data ) ; },0
public void KMRKQ0YSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },1
public void XTSJZE7G2BSink ( int data ) throws Throwable { ArrayList intArrayList = new ArrayList ( data ) ; },0
public void L1N9W6K ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_61b ( ) ) . badSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void GCRB983 ( ) throws Throwable { goodG2B ( ) ; },0
private void VGN0ZS6G2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_61b ( ) ) . goodG2BSource ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 78P8T2ASink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 655WE70G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void S6YWX4WSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 1LLG1CHG2BSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void OKA0KGOSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void OSZB55DG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_ArrayList_68a . data ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void 3TOW7TCSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void 2J8Y51BG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void MCJUETLSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void IRJBEUJG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
public void Y3FRGQ3Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },1
public void RHSY2NUG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; },0
"public void ZUPT5EVSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",1
"public void ZIX8L9UG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; ArrayList intArrayList = new ArrayList ( data ) ; }",0
"public void 8BXSGN4Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void NM3G39SG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; ArrayList intArrayList = new ArrayList ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void YPZJ5M5 ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_22b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void E5RA8SC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void FSUXW2QG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_22b ( ) ) . goodG2B1Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
private void YXUX9IWG2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_22b ( ) ) . goodG2B2Source ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 8ILAFGGSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void QGE8HFNG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void FQWNKF6Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_52c ( ) ) . badSink ( data ) ; },1
public void ZUDIPDTG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_52c ( ) ) . goodG2BSink ( data ) ; },0
public void FCJNXMISink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void OAJO6XIG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void MJJLFLZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_53c ( ) ) . badSink ( data ) ; },1
public void IY8B2HHG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 94SUS3PSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_53d ( ) ) . badSink ( data ) ; },1
public void CSS3FX8G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_53d ( ) ) . goodG2BSink ( data ) ; },0
public void FE30REISink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void E2MXAS8G2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void 1C82DD2Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54c ( ) ) . badSink ( data ) ; },1
public void HRQ0FZ0G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54c ( ) ) . goodG2BSink ( data ) ; },0
public void TAGJGDZSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54d ( ) ) . badSink ( data ) ; },1
public void L7JTA5RG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54d ( ) ) . goodG2BSink ( data ) ; },0
public void H8OL9S8Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54e ( ) ) . badSink ( data ) ; },1
public void WB3B9P7G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_54e ( ) ) . goodG2BSink ( data ) ; },0
public void J0I97E3Sink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },1
public void YMKKU1BG2BSink ( int data ) throws Throwable { HashMap intHashMap = new HashMap ( data ) ; },0
public void F81KK71 ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_61b ( ) ) . badSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void TIYP0B5 ( ) throws Throwable { goodG2B ( ) ; },0
private void 1KCE89HG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_61b ( ) ) . goodG2BSource ( ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 68D1BP8Sink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },1
public void 4KYG7G3G2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 66TSLOQSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },1
public void ZPGFOQ9G2BSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashMap intHashMap = new HashMap ( data ) ; },0
public void JYBG47RSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },1
public void SI23R5AG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashMap_68a . data ; HashMap intHashMap = new HashMap ( data ) ; },0
public void 8RJFC8VSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },1
public void R0048XOG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashMap intHashMap = new HashMap ( data ) ; },0
public void IT5R21KSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void C9U4YARG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
public void WNA0QB0Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },1
public void FZW5XQZG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; },0
"public void EAM7DGBSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",1
"public void LDBUPD6G2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashMap intHashMap = new HashMap ( data ) ; }",0
"public void CU6D3VESink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void HNWZ0J2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashMap intHashMap = new HashMap ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void QZ4SRAO ( ) throws Throwable { int data ; badPublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_22b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void SGUVY21 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; },0
private void AZVW40JG2B1 ( ) throws Throwable { int data ; goodG2B1PublicStatic = false ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_22b ( ) ) . goodG2B1Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
private void ZARMTY1G2B2 ( ) throws Throwable { int data ; goodG2B2PublicStatic = true ; data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_22b ( ) ) . goodG2B2Source ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 2Y887BVSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void XX4NVGPG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void AVBJ7CDSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_52c ( ) ) . badSink ( data ) ; },1
public void MRTLC93G2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_52c ( ) ) . goodG2BSink ( data ) ; },0
public void W355CEMSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void MG6O26TG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void JH353L5Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_53c ( ) ) . badSink ( data ) ; },1
public void R3GJ8MUG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_53c ( ) ) . goodG2BSink ( data ) ; },0
public void TDJJO43Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_53d ( ) ) . badSink ( data ) ; },1
public void G75DH9UG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_53d ( ) ) . goodG2BSink ( data ) ; },0
public void PNZIWL3Sink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void F9U15RLG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void JACCCO9Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54c ( ) ) . badSink ( data ) ; },1
public void DXE7PXMG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54c ( ) ) . goodG2BSink ( data ) ; },0
public void UFLP0BTSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54d ( ) ) . badSink ( data ) ; },1
public void RN5VSWZG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 5SJMYH3Sink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54e ( ) ) . badSink ( data ) ; },1
public void 1TQV9ESG2BSink ( int data ) throws Throwable { ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_54e ( ) ) . goodG2BSink ( data ) ; },0
public void F5F585RSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },1
public void 2DEUKHMG2BSink ( int data ) throws Throwable { HashSet intHashSet = new HashSet ( data ) ; },0
public void DT1HE9E ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_61b ( ) ) . badSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 0F66PLQ ( ) throws Throwable { goodG2B ( ) ; },0
private void 4GFGUHEG2B ( ) throws Throwable { int data = ( new CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_61b ( ) ) . goodG2BSource ( ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 01FKSXDSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },1
public void JJMXSLQG2BSink ( int dataArray [ ] ) throws Throwable { int data = dataArray [ 2 ] ; HashSet intHashSet = new HashSet ( data ) ; },0
public void R85K1TWSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 83BVX55G2BSink ( CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_67a . Container dataContainer ) throws Throwable { int data = dataContainer . containerOne ; HashSet intHashSet = new HashSet ( data ) ; },0
public void PFQ62OFSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },1
public void TA1R6GEG2BSink ( ) throws Throwable { int data = CWE789_Uncontrolled_Mem_Alloc__URLConnection_HashSet_68a . data ; HashSet intHashSet = new HashSet ( data ) ; },0
public void FSGB7PJSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },1
public void W0ANKDIG2BSink ( Object dataObject ) throws Throwable { int data = ( Integer ) dataObject ; HashSet intHashSet = new HashSet ( data ) ; },0
public void LV2ZMDQSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void 0L2Q3WRG2BSink ( Vector < Integer > dataVector ) throws Throwable { int data = dataVector . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
public void 1RP15N0Sink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },1
public void K7594WVG2BSink ( LinkedList < Integer > dataLinkedList ) throws Throwable { int data = dataLinkedList . remove ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; },0
"public void JR9TWWBSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",1
"public void IDQTBHTG2BSink ( HashMap < Integer , Integer > dataHashMap ) throws Throwable { int data = dataHashMap . get ( 2 ) ; HashSet intHashSet = new HashSet ( data ) ; }",0
"public void 9GVXM11Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ZFBVB73G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; int data = ( Integer ) streamObjectInput . readObject ( ) ; HashSet intHashSet = new HashSet ( data ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
